shift/reduce conflict in state 0 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 1 resolved as shift.
shift/reduce conflict in state 16 resolved as shift.
shift/reduce conflict in state 16 resolved as shift.
shift/reduce conflict in state 16 resolved as shift.
shift/reduce conflict in state 17 resolved as shift.
shift/reduce conflict in state 17 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
shift/reduce conflict in state 18 resolved as shift.
reduce/reduce conflict in state 22 resolved using rule 1 (programa -> variables enunciados .).
reduce/reduce conflict in state 28 resolved using rule 10 (enunciado -> enunciado_invocar .).
reduce/reduce conflict in state 29 resolved using rule 9 (enunciado -> enunciado_asignacion .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
reduce/reduce conflict in state 39 resolved using rule 4 (enunciados -> vacio .).
shift/reduce conflict in state 42 resolved as shift.
shift/reduce conflict in state 49 resolved as shift.
shift/reduce conflict in state 53 resolved as shift.
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
reduce/reduce conflict in state 75 resolved using rule 3 (enunciados -> enunciado enunciados .).
shift/reduce conflict in state 80 resolved as shift.
shift/reduce conflict in state 95 resolved as shift.
shift/reduce conflict in state 106 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 107 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 118 resolved as shift.
shift/reduce conflict in state 123 resolved as shift.
reduce/reduce conflict in state 124 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 124 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 124 resolved using rule 64 (limite -> ENTERO .).
reduce/reduce conflict in state 124 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 125 resolved using rule 62 (pos -> expresion_condicion .).
reduce/reduce conflict in state 126 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 126 resolved using rule 66 (limite -> ID .).
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 130 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
shift/reduce conflict in state 131 resolved as shift.
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 133 resolved using rule 51 (expresion -> expresion_suma .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 134 resolved using rule 53 (expresion -> expresion_concatenacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
reduce/reduce conflict in state 135 resolved using rule 52 (expresion -> expresion_comparacion .).
shift/reduce conflict in state 141 resolved as shift.
reduce/reduce conflict in state 143 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 143 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 145 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 148 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 148 resolved using rule 64 (limite -> ENTERO .).
reduce/reduce conflict in state 148 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 148 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 149 resolved using rule 62 (pos -> expresion_condicion .).
reduce/reduce conflict in state 150 resolved using rule 66 (limite -> ID .).
reduce/reduce conflict in state 150 resolved using rule 61 (pos -> ID .).
shift/reduce conflict in state 153 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 163 resolved as shift.
shift/reduce conflict in state 165 resolved as shift.
reduce/reduce conflict in state 171 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 171 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 172 resolved using rule 27 (expresion_condicion -> expresion_suma .).
reduce/reduce conflict in state 173 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 173 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 175 resolved using rule 28 (expresion_condicion -> expresion_comparacion .).
reduce/reduce conflict in state 178 resolved using rule 64 (limite -> ENTERO .).
reduce/reduce conflict in state 178 resolved using rule 64 (limite -> ENTERO .).
reduce/reduce conflict in state 178 resolved using rule 64 (limite -> ENTERO .).
reduce/reduce conflict in state 180 resolved using rule 66 (limite -> ID .).
reduce/reduce conflict in state 180 resolved using rule 66 (limite -> ID .).
shift/reduce conflict in state 183 resolved as shift.
reduce/reduce conflict in state 185 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 185 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 185 resolved using rule 66 (limite -> ID .).
reduce/reduce conflict in state 185 resolved using rule 61 (pos -> ID .).
shift/reduce conflict in state 187 resolved as shift.
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
reduce/reduce conflict in state 187 resolved using rule 77 (expresion_pow -> expresion_simple .).
shift/reduce conflict in state 188 resolved as shift.
reduce/reduce conflict in state 193 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 194 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 195 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 195 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 196 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 196 resolved using rule 59 (pos -> ENTERO .).
reduce/reduce conflict in state 197 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 197 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 198 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 198 resolved using rule 66 (limite -> ID .).
reduce/reduce conflict in state 198 resolved using rule 61 (pos -> ID .).
reduce/reduce conflict in state 198 resolved using rule 61 (pos -> ID .).
shift/reduce conflict in state 203 resolved as shift.
shift/reduce conflict in state 204 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
shift/reduce conflict in state 205 resolved as shift.
reduce/reduce conflict in state 212 resolved using rule 64 (limite -> ENTERO .).
reduce/reduce conflict in state 213 resolved using rule 66 (limite -> ID .).
reduce/reduce conflict in state 215 resolved using rule 66 (limite -> ID .).
reduce/reduce conflict in state 215 resolved using rule 66 (limite -> ID .).
reduce/reduce conflict in state 215 resolved using rule 66 (limite -> ID .).
shift/reduce conflict in state 222 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 227 resolved as shift.
shift/reduce conflict in state 233 resolved as shift.


Unused terminals:


Grammar

Rule 1     programa -> variables enunciados
Rule 2     vacio -> <empty>
Rule 3     enunciados -> enunciado enunciados
Rule 4     enunciados -> vacio
Rule 5     enunciado -> enunciado_print
Rule 6     enunciado -> enunciado_loop
Rule 7     enunciado -> enunciado_if
Rule 8     enunciado -> enunciado_read
Rule 9     enunciado -> enunciado_asignacion
Rule 10    enunciado -> enunciado_invocar
Rule 11    enunciado -> enunciado_declaracion
Rule 12    enunciado -> enunciado_return
Rule 13    enunciado -> enunciados_ciclos
Rule 14    enunciado -> variables
Rule 15    enunciado -> expresion_comparacion
Rule 16    variables -> VAR ID mas_variables
Rule 17    variables -> VAR enunciado_asignacion mas_variables
Rule 18    variables -> vacio
Rule 19    mas_variables -> COMA ID mas_variables
Rule 20    mas_variables -> COMA enunciado_asignacion mas_variables
Rule 21    mas_variables -> vacio
Rule 22    enunciado_print -> WRITE expresion
Rule 23    enunciado_loop -> enunciado_whila
Rule 24    enunciado_loop -> enunciado_for
Rule 25    enunciados_ciclos -> enunciados
Rule 26    enunciados_ciclos -> BREAK
Rule 27    expresion_condicion -> expresion_suma
Rule 28    expresion_condicion -> expresion_comparacion
Rule 29    enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END
Rule 30    expfor -> lista
Rule 31    expfor -> CADENA
Rule 32    expfor -> ID
Rule 33    expfor -> expresion_lista
Rule 34    expfor -> enunciado_invocar
Rule 35    enunciado_for -> FOR ID IN expfor enunciados_ciclos END
Rule 36    enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else
Rule 37    enunciado_else -> ELSE enunciados END enunciado_else
Rule 38    enunciado_else -> vacio
Rule 39    enunciado_read -> READ expresion
Rule 40    enunciado_asignacion -> ID IS expresion
Rule 41    enunciado_asignacion -> expresion_lst IS expresion
Rule 42    enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER
Rule 43    enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END
Rule 44    parametrosf -> ID mas_elementosf
Rule 45    parametrosf -> ID IS expresion mas_elementosf
Rule 46    parametrosf -> vacio
Rule 47    mas_elementosf -> COMA ID mas_elementosf
Rule 48    mas_elementosf -> COMA ID IS expresion mas_elementosf
Rule 49    mas_elementosf -> vacio
Rule 50    enunciado_return -> RETURN expresion
Rule 51    expresion -> expresion_suma
Rule 52    expresion -> expresion_comparacion
Rule 53    expresion -> expresion_concatenacion
Rule 54    expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER
Rule 55    expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER
Rule 56    expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER
Rule 57    expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
Rule 58    expresion_lst -> ID CORCHIZQ pos CORCHDER
Rule 59    pos -> ENTERO
Rule 60    pos -> MENOS pos
Rule 61    pos -> ID
Rule 62    pos -> expresion_condicion
Rule 63    pos -> PARIZQ pos PARDER
Rule 64    limite -> ENTERO
Rule 65    limite -> MENOS limite
Rule 66    limite -> ID
Rule 67    limite -> expresion_condicion
Rule 68    limite -> PARIZQ limite PARDER
Rule 69    limite -> vacio
Rule 70    parametros -> expresion mas_elementos
Rule 71    parametros -> vacio
Rule 72    expresion_suma -> expresion_mul operador_suma expresion_suma
Rule 73    expresion_suma -> expresion_mul
Rule 74    expresion_mul -> expresion_pow operador_mul expresion_mul
Rule 75    expresion_mul -> expresion_pow
Rule 76    expresion_pow -> expresion_simple POTENCIA expresion_simple
Rule 77    expresion_pow -> expresion_simple
Rule 78    operador_suma -> MAS
Rule 79    operador_suma -> MENOS
Rule 80    operador_mul -> POR
Rule 81    operador_mul -> ENTRE
Rule 82    operador_mul -> MODULO
Rule 83    expresion_comparacion -> expresion operador_comparacion expresion2
Rule 84    expresion2 -> expresion_suma
Rule 85    expresion2 -> expresion_comparacion
Rule 86    expresion2 -> expresion_concatenacion
Rule 87    operador_comparacion -> AND
Rule 88    operador_comparacion -> OR
Rule 89    operador_comparacion -> MAYOR
Rule 90    operador_comparacion -> MENOR
Rule 91    operador_comparacion -> MAYORIGUAL
Rule 92    operador_comparacion -> MENORIGUAL
Rule 93    operador_comparacion -> IGUAL
Rule 94    operador_comparacion -> NOIGUAL
Rule 95    expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas
Rule 96    concatenables -> CADENA
Rule 97    concatenables -> ID
Rule 98    concatenables -> ENTERO
Rule 99    concatenables -> lista
Rule 100   concatenables -> enunciado_invocar
Rule 101   mas_cadenas -> PUNTOCOMA concatenables mas_cadenas
Rule 102   mas_cadenas -> vacio
Rule 103   lista -> CORCHIZQ CORCHDER
Rule 104   lista -> CORCHIZQ expresion mas_elementos CORCHDER
Rule 105   mas_elementos -> COMA expresion mas_elementos
Rule 106   mas_elementos -> vacio
Rule 107   expresion_simple -> ID
Rule 108   expresion_simple -> ENTERO
Rule 109   expresion_simple -> MENOS expresion_simple
Rule 110   expresion_simple -> PARIZQ expresion PARDER
Rule 111   expresion_simple -> expresion_lista
Rule 112   expresion_simple -> expresion_lst
Rule 113   expresion_simple -> enunciado_invocar
Rule 114   expresion_simple -> enunciado_asignacion
Rule 115   expresion_simple -> lista
Rule 116   expresion_simple -> CADENA
Rule 117   expresion_simple -> DECIMAL

Terminals, with rules where they appear

AND                  : 87
BREAK                : 26
CADENA               : 31 96 116
COMA                 : 19 20 47 48 105
CORCHDER             : 54 55 56 57 58 103 104
CORCHIZQ             : 54 55 56 57 58 103 104
DECIMAL              : 117
DOSPUNTOS            : 54 55 56 57
ELSE                 : 37
END                  : 29 35 36 37 43
ENTERO               : 59 64 98 108
ENTRE                : 81
FOR                  : 35
FUNC                 : 43
ID                   : 16 19 32 35 40 42 43 44 45 47 48 54 55 56 57 58 61 66 97 107
IF                   : 36
IGUAL                : 93
IN                   : 35
IS                   : 40 41 45 48
MAS                  : 78
MAYOR                : 89
MAYORIGUAL           : 91
MENOR                : 90
MENORIGUAL           : 92
MENOS                : 60 65 79 109
MODULO               : 82
NOIGUAL              : 94
OR                   : 88
PARDER               : 42 43 63 68 110
PARIZQ               : 42 43 63 68 110
POR                  : 80
POTENCIA             : 76
PUNTOCOMA            : 95 101
READ                 : 39
RETURN               : 50
SUMMON               : 42
THEN                 : 29 36
VAR                  : 16 17
WHILA                : 29
WRITE                : 22
error                : 

Nonterminals, with rules where they appear

concatenables        : 95 95 101
enunciado            : 3
enunciado_asignacion : 9 17 20 114
enunciado_declaracion : 11
enunciado_else       : 36 37
enunciado_for        : 24
enunciado_if         : 7
enunciado_invocar    : 10 34 100 113
enunciado_loop       : 6
enunciado_print      : 5
enunciado_read       : 8
enunciado_return     : 12
enunciado_whila      : 23
enunciados           : 1 3 25 36 37 43
enunciados_ciclos    : 13 29 35
expfor               : 35
expresion            : 22 39 40 41 45 48 50 70 83 104 105 110
expresion2           : 83
expresion_comparacion : 15 28 52 85
expresion_concatenacion : 53 86
expresion_condicion  : 29 36 62 67
expresion_lista      : 33 111
expresion_lst        : 41 112
expresion_mul        : 72 73 74
expresion_pow        : 74 75
expresion_simple     : 76 76 77 109
expresion_suma       : 27 51 72 84
limite               : 55 56 57 57 65 68
lista                : 30 99 115
mas_cadenas          : 95 101
mas_elementos        : 70 104 105
mas_elementosf       : 44 45 47 48
mas_variables        : 16 17 19 20
operador_comparacion : 83
operador_mul         : 74
operador_suma        : 72
parametros           : 42
parametrosf          : 43
pos                  : 58 60 63
programa             : 0
vacio                : 4 18 21 38 46 49 69 71 102 106
variables            : 1 14


Parsing method: LALR


state 0

    (0) S' -> . programa
    (1) programa -> . variables enunciados
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (2) vacio -> .

  ! shift/reduce conflict for VAR resolved as shift.
    VAR             shift and go to state 4
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    CORCHIZQ        reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    $end            reduce using rule 2 (vacio -> .)

  ! VAR             [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 1
    vacio                          shift and go to state 2
    programa                       shift and go to state 3

state 1

    (1) programa -> variables . enunciados
    (3) enunciados -> . enunciado enunciados
    (4) enunciados -> . vacio
    (5) enunciado -> . enunciado_print
    (6) enunciado -> . enunciado_loop
    (7) enunciado -> . enunciado_if
    (8) enunciado -> . enunciado_read
    (9) enunciado -> . enunciado_asignacion
    (10) enunciado -> . enunciado_invocar
    (11) enunciado -> . enunciado_declaracion
    (12) enunciado -> . enunciado_return
    (13) enunciado -> . enunciados_ciclos
    (14) enunciado -> . variables
    (15) enunciado -> . expresion_comparacion
    (2) vacio -> .
    (22) enunciado_print -> . WRITE expresion
    (23) enunciado_loop -> . enunciado_whila
    (24) enunciado_loop -> . enunciado_for
    (36) enunciado_if -> . IF expresion_condicion THEN enunciados END enunciado_else
    (39) enunciado_read -> . READ expresion
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (43) enunciado_declaracion -> . FUNC ID PARIZQ parametrosf PARDER enunciados END
    (50) enunciado_return -> . RETURN expresion
    (25) enunciados_ciclos -> . enunciados
    (26) enunciados_ciclos -> . BREAK
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (29) enunciado_whila -> . WHILA expresion_condicion THEN enunciados_ciclos END
    (35) enunciado_for -> . FOR ID IN expfor enunciados_ciclos END
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for WRITE resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for READ resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for SUMMON resolved as shift.
  ! shift/reduce conflict for FUNC resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for BREAK resolved as shift.
  ! shift/reduce conflict for VAR resolved as shift.
  ! shift/reduce conflict for WHILA resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for CADENA resolved as shift.
  ! shift/reduce conflict for ENTERO resolved as shift.
  ! shift/reduce conflict for CORCHIZQ resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
  ! shift/reduce conflict for PARIZQ resolved as shift.
  ! shift/reduce conflict for DECIMAL resolved as shift.
    $end            reduce using rule 2 (vacio -> .)
    WRITE           shift and go to state 25
    IF              shift and go to state 32
    READ            shift and go to state 6
    ID              shift and go to state 31
    SUMMON          shift and go to state 15
    FUNC            shift and go to state 27
    RETURN          shift and go to state 5
    BREAK           shift and go to state 40
    VAR             shift and go to state 4
    WHILA           shift and go to state 10
    FOR             shift and go to state 23
    CADENA          shift and go to state 13
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24

  ! WRITE           [ reduce using rule 2 (vacio -> .) ]
  ! IF              [ reduce using rule 2 (vacio -> .) ]
  ! READ            [ reduce using rule 2 (vacio -> .) ]
  ! ID              [ reduce using rule 2 (vacio -> .) ]
  ! SUMMON          [ reduce using rule 2 (vacio -> .) ]
  ! FUNC            [ reduce using rule 2 (vacio -> .) ]
  ! RETURN          [ reduce using rule 2 (vacio -> .) ]
  ! BREAK           [ reduce using rule 2 (vacio -> .) ]
  ! VAR             [ reduce using rule 2 (vacio -> .) ]
  ! WHILA           [ reduce using rule 2 (vacio -> .) ]
  ! FOR             [ reduce using rule 2 (vacio -> .) ]
  ! CADENA          [ reduce using rule 2 (vacio -> .) ]
  ! ENTERO          [ reduce using rule 2 (vacio -> .) ]
  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]
  ! MENOS           [ reduce using rule 2 (vacio -> .) ]
  ! PARIZQ          [ reduce using rule 2 (vacio -> .) ]
  ! DECIMAL         [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 7
    enunciado_declaracion          shift and go to state 8
    enunciado_read                 shift and go to state 9
    enunciado_return               shift and go to state 12
    enunciado_print                shift and go to state 19
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    enunciado                      shift and go to state 18
    expresion_lst                  shift and go to state 21
    enunciados                     shift and go to state 22
    expresion_suma                 shift and go to state 34
    enunciado_whila                shift and go to state 26
    enunciado_invocar              shift and go to state 28
    enunciado_asignacion           shift and go to state 29
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    enunciado_for                  shift and go to state 36
    enunciados_ciclos              shift and go to state 37
    enunciado_loop                 shift and go to state 38
    vacio                          shift and go to state 39
    enunciado_if                   shift and go to state 43
    expresion_comparacion          shift and go to state 44

state 2

    (18) variables -> vacio .

    WRITE           reduce using rule 18 (variables -> vacio .)
    IF              reduce using rule 18 (variables -> vacio .)
    READ            reduce using rule 18 (variables -> vacio .)
    ID              reduce using rule 18 (variables -> vacio .)
    SUMMON          reduce using rule 18 (variables -> vacio .)
    FUNC            reduce using rule 18 (variables -> vacio .)
    RETURN          reduce using rule 18 (variables -> vacio .)
    BREAK           reduce using rule 18 (variables -> vacio .)
    VAR             reduce using rule 18 (variables -> vacio .)
    WHILA           reduce using rule 18 (variables -> vacio .)
    FOR             reduce using rule 18 (variables -> vacio .)
    CADENA          reduce using rule 18 (variables -> vacio .)
    ENTERO          reduce using rule 18 (variables -> vacio .)
    CORCHIZQ        reduce using rule 18 (variables -> vacio .)
    MENOS           reduce using rule 18 (variables -> vacio .)
    PARIZQ          reduce using rule 18 (variables -> vacio .)
    DECIMAL         reduce using rule 18 (variables -> vacio .)
    $end            reduce using rule 18 (variables -> vacio .)



state 3

    (0) S' -> programa .




state 4

    (16) variables -> VAR . ID mas_variables
    (17) variables -> VAR . enunciado_asignacion mas_variables
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER

    ID              shift and go to state 49


    enunciado_asignacion           shift and go to state 48
    expresion_lst                  shift and go to state 47

state 5

    (50) enunciado_return -> RETURN . expresion
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 54
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 6

    (39) enunciado_read -> READ . expresion
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 56
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 7

    (14) enunciado -> variables .

    END             reduce using rule 14 (enunciado -> variables .)
    WRITE           reduce using rule 14 (enunciado -> variables .)
    IF              reduce using rule 14 (enunciado -> variables .)
    READ            reduce using rule 14 (enunciado -> variables .)
    ID              reduce using rule 14 (enunciado -> variables .)
    SUMMON          reduce using rule 14 (enunciado -> variables .)
    FUNC            reduce using rule 14 (enunciado -> variables .)
    RETURN          reduce using rule 14 (enunciado -> variables .)
    BREAK           reduce using rule 14 (enunciado -> variables .)
    VAR             reduce using rule 14 (enunciado -> variables .)
    WHILA           reduce using rule 14 (enunciado -> variables .)
    FOR             reduce using rule 14 (enunciado -> variables .)
    CADENA          reduce using rule 14 (enunciado -> variables .)
    ENTERO          reduce using rule 14 (enunciado -> variables .)
    CORCHIZQ        reduce using rule 14 (enunciado -> variables .)
    MENOS           reduce using rule 14 (enunciado -> variables .)
    PARIZQ          reduce using rule 14 (enunciado -> variables .)
    DECIMAL         reduce using rule 14 (enunciado -> variables .)
    $end            reduce using rule 14 (enunciado -> variables .)



state 8

    (11) enunciado -> enunciado_declaracion .

    END             reduce using rule 11 (enunciado -> enunciado_declaracion .)
    WRITE           reduce using rule 11 (enunciado -> enunciado_declaracion .)
    IF              reduce using rule 11 (enunciado -> enunciado_declaracion .)
    READ            reduce using rule 11 (enunciado -> enunciado_declaracion .)
    ID              reduce using rule 11 (enunciado -> enunciado_declaracion .)
    SUMMON          reduce using rule 11 (enunciado -> enunciado_declaracion .)
    FUNC            reduce using rule 11 (enunciado -> enunciado_declaracion .)
    RETURN          reduce using rule 11 (enunciado -> enunciado_declaracion .)
    BREAK           reduce using rule 11 (enunciado -> enunciado_declaracion .)
    VAR             reduce using rule 11 (enunciado -> enunciado_declaracion .)
    WHILA           reduce using rule 11 (enunciado -> enunciado_declaracion .)
    FOR             reduce using rule 11 (enunciado -> enunciado_declaracion .)
    CADENA          reduce using rule 11 (enunciado -> enunciado_declaracion .)
    ENTERO          reduce using rule 11 (enunciado -> enunciado_declaracion .)
    CORCHIZQ        reduce using rule 11 (enunciado -> enunciado_declaracion .)
    MENOS           reduce using rule 11 (enunciado -> enunciado_declaracion .)
    PARIZQ          reduce using rule 11 (enunciado -> enunciado_declaracion .)
    DECIMAL         reduce using rule 11 (enunciado -> enunciado_declaracion .)
    $end            reduce using rule 11 (enunciado -> enunciado_declaracion .)



state 9

    (8) enunciado -> enunciado_read .

    END             reduce using rule 8 (enunciado -> enunciado_read .)
    WRITE           reduce using rule 8 (enunciado -> enunciado_read .)
    IF              reduce using rule 8 (enunciado -> enunciado_read .)
    READ            reduce using rule 8 (enunciado -> enunciado_read .)
    ID              reduce using rule 8 (enunciado -> enunciado_read .)
    SUMMON          reduce using rule 8 (enunciado -> enunciado_read .)
    FUNC            reduce using rule 8 (enunciado -> enunciado_read .)
    RETURN          reduce using rule 8 (enunciado -> enunciado_read .)
    BREAK           reduce using rule 8 (enunciado -> enunciado_read .)
    VAR             reduce using rule 8 (enunciado -> enunciado_read .)
    WHILA           reduce using rule 8 (enunciado -> enunciado_read .)
    FOR             reduce using rule 8 (enunciado -> enunciado_read .)
    CADENA          reduce using rule 8 (enunciado -> enunciado_read .)
    ENTERO          reduce using rule 8 (enunciado -> enunciado_read .)
    CORCHIZQ        reduce using rule 8 (enunciado -> enunciado_read .)
    MENOS           reduce using rule 8 (enunciado -> enunciado_read .)
    PARIZQ          reduce using rule 8 (enunciado -> enunciado_read .)
    DECIMAL         reduce using rule 8 (enunciado -> enunciado_read .)
    $end            reduce using rule 8 (enunciado -> enunciado_read .)



state 10

    (29) enunciado_whila -> WHILA . expresion_condicion THEN enunciados_ciclos END
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

    ID              shift and go to state 63
    ENTERO          shift and go to state 58
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 59
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 64

state 11

    (110) expresion_simple -> PARIZQ . expresion PARDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 65
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 12

    (12) enunciado -> enunciado_return .

    END             reduce using rule 12 (enunciado -> enunciado_return .)
    WRITE           reduce using rule 12 (enunciado -> enunciado_return .)
    IF              reduce using rule 12 (enunciado -> enunciado_return .)
    READ            reduce using rule 12 (enunciado -> enunciado_return .)
    ID              reduce using rule 12 (enunciado -> enunciado_return .)
    SUMMON          reduce using rule 12 (enunciado -> enunciado_return .)
    FUNC            reduce using rule 12 (enunciado -> enunciado_return .)
    RETURN          reduce using rule 12 (enunciado -> enunciado_return .)
    BREAK           reduce using rule 12 (enunciado -> enunciado_return .)
    VAR             reduce using rule 12 (enunciado -> enunciado_return .)
    WHILA           reduce using rule 12 (enunciado -> enunciado_return .)
    FOR             reduce using rule 12 (enunciado -> enunciado_return .)
    CADENA          reduce using rule 12 (enunciado -> enunciado_return .)
    ENTERO          reduce using rule 12 (enunciado -> enunciado_return .)
    CORCHIZQ        reduce using rule 12 (enunciado -> enunciado_return .)
    MENOS           reduce using rule 12 (enunciado -> enunciado_return .)
    PARIZQ          reduce using rule 12 (enunciado -> enunciado_return .)
    DECIMAL         reduce using rule 12 (enunciado -> enunciado_return .)
    $end            reduce using rule 12 (enunciado -> enunciado_return .)



state 13

    (96) concatenables -> CADENA .
    (116) expresion_simple -> CADENA .

    PUNTOCOMA       reduce using rule 96 (concatenables -> CADENA .)
    POTENCIA        reduce using rule 116 (expresion_simple -> CADENA .)
    POR             reduce using rule 116 (expresion_simple -> CADENA .)
    ENTRE           reduce using rule 116 (expresion_simple -> CADENA .)
    MODULO          reduce using rule 116 (expresion_simple -> CADENA .)
    MAS             reduce using rule 116 (expresion_simple -> CADENA .)
    MENOS           reduce using rule 116 (expresion_simple -> CADENA .)
    AND             reduce using rule 116 (expresion_simple -> CADENA .)
    OR              reduce using rule 116 (expresion_simple -> CADENA .)
    MAYOR           reduce using rule 116 (expresion_simple -> CADENA .)
    MENOR           reduce using rule 116 (expresion_simple -> CADENA .)
    MAYORIGUAL      reduce using rule 116 (expresion_simple -> CADENA .)
    MENORIGUAL      reduce using rule 116 (expresion_simple -> CADENA .)
    IGUAL           reduce using rule 116 (expresion_simple -> CADENA .)
    NOIGUAL         reduce using rule 116 (expresion_simple -> CADENA .)
    COMA            reduce using rule 116 (expresion_simple -> CADENA .)
    PARDER          reduce using rule 116 (expresion_simple -> CADENA .)
    $end            reduce using rule 116 (expresion_simple -> CADENA .)
    WRITE           reduce using rule 116 (expresion_simple -> CADENA .)
    IF              reduce using rule 116 (expresion_simple -> CADENA .)
    READ            reduce using rule 116 (expresion_simple -> CADENA .)
    ID              reduce using rule 116 (expresion_simple -> CADENA .)
    SUMMON          reduce using rule 116 (expresion_simple -> CADENA .)
    FUNC            reduce using rule 116 (expresion_simple -> CADENA .)
    RETURN          reduce using rule 116 (expresion_simple -> CADENA .)
    BREAK           reduce using rule 116 (expresion_simple -> CADENA .)
    VAR             reduce using rule 116 (expresion_simple -> CADENA .)
    WHILA           reduce using rule 116 (expresion_simple -> CADENA .)
    FOR             reduce using rule 116 (expresion_simple -> CADENA .)
    CADENA          reduce using rule 116 (expresion_simple -> CADENA .)
    ENTERO          reduce using rule 116 (expresion_simple -> CADENA .)
    CORCHIZQ        reduce using rule 116 (expresion_simple -> CADENA .)
    PARIZQ          reduce using rule 116 (expresion_simple -> CADENA .)
    DECIMAL         reduce using rule 116 (expresion_simple -> CADENA .)
    END             reduce using rule 116 (expresion_simple -> CADENA .)
    THEN            reduce using rule 116 (expresion_simple -> CADENA .)
    CORCHDER        reduce using rule 116 (expresion_simple -> CADENA .)
    DOSPUNTOS       reduce using rule 116 (expresion_simple -> CADENA .)



state 14

    (95) expresion_concatenacion -> concatenables . PUNTOCOMA concatenables mas_cadenas

    PUNTOCOMA       shift and go to state 66



state 15

    (42) enunciado_invocar -> SUMMON . ID PARIZQ parametros PARDER

    ID              shift and go to state 67



state 16

    (74) expresion_mul -> expresion_pow . operador_mul expresion_mul
    (75) expresion_mul -> expresion_pow .
    (80) operador_mul -> . POR
    (81) operador_mul -> . ENTRE
    (82) operador_mul -> . MODULO

  ! shift/reduce conflict for POR resolved as shift.
  ! shift/reduce conflict for ENTRE resolved as shift.
  ! shift/reduce conflict for MODULO resolved as shift.
    MAS             reduce using rule 75 (expresion_mul -> expresion_pow .)
    MENOS           reduce using rule 75 (expresion_mul -> expresion_pow .)
    COMA            reduce using rule 75 (expresion_mul -> expresion_pow .)
    AND             reduce using rule 75 (expresion_mul -> expresion_pow .)
    OR              reduce using rule 75 (expresion_mul -> expresion_pow .)
    MAYOR           reduce using rule 75 (expresion_mul -> expresion_pow .)
    MENOR           reduce using rule 75 (expresion_mul -> expresion_pow .)
    MAYORIGUAL      reduce using rule 75 (expresion_mul -> expresion_pow .)
    MENORIGUAL      reduce using rule 75 (expresion_mul -> expresion_pow .)
    IGUAL           reduce using rule 75 (expresion_mul -> expresion_pow .)
    NOIGUAL         reduce using rule 75 (expresion_mul -> expresion_pow .)
    CORCHDER        reduce using rule 75 (expresion_mul -> expresion_pow .)
    PARDER          reduce using rule 75 (expresion_mul -> expresion_pow .)
    $end            reduce using rule 75 (expresion_mul -> expresion_pow .)
    WRITE           reduce using rule 75 (expresion_mul -> expresion_pow .)
    IF              reduce using rule 75 (expresion_mul -> expresion_pow .)
    READ            reduce using rule 75 (expresion_mul -> expresion_pow .)
    ID              reduce using rule 75 (expresion_mul -> expresion_pow .)
    SUMMON          reduce using rule 75 (expresion_mul -> expresion_pow .)
    FUNC            reduce using rule 75 (expresion_mul -> expresion_pow .)
    RETURN          reduce using rule 75 (expresion_mul -> expresion_pow .)
    BREAK           reduce using rule 75 (expresion_mul -> expresion_pow .)
    VAR             reduce using rule 75 (expresion_mul -> expresion_pow .)
    WHILA           reduce using rule 75 (expresion_mul -> expresion_pow .)
    FOR             reduce using rule 75 (expresion_mul -> expresion_pow .)
    CADENA          reduce using rule 75 (expresion_mul -> expresion_pow .)
    ENTERO          reduce using rule 75 (expresion_mul -> expresion_pow .)
    CORCHIZQ        reduce using rule 75 (expresion_mul -> expresion_pow .)
    PARIZQ          reduce using rule 75 (expresion_mul -> expresion_pow .)
    DECIMAL         reduce using rule 75 (expresion_mul -> expresion_pow .)
    END             reduce using rule 75 (expresion_mul -> expresion_pow .)
    POTENCIA        reduce using rule 75 (expresion_mul -> expresion_pow .)
    THEN            reduce using rule 75 (expresion_mul -> expresion_pow .)
    DOSPUNTOS       reduce using rule 75 (expresion_mul -> expresion_pow .)
    POR             shift and go to state 70
    ENTRE           shift and go to state 69
    MODULO          shift and go to state 68

  ! POR             [ reduce using rule 75 (expresion_mul -> expresion_pow .) ]
  ! ENTRE           [ reduce using rule 75 (expresion_mul -> expresion_pow .) ]
  ! MODULO          [ reduce using rule 75 (expresion_mul -> expresion_pow .) ]

    operador_mul                   shift and go to state 71

state 17

    (72) expresion_suma -> expresion_mul . operador_suma expresion_suma
    (73) expresion_suma -> expresion_mul .
    (78) operador_suma -> . MAS
    (79) operador_suma -> . MENOS

  ! shift/reduce conflict for MAS resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
    POTENCIA        reduce using rule 73 (expresion_suma -> expresion_mul .)
    POR             reduce using rule 73 (expresion_suma -> expresion_mul .)
    ENTRE           reduce using rule 73 (expresion_suma -> expresion_mul .)
    MODULO          reduce using rule 73 (expresion_suma -> expresion_mul .)
    AND             reduce using rule 73 (expresion_suma -> expresion_mul .)
    OR              reduce using rule 73 (expresion_suma -> expresion_mul .)
    MAYOR           reduce using rule 73 (expresion_suma -> expresion_mul .)
    MENOR           reduce using rule 73 (expresion_suma -> expresion_mul .)
    MAYORIGUAL      reduce using rule 73 (expresion_suma -> expresion_mul .)
    MENORIGUAL      reduce using rule 73 (expresion_suma -> expresion_mul .)
    IGUAL           reduce using rule 73 (expresion_suma -> expresion_mul .)
    NOIGUAL         reduce using rule 73 (expresion_suma -> expresion_mul .)
    $end            reduce using rule 73 (expresion_suma -> expresion_mul .)
    WRITE           reduce using rule 73 (expresion_suma -> expresion_mul .)
    IF              reduce using rule 73 (expresion_suma -> expresion_mul .)
    READ            reduce using rule 73 (expresion_suma -> expresion_mul .)
    ID              reduce using rule 73 (expresion_suma -> expresion_mul .)
    SUMMON          reduce using rule 73 (expresion_suma -> expresion_mul .)
    FUNC            reduce using rule 73 (expresion_suma -> expresion_mul .)
    RETURN          reduce using rule 73 (expresion_suma -> expresion_mul .)
    BREAK           reduce using rule 73 (expresion_suma -> expresion_mul .)
    VAR             reduce using rule 73 (expresion_suma -> expresion_mul .)
    WHILA           reduce using rule 73 (expresion_suma -> expresion_mul .)
    FOR             reduce using rule 73 (expresion_suma -> expresion_mul .)
    CADENA          reduce using rule 73 (expresion_suma -> expresion_mul .)
    ENTERO          reduce using rule 73 (expresion_suma -> expresion_mul .)
    CORCHIZQ        reduce using rule 73 (expresion_suma -> expresion_mul .)
    PARIZQ          reduce using rule 73 (expresion_suma -> expresion_mul .)
    DECIMAL         reduce using rule 73 (expresion_suma -> expresion_mul .)
    END             reduce using rule 73 (expresion_suma -> expresion_mul .)
    THEN            reduce using rule 73 (expresion_suma -> expresion_mul .)
    PARDER          reduce using rule 73 (expresion_suma -> expresion_mul .)
    COMA            reduce using rule 73 (expresion_suma -> expresion_mul .)
    CORCHDER        reduce using rule 73 (expresion_suma -> expresion_mul .)
    DOSPUNTOS       reduce using rule 73 (expresion_suma -> expresion_mul .)
    MAS             shift and go to state 72
    MENOS           shift and go to state 74

  ! MAS             [ reduce using rule 73 (expresion_suma -> expresion_mul .) ]
  ! MENOS           [ reduce using rule 73 (expresion_suma -> expresion_mul .) ]

    operador_suma                  shift and go to state 73

state 18

    (3) enunciados -> enunciado . enunciados
    (3) enunciados -> . enunciado enunciados
    (4) enunciados -> . vacio
    (5) enunciado -> . enunciado_print
    (6) enunciado -> . enunciado_loop
    (7) enunciado -> . enunciado_if
    (8) enunciado -> . enunciado_read
    (9) enunciado -> . enunciado_asignacion
    (10) enunciado -> . enunciado_invocar
    (11) enunciado -> . enunciado_declaracion
    (12) enunciado -> . enunciado_return
    (13) enunciado -> . enunciados_ciclos
    (14) enunciado -> . variables
    (15) enunciado -> . expresion_comparacion
    (2) vacio -> .
    (22) enunciado_print -> . WRITE expresion
    (23) enunciado_loop -> . enunciado_whila
    (24) enunciado_loop -> . enunciado_for
    (36) enunciado_if -> . IF expresion_condicion THEN enunciados END enunciado_else
    (39) enunciado_read -> . READ expresion
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (43) enunciado_declaracion -> . FUNC ID PARIZQ parametrosf PARDER enunciados END
    (50) enunciado_return -> . RETURN expresion
    (25) enunciados_ciclos -> . enunciados
    (26) enunciados_ciclos -> . BREAK
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (29) enunciado_whila -> . WHILA expresion_condicion THEN enunciados_ciclos END
    (35) enunciado_for -> . FOR ID IN expfor enunciados_ciclos END
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for WRITE resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for READ resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for SUMMON resolved as shift.
  ! shift/reduce conflict for FUNC resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for BREAK resolved as shift.
  ! shift/reduce conflict for VAR resolved as shift.
  ! shift/reduce conflict for WHILA resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for CADENA resolved as shift.
  ! shift/reduce conflict for ENTERO resolved as shift.
  ! shift/reduce conflict for CORCHIZQ resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
  ! shift/reduce conflict for PARIZQ resolved as shift.
  ! shift/reduce conflict for DECIMAL resolved as shift.
    $end            reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)
    WRITE           shift and go to state 25
    IF              shift and go to state 32
    READ            shift and go to state 6
    ID              shift and go to state 31
    SUMMON          shift and go to state 15
    FUNC            shift and go to state 27
    RETURN          shift and go to state 5
    BREAK           shift and go to state 40
    VAR             shift and go to state 4
    WHILA           shift and go to state 10
    FOR             shift and go to state 23
    CADENA          shift and go to state 13
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24

  ! WRITE           [ reduce using rule 2 (vacio -> .) ]
  ! IF              [ reduce using rule 2 (vacio -> .) ]
  ! READ            [ reduce using rule 2 (vacio -> .) ]
  ! ID              [ reduce using rule 2 (vacio -> .) ]
  ! SUMMON          [ reduce using rule 2 (vacio -> .) ]
  ! FUNC            [ reduce using rule 2 (vacio -> .) ]
  ! RETURN          [ reduce using rule 2 (vacio -> .) ]
  ! BREAK           [ reduce using rule 2 (vacio -> .) ]
  ! VAR             [ reduce using rule 2 (vacio -> .) ]
  ! WHILA           [ reduce using rule 2 (vacio -> .) ]
  ! FOR             [ reduce using rule 2 (vacio -> .) ]
  ! CADENA          [ reduce using rule 2 (vacio -> .) ]
  ! ENTERO          [ reduce using rule 2 (vacio -> .) ]
  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]
  ! MENOS           [ reduce using rule 2 (vacio -> .) ]
  ! PARIZQ          [ reduce using rule 2 (vacio -> .) ]
  ! DECIMAL         [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 7
    enunciado_declaracion          shift and go to state 8
    enunciado_read                 shift and go to state 9
    enunciado_return               shift and go to state 12
    enunciado_print                shift and go to state 19
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    enunciado                      shift and go to state 18
    expresion_lst                  shift and go to state 21
    enunciados                     shift and go to state 75
    expresion_suma                 shift and go to state 34
    enunciado_whila                shift and go to state 26
    enunciado_invocar              shift and go to state 28
    enunciado_asignacion           shift and go to state 29
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    enunciado_for                  shift and go to state 36
    enunciados_ciclos              shift and go to state 37
    enunciado_loop                 shift and go to state 38
    vacio                          shift and go to state 39
    enunciado_if                   shift and go to state 43
    expresion_comparacion          shift and go to state 44

state 19

    (5) enunciado -> enunciado_print .

    END             reduce using rule 5 (enunciado -> enunciado_print .)
    WRITE           reduce using rule 5 (enunciado -> enunciado_print .)
    IF              reduce using rule 5 (enunciado -> enunciado_print .)
    READ            reduce using rule 5 (enunciado -> enunciado_print .)
    ID              reduce using rule 5 (enunciado -> enunciado_print .)
    SUMMON          reduce using rule 5 (enunciado -> enunciado_print .)
    FUNC            reduce using rule 5 (enunciado -> enunciado_print .)
    RETURN          reduce using rule 5 (enunciado -> enunciado_print .)
    BREAK           reduce using rule 5 (enunciado -> enunciado_print .)
    VAR             reduce using rule 5 (enunciado -> enunciado_print .)
    WHILA           reduce using rule 5 (enunciado -> enunciado_print .)
    FOR             reduce using rule 5 (enunciado -> enunciado_print .)
    CADENA          reduce using rule 5 (enunciado -> enunciado_print .)
    ENTERO          reduce using rule 5 (enunciado -> enunciado_print .)
    CORCHIZQ        reduce using rule 5 (enunciado -> enunciado_print .)
    MENOS           reduce using rule 5 (enunciado -> enunciado_print .)
    PARIZQ          reduce using rule 5 (enunciado -> enunciado_print .)
    DECIMAL         reduce using rule 5 (enunciado -> enunciado_print .)
    $end            reduce using rule 5 (enunciado -> enunciado_print .)



state 20

    (98) concatenables -> ENTERO .
    (108) expresion_simple -> ENTERO .

    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    COMA            reduce using rule 108 (expresion_simple -> ENTERO .)
    PARDER          reduce using rule 108 (expresion_simple -> ENTERO .)
    $end            reduce using rule 108 (expresion_simple -> ENTERO .)
    WRITE           reduce using rule 108 (expresion_simple -> ENTERO .)
    IF              reduce using rule 108 (expresion_simple -> ENTERO .)
    READ            reduce using rule 108 (expresion_simple -> ENTERO .)
    ID              reduce using rule 108 (expresion_simple -> ENTERO .)
    SUMMON          reduce using rule 108 (expresion_simple -> ENTERO .)
    FUNC            reduce using rule 108 (expresion_simple -> ENTERO .)
    RETURN          reduce using rule 108 (expresion_simple -> ENTERO .)
    BREAK           reduce using rule 108 (expresion_simple -> ENTERO .)
    VAR             reduce using rule 108 (expresion_simple -> ENTERO .)
    WHILA           reduce using rule 108 (expresion_simple -> ENTERO .)
    FOR             reduce using rule 108 (expresion_simple -> ENTERO .)
    CADENA          reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTERO          reduce using rule 108 (expresion_simple -> ENTERO .)
    CORCHIZQ        reduce using rule 108 (expresion_simple -> ENTERO .)
    PARIZQ          reduce using rule 108 (expresion_simple -> ENTERO .)
    DECIMAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    END             reduce using rule 108 (expresion_simple -> ENTERO .)
    THEN            reduce using rule 108 (expresion_simple -> ENTERO .)
    CORCHDER        reduce using rule 108 (expresion_simple -> ENTERO .)
    DOSPUNTOS       reduce using rule 108 (expresion_simple -> ENTERO .)



state 21

    (41) enunciado_asignacion -> expresion_lst . IS expresion
    (112) expresion_simple -> expresion_lst .

    IS              shift and go to state 76
    POTENCIA        reduce using rule 112 (expresion_simple -> expresion_lst .)
    POR             reduce using rule 112 (expresion_simple -> expresion_lst .)
    ENTRE           reduce using rule 112 (expresion_simple -> expresion_lst .)
    MODULO          reduce using rule 112 (expresion_simple -> expresion_lst .)
    MAS             reduce using rule 112 (expresion_simple -> expresion_lst .)
    MENOS           reduce using rule 112 (expresion_simple -> expresion_lst .)
    AND             reduce using rule 112 (expresion_simple -> expresion_lst .)
    OR              reduce using rule 112 (expresion_simple -> expresion_lst .)
    MAYOR           reduce using rule 112 (expresion_simple -> expresion_lst .)
    MENOR           reduce using rule 112 (expresion_simple -> expresion_lst .)
    MAYORIGUAL      reduce using rule 112 (expresion_simple -> expresion_lst .)
    MENORIGUAL      reduce using rule 112 (expresion_simple -> expresion_lst .)
    IGUAL           reduce using rule 112 (expresion_simple -> expresion_lst .)
    NOIGUAL         reduce using rule 112 (expresion_simple -> expresion_lst .)



state 22

    (1) programa -> variables enunciados .
    (25) enunciados_ciclos -> enunciados .

  ! reduce/reduce conflict for $end resolved using rule 1 (programa -> variables enunciados .).
    $end            reduce using rule 1 (programa -> variables enunciados .)
    WRITE           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    IF              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    READ            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ID              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    SUMMON          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FUNC            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    RETURN          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    BREAK           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    VAR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    WHILA           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FOR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CADENA          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ENTERO          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CORCHIZQ        reduce using rule 25 (enunciados_ciclos -> enunciados .)
    MENOS           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    PARIZQ          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    DECIMAL         reduce using rule 25 (enunciados_ciclos -> enunciados .)

  ! $end            [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]


state 23

    (35) enunciado_for -> FOR . ID IN expfor enunciados_ciclos END

    ID              shift and go to state 77



state 24

    (117) expresion_simple -> DECIMAL .

    POTENCIA        reduce using rule 117 (expresion_simple -> DECIMAL .)
    POR             reduce using rule 117 (expresion_simple -> DECIMAL .)
    ENTRE           reduce using rule 117 (expresion_simple -> DECIMAL .)
    MODULO          reduce using rule 117 (expresion_simple -> DECIMAL .)
    MAS             reduce using rule 117 (expresion_simple -> DECIMAL .)
    MENOS           reduce using rule 117 (expresion_simple -> DECIMAL .)
    AND             reduce using rule 117 (expresion_simple -> DECIMAL .)
    OR              reduce using rule 117 (expresion_simple -> DECIMAL .)
    MAYOR           reduce using rule 117 (expresion_simple -> DECIMAL .)
    MENOR           reduce using rule 117 (expresion_simple -> DECIMAL .)
    MAYORIGUAL      reduce using rule 117 (expresion_simple -> DECIMAL .)
    MENORIGUAL      reduce using rule 117 (expresion_simple -> DECIMAL .)
    IGUAL           reduce using rule 117 (expresion_simple -> DECIMAL .)
    NOIGUAL         reduce using rule 117 (expresion_simple -> DECIMAL .)
    COMA            reduce using rule 117 (expresion_simple -> DECIMAL .)
    PARDER          reduce using rule 117 (expresion_simple -> DECIMAL .)
    $end            reduce using rule 117 (expresion_simple -> DECIMAL .)
    WRITE           reduce using rule 117 (expresion_simple -> DECIMAL .)
    IF              reduce using rule 117 (expresion_simple -> DECIMAL .)
    READ            reduce using rule 117 (expresion_simple -> DECIMAL .)
    ID              reduce using rule 117 (expresion_simple -> DECIMAL .)
    SUMMON          reduce using rule 117 (expresion_simple -> DECIMAL .)
    FUNC            reduce using rule 117 (expresion_simple -> DECIMAL .)
    RETURN          reduce using rule 117 (expresion_simple -> DECIMAL .)
    BREAK           reduce using rule 117 (expresion_simple -> DECIMAL .)
    VAR             reduce using rule 117 (expresion_simple -> DECIMAL .)
    WHILA           reduce using rule 117 (expresion_simple -> DECIMAL .)
    FOR             reduce using rule 117 (expresion_simple -> DECIMAL .)
    CADENA          reduce using rule 117 (expresion_simple -> DECIMAL .)
    ENTERO          reduce using rule 117 (expresion_simple -> DECIMAL .)
    CORCHIZQ        reduce using rule 117 (expresion_simple -> DECIMAL .)
    PARIZQ          reduce using rule 117 (expresion_simple -> DECIMAL .)
    DECIMAL         reduce using rule 117 (expresion_simple -> DECIMAL .)
    END             reduce using rule 117 (expresion_simple -> DECIMAL .)
    THEN            reduce using rule 117 (expresion_simple -> DECIMAL .)
    CORCHDER        reduce using rule 117 (expresion_simple -> DECIMAL .)
    DOSPUNTOS       reduce using rule 117 (expresion_simple -> DECIMAL .)



state 25

    (22) enunciado_print -> WRITE . expresion
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 78
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 26

    (23) enunciado_loop -> enunciado_whila .

    END             reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    WRITE           reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    IF              reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    READ            reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    ID              reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    SUMMON          reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    FUNC            reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    RETURN          reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    BREAK           reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    VAR             reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    WHILA           reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    FOR             reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    CADENA          reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    ENTERO          reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    CORCHIZQ        reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    MENOS           reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    PARIZQ          reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    DECIMAL         reduce using rule 23 (enunciado_loop -> enunciado_whila .)
    $end            reduce using rule 23 (enunciado_loop -> enunciado_whila .)



state 27

    (43) enunciado_declaracion -> FUNC . ID PARIZQ parametrosf PARDER enunciados END

    ID              shift and go to state 79



state 28

    (10) enunciado -> enunciado_invocar .
    (100) concatenables -> enunciado_invocar .
    (113) expresion_simple -> enunciado_invocar .

  ! reduce/reduce conflict for MENOS resolved using rule 10 (enunciado -> enunciado_invocar .).
    END             reduce using rule 10 (enunciado -> enunciado_invocar .)
    WRITE           reduce using rule 10 (enunciado -> enunciado_invocar .)
    IF              reduce using rule 10 (enunciado -> enunciado_invocar .)
    READ            reduce using rule 10 (enunciado -> enunciado_invocar .)
    ID              reduce using rule 10 (enunciado -> enunciado_invocar .)
    SUMMON          reduce using rule 10 (enunciado -> enunciado_invocar .)
    FUNC            reduce using rule 10 (enunciado -> enunciado_invocar .)
    RETURN          reduce using rule 10 (enunciado -> enunciado_invocar .)
    BREAK           reduce using rule 10 (enunciado -> enunciado_invocar .)
    VAR             reduce using rule 10 (enunciado -> enunciado_invocar .)
    WHILA           reduce using rule 10 (enunciado -> enunciado_invocar .)
    FOR             reduce using rule 10 (enunciado -> enunciado_invocar .)
    CADENA          reduce using rule 10 (enunciado -> enunciado_invocar .)
    ENTERO          reduce using rule 10 (enunciado -> enunciado_invocar .)
    CORCHIZQ        reduce using rule 10 (enunciado -> enunciado_invocar .)
    MENOS           reduce using rule 10 (enunciado -> enunciado_invocar .)
    PARIZQ          reduce using rule 10 (enunciado -> enunciado_invocar .)
    DECIMAL         reduce using rule 10 (enunciado -> enunciado_invocar .)
    $end            reduce using rule 10 (enunciado -> enunciado_invocar .)
    PUNTOCOMA       reduce using rule 100 (concatenables -> enunciado_invocar .)
    POTENCIA        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    POR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ENTRE           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MODULO          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAS             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    AND             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    OR              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    IGUAL           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    NOIGUAL         reduce using rule 113 (expresion_simple -> enunciado_invocar .)

  ! MENOS           [ reduce using rule 113 (expresion_simple -> enunciado_invocar .) ]


state 29

    (9) enunciado -> enunciado_asignacion .
    (114) expresion_simple -> enunciado_asignacion .

  ! reduce/reduce conflict for MENOS resolved using rule 9 (enunciado -> enunciado_asignacion .).
    END             reduce using rule 9 (enunciado -> enunciado_asignacion .)
    WRITE           reduce using rule 9 (enunciado -> enunciado_asignacion .)
    IF              reduce using rule 9 (enunciado -> enunciado_asignacion .)
    READ            reduce using rule 9 (enunciado -> enunciado_asignacion .)
    ID              reduce using rule 9 (enunciado -> enunciado_asignacion .)
    SUMMON          reduce using rule 9 (enunciado -> enunciado_asignacion .)
    FUNC            reduce using rule 9 (enunciado -> enunciado_asignacion .)
    RETURN          reduce using rule 9 (enunciado -> enunciado_asignacion .)
    BREAK           reduce using rule 9 (enunciado -> enunciado_asignacion .)
    VAR             reduce using rule 9 (enunciado -> enunciado_asignacion .)
    WHILA           reduce using rule 9 (enunciado -> enunciado_asignacion .)
    FOR             reduce using rule 9 (enunciado -> enunciado_asignacion .)
    CADENA          reduce using rule 9 (enunciado -> enunciado_asignacion .)
    ENTERO          reduce using rule 9 (enunciado -> enunciado_asignacion .)
    CORCHIZQ        reduce using rule 9 (enunciado -> enunciado_asignacion .)
    MENOS           reduce using rule 9 (enunciado -> enunciado_asignacion .)
    PARIZQ          reduce using rule 9 (enunciado -> enunciado_asignacion .)
    DECIMAL         reduce using rule 9 (enunciado -> enunciado_asignacion .)
    $end            reduce using rule 9 (enunciado -> enunciado_asignacion .)
    POTENCIA        reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    POR             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    ENTRE           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MODULO          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MAS             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    AND             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    OR              reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MAYOR           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MENOR           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MAYORIGUAL      reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MENORIGUAL      reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    IGUAL           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    NOIGUAL         reduce using rule 114 (expresion_simple -> enunciado_asignacion .)

  ! MENOS           [ reduce using rule 114 (expresion_simple -> enunciado_asignacion .) ]


state 30

    (99) concatenables -> lista .
    (115) expresion_simple -> lista .

    PUNTOCOMA       reduce using rule 99 (concatenables -> lista .)
    POTENCIA        reduce using rule 115 (expresion_simple -> lista .)
    POR             reduce using rule 115 (expresion_simple -> lista .)
    ENTRE           reduce using rule 115 (expresion_simple -> lista .)
    MODULO          reduce using rule 115 (expresion_simple -> lista .)
    MAS             reduce using rule 115 (expresion_simple -> lista .)
    MENOS           reduce using rule 115 (expresion_simple -> lista .)
    AND             reduce using rule 115 (expresion_simple -> lista .)
    OR              reduce using rule 115 (expresion_simple -> lista .)
    MAYOR           reduce using rule 115 (expresion_simple -> lista .)
    MENOR           reduce using rule 115 (expresion_simple -> lista .)
    MAYORIGUAL      reduce using rule 115 (expresion_simple -> lista .)
    MENORIGUAL      reduce using rule 115 (expresion_simple -> lista .)
    IGUAL           reduce using rule 115 (expresion_simple -> lista .)
    NOIGUAL         reduce using rule 115 (expresion_simple -> lista .)
    COMA            reduce using rule 115 (expresion_simple -> lista .)
    PARDER          reduce using rule 115 (expresion_simple -> lista .)
    $end            reduce using rule 115 (expresion_simple -> lista .)
    WRITE           reduce using rule 115 (expresion_simple -> lista .)
    IF              reduce using rule 115 (expresion_simple -> lista .)
    READ            reduce using rule 115 (expresion_simple -> lista .)
    ID              reduce using rule 115 (expresion_simple -> lista .)
    SUMMON          reduce using rule 115 (expresion_simple -> lista .)
    FUNC            reduce using rule 115 (expresion_simple -> lista .)
    RETURN          reduce using rule 115 (expresion_simple -> lista .)
    BREAK           reduce using rule 115 (expresion_simple -> lista .)
    VAR             reduce using rule 115 (expresion_simple -> lista .)
    WHILA           reduce using rule 115 (expresion_simple -> lista .)
    FOR             reduce using rule 115 (expresion_simple -> lista .)
    CADENA          reduce using rule 115 (expresion_simple -> lista .)
    ENTERO          reduce using rule 115 (expresion_simple -> lista .)
    CORCHIZQ        reduce using rule 115 (expresion_simple -> lista .)
    PARIZQ          reduce using rule 115 (expresion_simple -> lista .)
    DECIMAL         reduce using rule 115 (expresion_simple -> lista .)
    END             reduce using rule 115 (expresion_simple -> lista .)
    THEN            reduce using rule 115 (expresion_simple -> lista .)
    CORCHDER        reduce using rule 115 (expresion_simple -> lista .)
    DOSPUNTOS       reduce using rule 115 (expresion_simple -> lista .)



state 31

    (40) enunciado_asignacion -> ID . IS expresion
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (97) concatenables -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER

    IS              shift and go to state 81
    CORCHIZQ        shift and go to state 80
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)



state 32

    (36) enunciado_if -> IF . expresion_condicion THEN enunciados END enunciado_else
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

    ID              shift and go to state 63
    ENTERO          shift and go to state 58
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 82
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    expresion_comparacion          shift and go to state 64

state 33

    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL

    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86


    operador_comparacion           shift and go to state 87

state 34

    (51) expresion -> expresion_suma .

    AND             reduce using rule 51 (expresion -> expresion_suma .)
    OR              reduce using rule 51 (expresion -> expresion_suma .)
    MAYOR           reduce using rule 51 (expresion -> expresion_suma .)
    MENOR           reduce using rule 51 (expresion -> expresion_suma .)
    MAYORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    MENORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    IGUAL           reduce using rule 51 (expresion -> expresion_suma .)
    NOIGUAL         reduce using rule 51 (expresion -> expresion_suma .)
    POTENCIA        reduce using rule 51 (expresion -> expresion_suma .)
    POR             reduce using rule 51 (expresion -> expresion_suma .)
    ENTRE           reduce using rule 51 (expresion -> expresion_suma .)
    MODULO          reduce using rule 51 (expresion -> expresion_suma .)
    MAS             reduce using rule 51 (expresion -> expresion_suma .)
    MENOS           reduce using rule 51 (expresion -> expresion_suma .)
    $end            reduce using rule 51 (expresion -> expresion_suma .)
    WRITE           reduce using rule 51 (expresion -> expresion_suma .)
    IF              reduce using rule 51 (expresion -> expresion_suma .)
    READ            reduce using rule 51 (expresion -> expresion_suma .)
    ID              reduce using rule 51 (expresion -> expresion_suma .)
    SUMMON          reduce using rule 51 (expresion -> expresion_suma .)
    FUNC            reduce using rule 51 (expresion -> expresion_suma .)
    RETURN          reduce using rule 51 (expresion -> expresion_suma .)
    BREAK           reduce using rule 51 (expresion -> expresion_suma .)
    VAR             reduce using rule 51 (expresion -> expresion_suma .)
    WHILA           reduce using rule 51 (expresion -> expresion_suma .)
    FOR             reduce using rule 51 (expresion -> expresion_suma .)
    CADENA          reduce using rule 51 (expresion -> expresion_suma .)
    ENTERO          reduce using rule 51 (expresion -> expresion_suma .)
    CORCHIZQ        reduce using rule 51 (expresion -> expresion_suma .)
    PARIZQ          reduce using rule 51 (expresion -> expresion_suma .)
    DECIMAL         reduce using rule 51 (expresion -> expresion_suma .)
    END             reduce using rule 51 (expresion -> expresion_suma .)
    THEN            reduce using rule 51 (expresion -> expresion_suma .)
    PARDER          reduce using rule 51 (expresion -> expresion_suma .)
    COMA            reduce using rule 51 (expresion -> expresion_suma .)
    CORCHDER        reduce using rule 51 (expresion -> expresion_suma .)
    DOSPUNTOS       reduce using rule 51 (expresion -> expresion_suma .)



state 35

    (53) expresion -> expresion_concatenacion .

    AND             reduce using rule 53 (expresion -> expresion_concatenacion .)
    OR              reduce using rule 53 (expresion -> expresion_concatenacion .)
    MAYOR           reduce using rule 53 (expresion -> expresion_concatenacion .)
    MENOR           reduce using rule 53 (expresion -> expresion_concatenacion .)
    MAYORIGUAL      reduce using rule 53 (expresion -> expresion_concatenacion .)
    MENORIGUAL      reduce using rule 53 (expresion -> expresion_concatenacion .)
    IGUAL           reduce using rule 53 (expresion -> expresion_concatenacion .)
    NOIGUAL         reduce using rule 53 (expresion -> expresion_concatenacion .)
    POTENCIA        reduce using rule 53 (expresion -> expresion_concatenacion .)
    POR             reduce using rule 53 (expresion -> expresion_concatenacion .)
    ENTRE           reduce using rule 53 (expresion -> expresion_concatenacion .)
    MODULO          reduce using rule 53 (expresion -> expresion_concatenacion .)
    MAS             reduce using rule 53 (expresion -> expresion_concatenacion .)
    MENOS           reduce using rule 53 (expresion -> expresion_concatenacion .)
    $end            reduce using rule 53 (expresion -> expresion_concatenacion .)
    WRITE           reduce using rule 53 (expresion -> expresion_concatenacion .)
    IF              reduce using rule 53 (expresion -> expresion_concatenacion .)
    READ            reduce using rule 53 (expresion -> expresion_concatenacion .)
    ID              reduce using rule 53 (expresion -> expresion_concatenacion .)
    SUMMON          reduce using rule 53 (expresion -> expresion_concatenacion .)
    FUNC            reduce using rule 53 (expresion -> expresion_concatenacion .)
    RETURN          reduce using rule 53 (expresion -> expresion_concatenacion .)
    BREAK           reduce using rule 53 (expresion -> expresion_concatenacion .)
    VAR             reduce using rule 53 (expresion -> expresion_concatenacion .)
    WHILA           reduce using rule 53 (expresion -> expresion_concatenacion .)
    FOR             reduce using rule 53 (expresion -> expresion_concatenacion .)
    CADENA          reduce using rule 53 (expresion -> expresion_concatenacion .)
    ENTERO          reduce using rule 53 (expresion -> expresion_concatenacion .)
    CORCHIZQ        reduce using rule 53 (expresion -> expresion_concatenacion .)
    PARIZQ          reduce using rule 53 (expresion -> expresion_concatenacion .)
    DECIMAL         reduce using rule 53 (expresion -> expresion_concatenacion .)
    END             reduce using rule 53 (expresion -> expresion_concatenacion .)
    THEN            reduce using rule 53 (expresion -> expresion_concatenacion .)
    PARDER          reduce using rule 53 (expresion -> expresion_concatenacion .)
    COMA            reduce using rule 53 (expresion -> expresion_concatenacion .)
    CORCHDER        reduce using rule 53 (expresion -> expresion_concatenacion .)
    DOSPUNTOS       reduce using rule 53 (expresion -> expresion_concatenacion .)



state 36

    (24) enunciado_loop -> enunciado_for .

    END             reduce using rule 24 (enunciado_loop -> enunciado_for .)
    WRITE           reduce using rule 24 (enunciado_loop -> enunciado_for .)
    IF              reduce using rule 24 (enunciado_loop -> enunciado_for .)
    READ            reduce using rule 24 (enunciado_loop -> enunciado_for .)
    ID              reduce using rule 24 (enunciado_loop -> enunciado_for .)
    SUMMON          reduce using rule 24 (enunciado_loop -> enunciado_for .)
    FUNC            reduce using rule 24 (enunciado_loop -> enunciado_for .)
    RETURN          reduce using rule 24 (enunciado_loop -> enunciado_for .)
    BREAK           reduce using rule 24 (enunciado_loop -> enunciado_for .)
    VAR             reduce using rule 24 (enunciado_loop -> enunciado_for .)
    WHILA           reduce using rule 24 (enunciado_loop -> enunciado_for .)
    FOR             reduce using rule 24 (enunciado_loop -> enunciado_for .)
    CADENA          reduce using rule 24 (enunciado_loop -> enunciado_for .)
    ENTERO          reduce using rule 24 (enunciado_loop -> enunciado_for .)
    CORCHIZQ        reduce using rule 24 (enunciado_loop -> enunciado_for .)
    MENOS           reduce using rule 24 (enunciado_loop -> enunciado_for .)
    PARIZQ          reduce using rule 24 (enunciado_loop -> enunciado_for .)
    DECIMAL         reduce using rule 24 (enunciado_loop -> enunciado_for .)
    $end            reduce using rule 24 (enunciado_loop -> enunciado_for .)



state 37

    (13) enunciado -> enunciados_ciclos .

    END             reduce using rule 13 (enunciado -> enunciados_ciclos .)
    WRITE           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    IF              reduce using rule 13 (enunciado -> enunciados_ciclos .)
    READ            reduce using rule 13 (enunciado -> enunciados_ciclos .)
    ID              reduce using rule 13 (enunciado -> enunciados_ciclos .)
    SUMMON          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    FUNC            reduce using rule 13 (enunciado -> enunciados_ciclos .)
    RETURN          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    BREAK           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    VAR             reduce using rule 13 (enunciado -> enunciados_ciclos .)
    WHILA           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    FOR             reduce using rule 13 (enunciado -> enunciados_ciclos .)
    CADENA          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    ENTERO          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    CORCHIZQ        reduce using rule 13 (enunciado -> enunciados_ciclos .)
    MENOS           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    PARIZQ          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    DECIMAL         reduce using rule 13 (enunciado -> enunciados_ciclos .)
    $end            reduce using rule 13 (enunciado -> enunciados_ciclos .)



state 38

    (6) enunciado -> enunciado_loop .

    END             reduce using rule 6 (enunciado -> enunciado_loop .)
    WRITE           reduce using rule 6 (enunciado -> enunciado_loop .)
    IF              reduce using rule 6 (enunciado -> enunciado_loop .)
    READ            reduce using rule 6 (enunciado -> enunciado_loop .)
    ID              reduce using rule 6 (enunciado -> enunciado_loop .)
    SUMMON          reduce using rule 6 (enunciado -> enunciado_loop .)
    FUNC            reduce using rule 6 (enunciado -> enunciado_loop .)
    RETURN          reduce using rule 6 (enunciado -> enunciado_loop .)
    BREAK           reduce using rule 6 (enunciado -> enunciado_loop .)
    VAR             reduce using rule 6 (enunciado -> enunciado_loop .)
    WHILA           reduce using rule 6 (enunciado -> enunciado_loop .)
    FOR             reduce using rule 6 (enunciado -> enunciado_loop .)
    CADENA          reduce using rule 6 (enunciado -> enunciado_loop .)
    ENTERO          reduce using rule 6 (enunciado -> enunciado_loop .)
    CORCHIZQ        reduce using rule 6 (enunciado -> enunciado_loop .)
    MENOS           reduce using rule 6 (enunciado -> enunciado_loop .)
    PARIZQ          reduce using rule 6 (enunciado -> enunciado_loop .)
    DECIMAL         reduce using rule 6 (enunciado -> enunciado_loop .)
    $end            reduce using rule 6 (enunciado -> enunciado_loop .)



state 39

    (4) enunciados -> vacio .
    (18) variables -> vacio .

  ! reduce/reduce conflict for END resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for WRITE resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for IF resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for READ resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for ID resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for SUMMON resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for FUNC resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for RETURN resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for BREAK resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for VAR resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for WHILA resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for FOR resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for CADENA resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for ENTERO resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for CORCHIZQ resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for MENOS resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for PARIZQ resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for DECIMAL resolved using rule 4 (enunciados -> vacio .).
  ! reduce/reduce conflict for $end resolved using rule 4 (enunciados -> vacio .).
    END             reduce using rule 4 (enunciados -> vacio .)
    WRITE           reduce using rule 4 (enunciados -> vacio .)
    IF              reduce using rule 4 (enunciados -> vacio .)
    READ            reduce using rule 4 (enunciados -> vacio .)
    ID              reduce using rule 4 (enunciados -> vacio .)
    SUMMON          reduce using rule 4 (enunciados -> vacio .)
    FUNC            reduce using rule 4 (enunciados -> vacio .)
    RETURN          reduce using rule 4 (enunciados -> vacio .)
    BREAK           reduce using rule 4 (enunciados -> vacio .)
    VAR             reduce using rule 4 (enunciados -> vacio .)
    WHILA           reduce using rule 4 (enunciados -> vacio .)
    FOR             reduce using rule 4 (enunciados -> vacio .)
    CADENA          reduce using rule 4 (enunciados -> vacio .)
    ENTERO          reduce using rule 4 (enunciados -> vacio .)
    CORCHIZQ        reduce using rule 4 (enunciados -> vacio .)
    MENOS           reduce using rule 4 (enunciados -> vacio .)
    PARIZQ          reduce using rule 4 (enunciados -> vacio .)
    DECIMAL         reduce using rule 4 (enunciados -> vacio .)
    $end            reduce using rule 4 (enunciados -> vacio .)

  ! END             [ reduce using rule 18 (variables -> vacio .) ]
  ! WRITE           [ reduce using rule 18 (variables -> vacio .) ]
  ! IF              [ reduce using rule 18 (variables -> vacio .) ]
  ! READ            [ reduce using rule 18 (variables -> vacio .) ]
  ! ID              [ reduce using rule 18 (variables -> vacio .) ]
  ! SUMMON          [ reduce using rule 18 (variables -> vacio .) ]
  ! FUNC            [ reduce using rule 18 (variables -> vacio .) ]
  ! RETURN          [ reduce using rule 18 (variables -> vacio .) ]
  ! BREAK           [ reduce using rule 18 (variables -> vacio .) ]
  ! VAR             [ reduce using rule 18 (variables -> vacio .) ]
  ! WHILA           [ reduce using rule 18 (variables -> vacio .) ]
  ! FOR             [ reduce using rule 18 (variables -> vacio .) ]
  ! CADENA          [ reduce using rule 18 (variables -> vacio .) ]
  ! ENTERO          [ reduce using rule 18 (variables -> vacio .) ]
  ! CORCHIZQ        [ reduce using rule 18 (variables -> vacio .) ]
  ! MENOS           [ reduce using rule 18 (variables -> vacio .) ]
  ! PARIZQ          [ reduce using rule 18 (variables -> vacio .) ]
  ! DECIMAL         [ reduce using rule 18 (variables -> vacio .) ]
  ! $end            [ reduce using rule 18 (variables -> vacio .) ]


state 40

    (26) enunciados_ciclos -> BREAK .

    $end            reduce using rule 26 (enunciados_ciclos -> BREAK .)
    WRITE           reduce using rule 26 (enunciados_ciclos -> BREAK .)
    IF              reduce using rule 26 (enunciados_ciclos -> BREAK .)
    READ            reduce using rule 26 (enunciados_ciclos -> BREAK .)
    ID              reduce using rule 26 (enunciados_ciclos -> BREAK .)
    SUMMON          reduce using rule 26 (enunciados_ciclos -> BREAK .)
    FUNC            reduce using rule 26 (enunciados_ciclos -> BREAK .)
    RETURN          reduce using rule 26 (enunciados_ciclos -> BREAK .)
    BREAK           reduce using rule 26 (enunciados_ciclos -> BREAK .)
    VAR             reduce using rule 26 (enunciados_ciclos -> BREAK .)
    WHILA           reduce using rule 26 (enunciados_ciclos -> BREAK .)
    FOR             reduce using rule 26 (enunciados_ciclos -> BREAK .)
    CADENA          reduce using rule 26 (enunciados_ciclos -> BREAK .)
    ENTERO          reduce using rule 26 (enunciados_ciclos -> BREAK .)
    CORCHIZQ        reduce using rule 26 (enunciados_ciclos -> BREAK .)
    MENOS           reduce using rule 26 (enunciados_ciclos -> BREAK .)
    PARIZQ          reduce using rule 26 (enunciados_ciclos -> BREAK .)
    DECIMAL         reduce using rule 26 (enunciados_ciclos -> BREAK .)
    END             reduce using rule 26 (enunciados_ciclos -> BREAK .)



state 41

    (109) expresion_simple -> MENOS . expresion_simple
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

    ID              shift and go to state 95
    ENTERO          shift and go to state 93
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    CADENA          shift and go to state 92
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_lst                  shift and go to state 50
    expresion_lista                shift and go to state 45
    enunciado_invocar              shift and go to state 94
    enunciado_asignacion           shift and go to state 52
    expresion_simple               shift and go to state 97
    lista                          shift and go to state 96

state 42

    (76) expresion_pow -> expresion_simple . POTENCIA expresion_simple
    (77) expresion_pow -> expresion_simple .

  ! shift/reduce conflict for POTENCIA resolved as shift.
    POTENCIA        shift and go to state 98
    POR             reduce using rule 77 (expresion_pow -> expresion_simple .)
    ENTRE           reduce using rule 77 (expresion_pow -> expresion_simple .)
    MODULO          reduce using rule 77 (expresion_pow -> expresion_simple .)
    MAS             reduce using rule 77 (expresion_pow -> expresion_simple .)
    MENOS           reduce using rule 77 (expresion_pow -> expresion_simple .)
    AND             reduce using rule 77 (expresion_pow -> expresion_simple .)
    OR              reduce using rule 77 (expresion_pow -> expresion_simple .)
    MAYOR           reduce using rule 77 (expresion_pow -> expresion_simple .)
    MENOR           reduce using rule 77 (expresion_pow -> expresion_simple .)
    MAYORIGUAL      reduce using rule 77 (expresion_pow -> expresion_simple .)
    MENORIGUAL      reduce using rule 77 (expresion_pow -> expresion_simple .)
    IGUAL           reduce using rule 77 (expresion_pow -> expresion_simple .)
    NOIGUAL         reduce using rule 77 (expresion_pow -> expresion_simple .)
    DOSPUNTOS       reduce using rule 77 (expresion_pow -> expresion_simple .)
    $end            reduce using rule 77 (expresion_pow -> expresion_simple .)
    WRITE           reduce using rule 77 (expresion_pow -> expresion_simple .)
    IF              reduce using rule 77 (expresion_pow -> expresion_simple .)
    READ            reduce using rule 77 (expresion_pow -> expresion_simple .)
    ID              reduce using rule 77 (expresion_pow -> expresion_simple .)
    SUMMON          reduce using rule 77 (expresion_pow -> expresion_simple .)
    FUNC            reduce using rule 77 (expresion_pow -> expresion_simple .)
    RETURN          reduce using rule 77 (expresion_pow -> expresion_simple .)
    BREAK           reduce using rule 77 (expresion_pow -> expresion_simple .)
    VAR             reduce using rule 77 (expresion_pow -> expresion_simple .)
    WHILA           reduce using rule 77 (expresion_pow -> expresion_simple .)
    FOR             reduce using rule 77 (expresion_pow -> expresion_simple .)
    CADENA          reduce using rule 77 (expresion_pow -> expresion_simple .)
    ENTERO          reduce using rule 77 (expresion_pow -> expresion_simple .)
    CORCHIZQ        reduce using rule 77 (expresion_pow -> expresion_simple .)
    PARIZQ          reduce using rule 77 (expresion_pow -> expresion_simple .)
    DECIMAL         reduce using rule 77 (expresion_pow -> expresion_simple .)
    END             reduce using rule 77 (expresion_pow -> expresion_simple .)
    THEN            reduce using rule 77 (expresion_pow -> expresion_simple .)
    PARDER          reduce using rule 77 (expresion_pow -> expresion_simple .)
    COMA            reduce using rule 77 (expresion_pow -> expresion_simple .)
    CORCHDER        reduce using rule 77 (expresion_pow -> expresion_simple .)

  ! POTENCIA        [ reduce using rule 77 (expresion_pow -> expresion_simple .) ]


state 43

    (7) enunciado -> enunciado_if .

    END             reduce using rule 7 (enunciado -> enunciado_if .)
    WRITE           reduce using rule 7 (enunciado -> enunciado_if .)
    IF              reduce using rule 7 (enunciado -> enunciado_if .)
    READ            reduce using rule 7 (enunciado -> enunciado_if .)
    ID              reduce using rule 7 (enunciado -> enunciado_if .)
    SUMMON          reduce using rule 7 (enunciado -> enunciado_if .)
    FUNC            reduce using rule 7 (enunciado -> enunciado_if .)
    RETURN          reduce using rule 7 (enunciado -> enunciado_if .)
    BREAK           reduce using rule 7 (enunciado -> enunciado_if .)
    VAR             reduce using rule 7 (enunciado -> enunciado_if .)
    WHILA           reduce using rule 7 (enunciado -> enunciado_if .)
    FOR             reduce using rule 7 (enunciado -> enunciado_if .)
    CADENA          reduce using rule 7 (enunciado -> enunciado_if .)
    ENTERO          reduce using rule 7 (enunciado -> enunciado_if .)
    CORCHIZQ        reduce using rule 7 (enunciado -> enunciado_if .)
    MENOS           reduce using rule 7 (enunciado -> enunciado_if .)
    PARIZQ          reduce using rule 7 (enunciado -> enunciado_if .)
    DECIMAL         reduce using rule 7 (enunciado -> enunciado_if .)
    $end            reduce using rule 7 (enunciado -> enunciado_if .)



state 44

    (15) enunciado -> expresion_comparacion .
    (52) expresion -> expresion_comparacion .

    END             reduce using rule 15 (enunciado -> expresion_comparacion .)
    WRITE           reduce using rule 15 (enunciado -> expresion_comparacion .)
    IF              reduce using rule 15 (enunciado -> expresion_comparacion .)
    READ            reduce using rule 15 (enunciado -> expresion_comparacion .)
    ID              reduce using rule 15 (enunciado -> expresion_comparacion .)
    SUMMON          reduce using rule 15 (enunciado -> expresion_comparacion .)
    FUNC            reduce using rule 15 (enunciado -> expresion_comparacion .)
    RETURN          reduce using rule 15 (enunciado -> expresion_comparacion .)
    BREAK           reduce using rule 15 (enunciado -> expresion_comparacion .)
    VAR             reduce using rule 15 (enunciado -> expresion_comparacion .)
    WHILA           reduce using rule 15 (enunciado -> expresion_comparacion .)
    FOR             reduce using rule 15 (enunciado -> expresion_comparacion .)
    CADENA          reduce using rule 15 (enunciado -> expresion_comparacion .)
    ENTERO          reduce using rule 15 (enunciado -> expresion_comparacion .)
    CORCHIZQ        reduce using rule 15 (enunciado -> expresion_comparacion .)
    MENOS           reduce using rule 15 (enunciado -> expresion_comparacion .)
    PARIZQ          reduce using rule 15 (enunciado -> expresion_comparacion .)
    DECIMAL         reduce using rule 15 (enunciado -> expresion_comparacion .)
    $end            reduce using rule 15 (enunciado -> expresion_comparacion .)
    AND             reduce using rule 52 (expresion -> expresion_comparacion .)
    OR              reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MENOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    IGUAL           reduce using rule 52 (expresion -> expresion_comparacion .)
    NOIGUAL         reduce using rule 52 (expresion -> expresion_comparacion .)



state 45

    (111) expresion_simple -> expresion_lista .

    POTENCIA        reduce using rule 111 (expresion_simple -> expresion_lista .)
    POR             reduce using rule 111 (expresion_simple -> expresion_lista .)
    ENTRE           reduce using rule 111 (expresion_simple -> expresion_lista .)
    MODULO          reduce using rule 111 (expresion_simple -> expresion_lista .)
    MAS             reduce using rule 111 (expresion_simple -> expresion_lista .)
    MENOS           reduce using rule 111 (expresion_simple -> expresion_lista .)
    AND             reduce using rule 111 (expresion_simple -> expresion_lista .)
    OR              reduce using rule 111 (expresion_simple -> expresion_lista .)
    MAYOR           reduce using rule 111 (expresion_simple -> expresion_lista .)
    MENOR           reduce using rule 111 (expresion_simple -> expresion_lista .)
    MAYORIGUAL      reduce using rule 111 (expresion_simple -> expresion_lista .)
    MENORIGUAL      reduce using rule 111 (expresion_simple -> expresion_lista .)
    IGUAL           reduce using rule 111 (expresion_simple -> expresion_lista .)
    NOIGUAL         reduce using rule 111 (expresion_simple -> expresion_lista .)
    COMA            reduce using rule 111 (expresion_simple -> expresion_lista .)
    PARDER          reduce using rule 111 (expresion_simple -> expresion_lista .)
    $end            reduce using rule 111 (expresion_simple -> expresion_lista .)
    WRITE           reduce using rule 111 (expresion_simple -> expresion_lista .)
    IF              reduce using rule 111 (expresion_simple -> expresion_lista .)
    READ            reduce using rule 111 (expresion_simple -> expresion_lista .)
    ID              reduce using rule 111 (expresion_simple -> expresion_lista .)
    SUMMON          reduce using rule 111 (expresion_simple -> expresion_lista .)
    FUNC            reduce using rule 111 (expresion_simple -> expresion_lista .)
    RETURN          reduce using rule 111 (expresion_simple -> expresion_lista .)
    BREAK           reduce using rule 111 (expresion_simple -> expresion_lista .)
    VAR             reduce using rule 111 (expresion_simple -> expresion_lista .)
    WHILA           reduce using rule 111 (expresion_simple -> expresion_lista .)
    FOR             reduce using rule 111 (expresion_simple -> expresion_lista .)
    CADENA          reduce using rule 111 (expresion_simple -> expresion_lista .)
    ENTERO          reduce using rule 111 (expresion_simple -> expresion_lista .)
    CORCHIZQ        reduce using rule 111 (expresion_simple -> expresion_lista .)
    PARIZQ          reduce using rule 111 (expresion_simple -> expresion_lista .)
    DECIMAL         reduce using rule 111 (expresion_simple -> expresion_lista .)
    END             reduce using rule 111 (expresion_simple -> expresion_lista .)
    THEN            reduce using rule 111 (expresion_simple -> expresion_lista .)
    CORCHDER        reduce using rule 111 (expresion_simple -> expresion_lista .)
    DOSPUNTOS       reduce using rule 111 (expresion_simple -> expresion_lista .)



state 46

    (103) lista -> CORCHIZQ . CORCHDER
    (104) lista -> CORCHIZQ . expresion mas_elementos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CORCHDER        shift and go to state 99
    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 100
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 47

    (41) enunciado_asignacion -> expresion_lst . IS expresion

    IS              shift and go to state 76



state 48

    (17) variables -> VAR enunciado_asignacion . mas_variables
    (19) mas_variables -> . COMA ID mas_variables
    (20) mas_variables -> . COMA enunciado_asignacion mas_variables
    (21) mas_variables -> . vacio
    (2) vacio -> .

    COMA            shift and go to state 103
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    CORCHIZQ        reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    $end            reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)


    mas_variables                  shift and go to state 101
    vacio                          shift and go to state 102

state 49

    (16) variables -> VAR ID . mas_variables
    (40) enunciado_asignacion -> ID . IS expresion
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (19) mas_variables -> . COMA ID mas_variables
    (20) mas_variables -> . COMA enunciado_asignacion mas_variables
    (21) mas_variables -> . vacio
    (2) vacio -> .

  ! shift/reduce conflict for CORCHIZQ resolved as shift.
    IS              shift and go to state 81
    CORCHIZQ        shift and go to state 105
    COMA            shift and go to state 103
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    $end            reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)

  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]

    mas_variables                  shift and go to state 104
    vacio                          shift and go to state 102

state 50

    (112) expresion_simple -> expresion_lst .
    (41) enunciado_asignacion -> expresion_lst . IS expresion

    POTENCIA        reduce using rule 112 (expresion_simple -> expresion_lst .)
    POR             reduce using rule 112 (expresion_simple -> expresion_lst .)
    ENTRE           reduce using rule 112 (expresion_simple -> expresion_lst .)
    MODULO          reduce using rule 112 (expresion_simple -> expresion_lst .)
    MAS             reduce using rule 112 (expresion_simple -> expresion_lst .)
    MENOS           reduce using rule 112 (expresion_simple -> expresion_lst .)
    COMA            reduce using rule 112 (expresion_simple -> expresion_lst .)
    AND             reduce using rule 112 (expresion_simple -> expresion_lst .)
    OR              reduce using rule 112 (expresion_simple -> expresion_lst .)
    MAYOR           reduce using rule 112 (expresion_simple -> expresion_lst .)
    MENOR           reduce using rule 112 (expresion_simple -> expresion_lst .)
    MAYORIGUAL      reduce using rule 112 (expresion_simple -> expresion_lst .)
    MENORIGUAL      reduce using rule 112 (expresion_simple -> expresion_lst .)
    IGUAL           reduce using rule 112 (expresion_simple -> expresion_lst .)
    NOIGUAL         reduce using rule 112 (expresion_simple -> expresion_lst .)
    PARDER          reduce using rule 112 (expresion_simple -> expresion_lst .)
    $end            reduce using rule 112 (expresion_simple -> expresion_lst .)
    WRITE           reduce using rule 112 (expresion_simple -> expresion_lst .)
    IF              reduce using rule 112 (expresion_simple -> expresion_lst .)
    READ            reduce using rule 112 (expresion_simple -> expresion_lst .)
    ID              reduce using rule 112 (expresion_simple -> expresion_lst .)
    SUMMON          reduce using rule 112 (expresion_simple -> expresion_lst .)
    FUNC            reduce using rule 112 (expresion_simple -> expresion_lst .)
    RETURN          reduce using rule 112 (expresion_simple -> expresion_lst .)
    BREAK           reduce using rule 112 (expresion_simple -> expresion_lst .)
    VAR             reduce using rule 112 (expresion_simple -> expresion_lst .)
    WHILA           reduce using rule 112 (expresion_simple -> expresion_lst .)
    FOR             reduce using rule 112 (expresion_simple -> expresion_lst .)
    CADENA          reduce using rule 112 (expresion_simple -> expresion_lst .)
    ENTERO          reduce using rule 112 (expresion_simple -> expresion_lst .)
    CORCHIZQ        reduce using rule 112 (expresion_simple -> expresion_lst .)
    PARIZQ          reduce using rule 112 (expresion_simple -> expresion_lst .)
    DECIMAL         reduce using rule 112 (expresion_simple -> expresion_lst .)
    END             reduce using rule 112 (expresion_simple -> expresion_lst .)
    THEN            reduce using rule 112 (expresion_simple -> expresion_lst .)
    CORCHDER        reduce using rule 112 (expresion_simple -> expresion_lst .)
    DOSPUNTOS       reduce using rule 112 (expresion_simple -> expresion_lst .)
    IS              shift and go to state 76



state 51

    (100) concatenables -> enunciado_invocar .
    (113) expresion_simple -> enunciado_invocar .

    PUNTOCOMA       reduce using rule 100 (concatenables -> enunciado_invocar .)
    POTENCIA        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    POR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ENTRE           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MODULO          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAS             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENOS           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    COMA            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    AND             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    OR              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    IGUAL           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    NOIGUAL         reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    PARDER          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    $end            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    WRITE           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    IF              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    READ            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ID              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    SUMMON          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    FUNC            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    RETURN          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    BREAK           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    VAR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    WHILA           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    FOR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    CADENA          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ENTERO          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    CORCHIZQ        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    PARIZQ          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    DECIMAL         reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    END             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    THEN            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    CORCHDER        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    DOSPUNTOS       reduce using rule 113 (expresion_simple -> enunciado_invocar .)



state 52

    (114) expresion_simple -> enunciado_asignacion .

    POTENCIA        reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    POR             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    ENTRE           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MODULO          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MAS             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MENOS           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    COMA            reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    AND             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    OR              reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MAYOR           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MENOR           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MAYORIGUAL      reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    MENORIGUAL      reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    IGUAL           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    NOIGUAL         reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    PARDER          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    $end            reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    WRITE           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    IF              reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    READ            reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    ID              reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    SUMMON          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    FUNC            reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    RETURN          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    BREAK           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    VAR             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    WHILA           reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    FOR             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    CADENA          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    ENTERO          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    CORCHIZQ        reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    PARIZQ          reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    DECIMAL         reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    END             reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    THEN            reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    CORCHDER        reduce using rule 114 (expresion_simple -> enunciado_asignacion .)
    DOSPUNTOS       reduce using rule 114 (expresion_simple -> enunciado_asignacion .)



state 53

    (97) concatenables -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! shift/reduce conflict for CORCHIZQ resolved as shift.
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    COMA            reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    PARDER          reduce using rule 107 (expresion_simple -> ID .)
    $end            reduce using rule 107 (expresion_simple -> ID .)
    WRITE           reduce using rule 107 (expresion_simple -> ID .)
    IF              reduce using rule 107 (expresion_simple -> ID .)
    READ            reduce using rule 107 (expresion_simple -> ID .)
    ID              reduce using rule 107 (expresion_simple -> ID .)
    SUMMON          reduce using rule 107 (expresion_simple -> ID .)
    FUNC            reduce using rule 107 (expresion_simple -> ID .)
    RETURN          reduce using rule 107 (expresion_simple -> ID .)
    BREAK           reduce using rule 107 (expresion_simple -> ID .)
    VAR             reduce using rule 107 (expresion_simple -> ID .)
    WHILA           reduce using rule 107 (expresion_simple -> ID .)
    FOR             reduce using rule 107 (expresion_simple -> ID .)
    CADENA          reduce using rule 107 (expresion_simple -> ID .)
    ENTERO          reduce using rule 107 (expresion_simple -> ID .)
    PARIZQ          reduce using rule 107 (expresion_simple -> ID .)
    DECIMAL         reduce using rule 107 (expresion_simple -> ID .)
    END             reduce using rule 107 (expresion_simple -> ID .)
    THEN            reduce using rule 107 (expresion_simple -> ID .)
    CORCHDER        reduce using rule 107 (expresion_simple -> ID .)
    DOSPUNTOS       reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! CORCHIZQ        [ reduce using rule 107 (expresion_simple -> ID .) ]


state 54

    (50) enunciado_return -> RETURN expresion .
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL

    END             reduce using rule 50 (enunciado_return -> RETURN expresion .)
    WRITE           reduce using rule 50 (enunciado_return -> RETURN expresion .)
    IF              reduce using rule 50 (enunciado_return -> RETURN expresion .)
    READ            reduce using rule 50 (enunciado_return -> RETURN expresion .)
    ID              reduce using rule 50 (enunciado_return -> RETURN expresion .)
    SUMMON          reduce using rule 50 (enunciado_return -> RETURN expresion .)
    FUNC            reduce using rule 50 (enunciado_return -> RETURN expresion .)
    RETURN          reduce using rule 50 (enunciado_return -> RETURN expresion .)
    BREAK           reduce using rule 50 (enunciado_return -> RETURN expresion .)
    VAR             reduce using rule 50 (enunciado_return -> RETURN expresion .)
    WHILA           reduce using rule 50 (enunciado_return -> RETURN expresion .)
    FOR             reduce using rule 50 (enunciado_return -> RETURN expresion .)
    CADENA          reduce using rule 50 (enunciado_return -> RETURN expresion .)
    ENTERO          reduce using rule 50 (enunciado_return -> RETURN expresion .)
    CORCHIZQ        reduce using rule 50 (enunciado_return -> RETURN expresion .)
    MENOS           reduce using rule 50 (enunciado_return -> RETURN expresion .)
    PARIZQ          reduce using rule 50 (enunciado_return -> RETURN expresion .)
    DECIMAL         reduce using rule 50 (enunciado_return -> RETURN expresion .)
    $end            reduce using rule 50 (enunciado_return -> RETURN expresion .)
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86


    operador_comparacion           shift and go to state 87

state 55

    (52) expresion -> expresion_comparacion .

    POTENCIA        reduce using rule 52 (expresion -> expresion_comparacion .)
    POR             reduce using rule 52 (expresion -> expresion_comparacion .)
    ENTRE           reduce using rule 52 (expresion -> expresion_comparacion .)
    MODULO          reduce using rule 52 (expresion -> expresion_comparacion .)
    MAS             reduce using rule 52 (expresion -> expresion_comparacion .)
    MENOS           reduce using rule 52 (expresion -> expresion_comparacion .)
    AND             reduce using rule 52 (expresion -> expresion_comparacion .)
    OR              reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MENOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    IGUAL           reduce using rule 52 (expresion -> expresion_comparacion .)
    NOIGUAL         reduce using rule 52 (expresion -> expresion_comparacion .)
    $end            reduce using rule 52 (expresion -> expresion_comparacion .)
    WRITE           reduce using rule 52 (expresion -> expresion_comparacion .)
    IF              reduce using rule 52 (expresion -> expresion_comparacion .)
    READ            reduce using rule 52 (expresion -> expresion_comparacion .)
    ID              reduce using rule 52 (expresion -> expresion_comparacion .)
    SUMMON          reduce using rule 52 (expresion -> expresion_comparacion .)
    FUNC            reduce using rule 52 (expresion -> expresion_comparacion .)
    RETURN          reduce using rule 52 (expresion -> expresion_comparacion .)
    BREAK           reduce using rule 52 (expresion -> expresion_comparacion .)
    VAR             reduce using rule 52 (expresion -> expresion_comparacion .)
    WHILA           reduce using rule 52 (expresion -> expresion_comparacion .)
    FOR             reduce using rule 52 (expresion -> expresion_comparacion .)
    CADENA          reduce using rule 52 (expresion -> expresion_comparacion .)
    ENTERO          reduce using rule 52 (expresion -> expresion_comparacion .)
    CORCHIZQ        reduce using rule 52 (expresion -> expresion_comparacion .)
    PARIZQ          reduce using rule 52 (expresion -> expresion_comparacion .)
    DECIMAL         reduce using rule 52 (expresion -> expresion_comparacion .)
    END             reduce using rule 52 (expresion -> expresion_comparacion .)
    THEN            reduce using rule 52 (expresion -> expresion_comparacion .)
    PARDER          reduce using rule 52 (expresion -> expresion_comparacion .)
    COMA            reduce using rule 52 (expresion -> expresion_comparacion .)
    CORCHDER        reduce using rule 52 (expresion -> expresion_comparacion .)
    DOSPUNTOS       reduce using rule 52 (expresion -> expresion_comparacion .)



state 56

    (39) enunciado_read -> READ expresion .
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL

    END             reduce using rule 39 (enunciado_read -> READ expresion .)
    WRITE           reduce using rule 39 (enunciado_read -> READ expresion .)
    IF              reduce using rule 39 (enunciado_read -> READ expresion .)
    READ            reduce using rule 39 (enunciado_read -> READ expresion .)
    ID              reduce using rule 39 (enunciado_read -> READ expresion .)
    SUMMON          reduce using rule 39 (enunciado_read -> READ expresion .)
    FUNC            reduce using rule 39 (enunciado_read -> READ expresion .)
    RETURN          reduce using rule 39 (enunciado_read -> READ expresion .)
    BREAK           reduce using rule 39 (enunciado_read -> READ expresion .)
    VAR             reduce using rule 39 (enunciado_read -> READ expresion .)
    WHILA           reduce using rule 39 (enunciado_read -> READ expresion .)
    FOR             reduce using rule 39 (enunciado_read -> READ expresion .)
    CADENA          reduce using rule 39 (enunciado_read -> READ expresion .)
    ENTERO          reduce using rule 39 (enunciado_read -> READ expresion .)
    CORCHIZQ        reduce using rule 39 (enunciado_read -> READ expresion .)
    MENOS           reduce using rule 39 (enunciado_read -> READ expresion .)
    PARIZQ          reduce using rule 39 (enunciado_read -> READ expresion .)
    DECIMAL         reduce using rule 39 (enunciado_read -> READ expresion .)
    $end            reduce using rule 39 (enunciado_read -> READ expresion .)
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86


    operador_comparacion           shift and go to state 87

state 57

    (116) expresion_simple -> CADENA .
    (96) concatenables -> CADENA .

    POTENCIA        reduce using rule 116 (expresion_simple -> CADENA .)
    POR             reduce using rule 116 (expresion_simple -> CADENA .)
    ENTRE           reduce using rule 116 (expresion_simple -> CADENA .)
    MODULO          reduce using rule 116 (expresion_simple -> CADENA .)
    MAS             reduce using rule 116 (expresion_simple -> CADENA .)
    MENOS           reduce using rule 116 (expresion_simple -> CADENA .)
    CORCHDER        reduce using rule 116 (expresion_simple -> CADENA .)
    AND             reduce using rule 116 (expresion_simple -> CADENA .)
    OR              reduce using rule 116 (expresion_simple -> CADENA .)
    MAYOR           reduce using rule 116 (expresion_simple -> CADENA .)
    MENOR           reduce using rule 116 (expresion_simple -> CADENA .)
    MAYORIGUAL      reduce using rule 116 (expresion_simple -> CADENA .)
    MENORIGUAL      reduce using rule 116 (expresion_simple -> CADENA .)
    IGUAL           reduce using rule 116 (expresion_simple -> CADENA .)
    NOIGUAL         reduce using rule 116 (expresion_simple -> CADENA .)
    PARDER          reduce using rule 116 (expresion_simple -> CADENA .)
    DOSPUNTOS       reduce using rule 116 (expresion_simple -> CADENA .)
    THEN            reduce using rule 116 (expresion_simple -> CADENA .)
    PUNTOCOMA       reduce using rule 96 (concatenables -> CADENA .)



state 58

    (108) expresion_simple -> ENTERO .
    (98) concatenables -> ENTERO .

    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    THEN            reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)



state 59

    (29) enunciado_whila -> WHILA expresion_condicion . THEN enunciados_ciclos END

    THEN            shift and go to state 107



state 60

    (27) expresion_condicion -> expresion_suma .
    (51) expresion -> expresion_suma .

    DOSPUNTOS       reduce using rule 27 (expresion_condicion -> expresion_suma .)
    THEN            reduce using rule 27 (expresion_condicion -> expresion_suma .)
    PARDER          reduce using rule 27 (expresion_condicion -> expresion_suma .)
    CORCHDER        reduce using rule 27 (expresion_condicion -> expresion_suma .)
    AND             reduce using rule 51 (expresion -> expresion_suma .)
    OR              reduce using rule 51 (expresion -> expresion_suma .)
    MAYOR           reduce using rule 51 (expresion -> expresion_suma .)
    MENOR           reduce using rule 51 (expresion -> expresion_suma .)
    MAYORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    MENORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    IGUAL           reduce using rule 51 (expresion -> expresion_suma .)
    NOIGUAL         reduce using rule 51 (expresion -> expresion_suma .)



state 61

    (113) expresion_simple -> enunciado_invocar .
    (100) concatenables -> enunciado_invocar .

    POTENCIA        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    POR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ENTRE           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MODULO          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAS             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENOS           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    CORCHDER        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    AND             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    OR              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    IGUAL           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    NOIGUAL         reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    PARDER          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    DOSPUNTOS       reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    THEN            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    PUNTOCOMA       reduce using rule 100 (concatenables -> enunciado_invocar .)



state 62

    (115) expresion_simple -> lista .
    (99) concatenables -> lista .

    POTENCIA        reduce using rule 115 (expresion_simple -> lista .)
    POR             reduce using rule 115 (expresion_simple -> lista .)
    ENTRE           reduce using rule 115 (expresion_simple -> lista .)
    MODULO          reduce using rule 115 (expresion_simple -> lista .)
    MAS             reduce using rule 115 (expresion_simple -> lista .)
    MENOS           reduce using rule 115 (expresion_simple -> lista .)
    CORCHDER        reduce using rule 115 (expresion_simple -> lista .)
    AND             reduce using rule 115 (expresion_simple -> lista .)
    OR              reduce using rule 115 (expresion_simple -> lista .)
    MAYOR           reduce using rule 115 (expresion_simple -> lista .)
    MENOR           reduce using rule 115 (expresion_simple -> lista .)
    MAYORIGUAL      reduce using rule 115 (expresion_simple -> lista .)
    MENORIGUAL      reduce using rule 115 (expresion_simple -> lista .)
    IGUAL           reduce using rule 115 (expresion_simple -> lista .)
    NOIGUAL         reduce using rule 115 (expresion_simple -> lista .)
    PARDER          reduce using rule 115 (expresion_simple -> lista .)
    DOSPUNTOS       reduce using rule 115 (expresion_simple -> lista .)
    THEN            reduce using rule 115 (expresion_simple -> lista .)
    PUNTOCOMA       reduce using rule 99 (concatenables -> lista .)



state 63

    (107) expresion_simple -> ID .
    (97) concatenables -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    THEN            reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81



state 64

    (28) expresion_condicion -> expresion_comparacion .
    (52) expresion -> expresion_comparacion .

    DOSPUNTOS       reduce using rule 28 (expresion_condicion -> expresion_comparacion .)
    THEN            reduce using rule 28 (expresion_condicion -> expresion_comparacion .)
    PARDER          reduce using rule 28 (expresion_condicion -> expresion_comparacion .)
    CORCHDER        reduce using rule 28 (expresion_condicion -> expresion_comparacion .)
    AND             reduce using rule 52 (expresion -> expresion_comparacion .)
    OR              reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MENOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    IGUAL           reduce using rule 52 (expresion -> expresion_comparacion .)
    NOIGUAL         reduce using rule 52 (expresion -> expresion_comparacion .)



state 65

    (110) expresion_simple -> PARIZQ expresion . PARDER
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL

    PARDER          shift and go to state 108
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86


    operador_comparacion           shift and go to state 87

state 66

    (95) expresion_concatenacion -> concatenables PUNTOCOMA . concatenables mas_cadenas
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER

    CADENA          shift and go to state 110
    ID              shift and go to state 113
    ENTERO          shift and go to state 114
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15


    concatenables                  shift and go to state 109
    enunciado_invocar              shift and go to state 111
    lista                          shift and go to state 112

state 67

    (42) enunciado_invocar -> SUMMON ID . PARIZQ parametros PARDER

    PARIZQ          shift and go to state 115



state 68

    (82) operador_mul -> MODULO .

    ID              reduce using rule 82 (operador_mul -> MODULO .)
    ENTERO          reduce using rule 82 (operador_mul -> MODULO .)
    MENOS           reduce using rule 82 (operador_mul -> MODULO .)
    PARIZQ          reduce using rule 82 (operador_mul -> MODULO .)
    CADENA          reduce using rule 82 (operador_mul -> MODULO .)
    DECIMAL         reduce using rule 82 (operador_mul -> MODULO .)
    SUMMON          reduce using rule 82 (operador_mul -> MODULO .)
    CORCHIZQ        reduce using rule 82 (operador_mul -> MODULO .)



state 69

    (81) operador_mul -> ENTRE .

    ID              reduce using rule 81 (operador_mul -> ENTRE .)
    ENTERO          reduce using rule 81 (operador_mul -> ENTRE .)
    MENOS           reduce using rule 81 (operador_mul -> ENTRE .)
    PARIZQ          reduce using rule 81 (operador_mul -> ENTRE .)
    CADENA          reduce using rule 81 (operador_mul -> ENTRE .)
    DECIMAL         reduce using rule 81 (operador_mul -> ENTRE .)
    SUMMON          reduce using rule 81 (operador_mul -> ENTRE .)
    CORCHIZQ        reduce using rule 81 (operador_mul -> ENTRE .)



state 70

    (80) operador_mul -> POR .

    ID              reduce using rule 80 (operador_mul -> POR .)
    ENTERO          reduce using rule 80 (operador_mul -> POR .)
    MENOS           reduce using rule 80 (operador_mul -> POR .)
    PARIZQ          reduce using rule 80 (operador_mul -> POR .)
    CADENA          reduce using rule 80 (operador_mul -> POR .)
    DECIMAL         reduce using rule 80 (operador_mul -> POR .)
    SUMMON          reduce using rule 80 (operador_mul -> POR .)
    CORCHIZQ        reduce using rule 80 (operador_mul -> POR .)



state 71

    (74) expresion_mul -> expresion_pow operador_mul . expresion_mul
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

    ID              shift and go to state 95
    ENTERO          shift and go to state 93
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    CADENA          shift and go to state 92
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 116
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    enunciado_invocar              shift and go to state 94
    enunciado_asignacion           shift and go to state 52
    expresion_simple               shift and go to state 42
    lista                          shift and go to state 96

state 72

    (78) operador_suma -> MAS .

    ID              reduce using rule 78 (operador_suma -> MAS .)
    ENTERO          reduce using rule 78 (operador_suma -> MAS .)
    MENOS           reduce using rule 78 (operador_suma -> MAS .)
    PARIZQ          reduce using rule 78 (operador_suma -> MAS .)
    CADENA          reduce using rule 78 (operador_suma -> MAS .)
    DECIMAL         reduce using rule 78 (operador_suma -> MAS .)
    SUMMON          reduce using rule 78 (operador_suma -> MAS .)
    CORCHIZQ        reduce using rule 78 (operador_suma -> MAS .)



state 73

    (72) expresion_suma -> expresion_mul operador_suma . expresion_suma
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

    ID              shift and go to state 95
    ENTERO          shift and go to state 93
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    CADENA          shift and go to state 92
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    lista                          shift and go to state 96
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_suma                 shift and go to state 117
    enunciado_invocar              shift and go to state 94
    enunciado_asignacion           shift and go to state 52
    expresion_simple               shift and go to state 42

state 74

    (79) operador_suma -> MENOS .

    ID              reduce using rule 79 (operador_suma -> MENOS .)
    ENTERO          reduce using rule 79 (operador_suma -> MENOS .)
    MENOS           reduce using rule 79 (operador_suma -> MENOS .)
    PARIZQ          reduce using rule 79 (operador_suma -> MENOS .)
    CADENA          reduce using rule 79 (operador_suma -> MENOS .)
    DECIMAL         reduce using rule 79 (operador_suma -> MENOS .)
    SUMMON          reduce using rule 79 (operador_suma -> MENOS .)
    CORCHIZQ        reduce using rule 79 (operador_suma -> MENOS .)



state 75

    (3) enunciados -> enunciado enunciados .
    (25) enunciados_ciclos -> enunciados .

  ! reduce/reduce conflict for WRITE resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for IF resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for READ resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for ID resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for SUMMON resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for FUNC resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for RETURN resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for BREAK resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for VAR resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for WHILA resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for FOR resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for CADENA resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for ENTERO resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for CORCHIZQ resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for MENOS resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for PARIZQ resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for DECIMAL resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for $end resolved using rule 3 (enunciados -> enunciado enunciados .).
  ! reduce/reduce conflict for END resolved using rule 3 (enunciados -> enunciado enunciados .).
    END             reduce using rule 3 (enunciados -> enunciado enunciados .)
    WRITE           reduce using rule 3 (enunciados -> enunciado enunciados .)
    IF              reduce using rule 3 (enunciados -> enunciado enunciados .)
    READ            reduce using rule 3 (enunciados -> enunciado enunciados .)
    ID              reduce using rule 3 (enunciados -> enunciado enunciados .)
    SUMMON          reduce using rule 3 (enunciados -> enunciado enunciados .)
    FUNC            reduce using rule 3 (enunciados -> enunciado enunciados .)
    RETURN          reduce using rule 3 (enunciados -> enunciado enunciados .)
    BREAK           reduce using rule 3 (enunciados -> enunciado enunciados .)
    VAR             reduce using rule 3 (enunciados -> enunciado enunciados .)
    WHILA           reduce using rule 3 (enunciados -> enunciado enunciados .)
    FOR             reduce using rule 3 (enunciados -> enunciado enunciados .)
    CADENA          reduce using rule 3 (enunciados -> enunciado enunciados .)
    ENTERO          reduce using rule 3 (enunciados -> enunciado enunciados .)
    CORCHIZQ        reduce using rule 3 (enunciados -> enunciado enunciados .)
    MENOS           reduce using rule 3 (enunciados -> enunciado enunciados .)
    PARIZQ          reduce using rule 3 (enunciados -> enunciado enunciados .)
    DECIMAL         reduce using rule 3 (enunciados -> enunciado enunciados .)
    $end            reduce using rule 3 (enunciados -> enunciado enunciados .)

  ! WRITE           [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! IF              [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! READ            [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! ID              [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! SUMMON          [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! FUNC            [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! RETURN          [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! BREAK           [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! VAR             [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! WHILA           [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! FOR             [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! CADENA          [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! ENTERO          [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! CORCHIZQ        [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! MENOS           [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! PARIZQ          [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! DECIMAL         [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! $end            [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]
  ! END             [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]


state 76

    (41) enunciado_asignacion -> expresion_lst IS . expresion
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion                      shift and go to state 118
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion_lst                  shift and go to state 50
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 77

    (35) enunciado_for -> FOR ID . IN expfor enunciados_ciclos END

    IN              shift and go to state 119



state 78

    (22) enunciado_print -> WRITE expresion .
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL

    END             reduce using rule 22 (enunciado_print -> WRITE expresion .)
    WRITE           reduce using rule 22 (enunciado_print -> WRITE expresion .)
    IF              reduce using rule 22 (enunciado_print -> WRITE expresion .)
    READ            reduce using rule 22 (enunciado_print -> WRITE expresion .)
    ID              reduce using rule 22 (enunciado_print -> WRITE expresion .)
    SUMMON          reduce using rule 22 (enunciado_print -> WRITE expresion .)
    FUNC            reduce using rule 22 (enunciado_print -> WRITE expresion .)
    RETURN          reduce using rule 22 (enunciado_print -> WRITE expresion .)
    BREAK           reduce using rule 22 (enunciado_print -> WRITE expresion .)
    VAR             reduce using rule 22 (enunciado_print -> WRITE expresion .)
    WHILA           reduce using rule 22 (enunciado_print -> WRITE expresion .)
    FOR             reduce using rule 22 (enunciado_print -> WRITE expresion .)
    CADENA          reduce using rule 22 (enunciado_print -> WRITE expresion .)
    ENTERO          reduce using rule 22 (enunciado_print -> WRITE expresion .)
    CORCHIZQ        reduce using rule 22 (enunciado_print -> WRITE expresion .)
    MENOS           reduce using rule 22 (enunciado_print -> WRITE expresion .)
    PARIZQ          reduce using rule 22 (enunciado_print -> WRITE expresion .)
    DECIMAL         reduce using rule 22 (enunciado_print -> WRITE expresion .)
    $end            reduce using rule 22 (enunciado_print -> WRITE expresion .)
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86


    operador_comparacion           shift and go to state 87

state 79

    (43) enunciado_declaracion -> FUNC ID . PARIZQ parametrosf PARDER enunciados END

    PARIZQ          shift and go to state 120



state 80

    (58) expresion_lst -> ID CORCHIZQ . pos CORCHDER
    (54) expresion_lista -> ID CORCHIZQ . DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID CORCHIZQ . limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID CORCHIZQ . DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID CORCHIZQ . limite DOSPUNTOS limite CORCHDER
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

  ! shift/reduce conflict for DOSPUNTOS resolved as shift.
    DOSPUNTOS       shift and go to state 123
    ENTERO          shift and go to state 124
    MENOS           shift and go to state 129
    ID              shift and go to state 126
    PARIZQ          shift and go to state 122
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46

  ! DOSPUNTOS       [ reduce using rule 2 (vacio -> .) ]

    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 121
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 125
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 128
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 64

state 81

    (40) enunciado_asignacion -> ID IS . expresion
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 130
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 82

    (36) enunciado_if -> IF expresion_condicion . THEN enunciados END enunciado_else

    THEN            shift and go to state 131



state 83

    (87) operador_comparacion -> AND .

    CADENA          reduce using rule 87 (operador_comparacion -> AND .)
    ID              reduce using rule 87 (operador_comparacion -> AND .)
    ENTERO          reduce using rule 87 (operador_comparacion -> AND .)
    CORCHIZQ        reduce using rule 87 (operador_comparacion -> AND .)
    SUMMON          reduce using rule 87 (operador_comparacion -> AND .)
    MENOS           reduce using rule 87 (operador_comparacion -> AND .)
    PARIZQ          reduce using rule 87 (operador_comparacion -> AND .)
    DECIMAL         reduce using rule 87 (operador_comparacion -> AND .)



state 84

    (88) operador_comparacion -> OR .

    CADENA          reduce using rule 88 (operador_comparacion -> OR .)
    ID              reduce using rule 88 (operador_comparacion -> OR .)
    ENTERO          reduce using rule 88 (operador_comparacion -> OR .)
    CORCHIZQ        reduce using rule 88 (operador_comparacion -> OR .)
    SUMMON          reduce using rule 88 (operador_comparacion -> OR .)
    MENOS           reduce using rule 88 (operador_comparacion -> OR .)
    PARIZQ          reduce using rule 88 (operador_comparacion -> OR .)
    DECIMAL         reduce using rule 88 (operador_comparacion -> OR .)



state 85

    (90) operador_comparacion -> MENOR .

    CADENA          reduce using rule 90 (operador_comparacion -> MENOR .)
    ID              reduce using rule 90 (operador_comparacion -> MENOR .)
    ENTERO          reduce using rule 90 (operador_comparacion -> MENOR .)
    CORCHIZQ        reduce using rule 90 (operador_comparacion -> MENOR .)
    SUMMON          reduce using rule 90 (operador_comparacion -> MENOR .)
    MENOS           reduce using rule 90 (operador_comparacion -> MENOR .)
    PARIZQ          reduce using rule 90 (operador_comparacion -> MENOR .)
    DECIMAL         reduce using rule 90 (operador_comparacion -> MENOR .)



state 86

    (94) operador_comparacion -> NOIGUAL .

    CADENA          reduce using rule 94 (operador_comparacion -> NOIGUAL .)
    ID              reduce using rule 94 (operador_comparacion -> NOIGUAL .)
    ENTERO          reduce using rule 94 (operador_comparacion -> NOIGUAL .)
    CORCHIZQ        reduce using rule 94 (operador_comparacion -> NOIGUAL .)
    SUMMON          reduce using rule 94 (operador_comparacion -> NOIGUAL .)
    MENOS           reduce using rule 94 (operador_comparacion -> NOIGUAL .)
    PARIZQ          reduce using rule 94 (operador_comparacion -> NOIGUAL .)
    DECIMAL         reduce using rule 94 (operador_comparacion -> NOIGUAL .)



state 87

    (83) expresion_comparacion -> expresion operador_comparacion . expresion2
    (84) expresion2 -> . expresion_suma
    (85) expresion2 -> . expresion_comparacion
    (86) expresion2 -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion2                     shift and go to state 132
    expresion_suma                 shift and go to state 133
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 134
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 135

state 88

    (91) operador_comparacion -> MAYORIGUAL .

    CADENA          reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)
    ID              reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)
    ENTERO          reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)
    CORCHIZQ        reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)
    SUMMON          reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)
    MENOS           reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)
    PARIZQ          reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)
    DECIMAL         reduce using rule 91 (operador_comparacion -> MAYORIGUAL .)



state 89

    (92) operador_comparacion -> MENORIGUAL .

    CADENA          reduce using rule 92 (operador_comparacion -> MENORIGUAL .)
    ID              reduce using rule 92 (operador_comparacion -> MENORIGUAL .)
    ENTERO          reduce using rule 92 (operador_comparacion -> MENORIGUAL .)
    CORCHIZQ        reduce using rule 92 (operador_comparacion -> MENORIGUAL .)
    SUMMON          reduce using rule 92 (operador_comparacion -> MENORIGUAL .)
    MENOS           reduce using rule 92 (operador_comparacion -> MENORIGUAL .)
    PARIZQ          reduce using rule 92 (operador_comparacion -> MENORIGUAL .)
    DECIMAL         reduce using rule 92 (operador_comparacion -> MENORIGUAL .)



state 90

    (93) operador_comparacion -> IGUAL .

    CADENA          reduce using rule 93 (operador_comparacion -> IGUAL .)
    ID              reduce using rule 93 (operador_comparacion -> IGUAL .)
    ENTERO          reduce using rule 93 (operador_comparacion -> IGUAL .)
    CORCHIZQ        reduce using rule 93 (operador_comparacion -> IGUAL .)
    SUMMON          reduce using rule 93 (operador_comparacion -> IGUAL .)
    MENOS           reduce using rule 93 (operador_comparacion -> IGUAL .)
    PARIZQ          reduce using rule 93 (operador_comparacion -> IGUAL .)
    DECIMAL         reduce using rule 93 (operador_comparacion -> IGUAL .)



state 91

    (89) operador_comparacion -> MAYOR .

    CADENA          reduce using rule 89 (operador_comparacion -> MAYOR .)
    ID              reduce using rule 89 (operador_comparacion -> MAYOR .)
    ENTERO          reduce using rule 89 (operador_comparacion -> MAYOR .)
    CORCHIZQ        reduce using rule 89 (operador_comparacion -> MAYOR .)
    SUMMON          reduce using rule 89 (operador_comparacion -> MAYOR .)
    MENOS           reduce using rule 89 (operador_comparacion -> MAYOR .)
    PARIZQ          reduce using rule 89 (operador_comparacion -> MAYOR .)
    DECIMAL         reduce using rule 89 (operador_comparacion -> MAYOR .)



state 92

    (116) expresion_simple -> CADENA .

    POTENCIA        reduce using rule 116 (expresion_simple -> CADENA .)
    POR             reduce using rule 116 (expresion_simple -> CADENA .)
    ENTRE           reduce using rule 116 (expresion_simple -> CADENA .)
    MODULO          reduce using rule 116 (expresion_simple -> CADENA .)
    MAS             reduce using rule 116 (expresion_simple -> CADENA .)
    MENOS           reduce using rule 116 (expresion_simple -> CADENA .)
    AND             reduce using rule 116 (expresion_simple -> CADENA .)
    OR              reduce using rule 116 (expresion_simple -> CADENA .)
    MAYOR           reduce using rule 116 (expresion_simple -> CADENA .)
    MENOR           reduce using rule 116 (expresion_simple -> CADENA .)
    MAYORIGUAL      reduce using rule 116 (expresion_simple -> CADENA .)
    MENORIGUAL      reduce using rule 116 (expresion_simple -> CADENA .)
    IGUAL           reduce using rule 116 (expresion_simple -> CADENA .)
    NOIGUAL         reduce using rule 116 (expresion_simple -> CADENA .)
    $end            reduce using rule 116 (expresion_simple -> CADENA .)
    WRITE           reduce using rule 116 (expresion_simple -> CADENA .)
    IF              reduce using rule 116 (expresion_simple -> CADENA .)
    READ            reduce using rule 116 (expresion_simple -> CADENA .)
    ID              reduce using rule 116 (expresion_simple -> CADENA .)
    SUMMON          reduce using rule 116 (expresion_simple -> CADENA .)
    FUNC            reduce using rule 116 (expresion_simple -> CADENA .)
    RETURN          reduce using rule 116 (expresion_simple -> CADENA .)
    BREAK           reduce using rule 116 (expresion_simple -> CADENA .)
    VAR             reduce using rule 116 (expresion_simple -> CADENA .)
    WHILA           reduce using rule 116 (expresion_simple -> CADENA .)
    FOR             reduce using rule 116 (expresion_simple -> CADENA .)
    CADENA          reduce using rule 116 (expresion_simple -> CADENA .)
    ENTERO          reduce using rule 116 (expresion_simple -> CADENA .)
    CORCHIZQ        reduce using rule 116 (expresion_simple -> CADENA .)
    PARIZQ          reduce using rule 116 (expresion_simple -> CADENA .)
    DECIMAL         reduce using rule 116 (expresion_simple -> CADENA .)
    END             reduce using rule 116 (expresion_simple -> CADENA .)
    THEN            reduce using rule 116 (expresion_simple -> CADENA .)
    PARDER          reduce using rule 116 (expresion_simple -> CADENA .)
    COMA            reduce using rule 116 (expresion_simple -> CADENA .)
    CORCHDER        reduce using rule 116 (expresion_simple -> CADENA .)
    DOSPUNTOS       reduce using rule 116 (expresion_simple -> CADENA .)



state 93

    (108) expresion_simple -> ENTERO .

    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    $end            reduce using rule 108 (expresion_simple -> ENTERO .)
    WRITE           reduce using rule 108 (expresion_simple -> ENTERO .)
    IF              reduce using rule 108 (expresion_simple -> ENTERO .)
    READ            reduce using rule 108 (expresion_simple -> ENTERO .)
    ID              reduce using rule 108 (expresion_simple -> ENTERO .)
    SUMMON          reduce using rule 108 (expresion_simple -> ENTERO .)
    FUNC            reduce using rule 108 (expresion_simple -> ENTERO .)
    RETURN          reduce using rule 108 (expresion_simple -> ENTERO .)
    BREAK           reduce using rule 108 (expresion_simple -> ENTERO .)
    VAR             reduce using rule 108 (expresion_simple -> ENTERO .)
    WHILA           reduce using rule 108 (expresion_simple -> ENTERO .)
    FOR             reduce using rule 108 (expresion_simple -> ENTERO .)
    CADENA          reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTERO          reduce using rule 108 (expresion_simple -> ENTERO .)
    CORCHIZQ        reduce using rule 108 (expresion_simple -> ENTERO .)
    PARIZQ          reduce using rule 108 (expresion_simple -> ENTERO .)
    DECIMAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    END             reduce using rule 108 (expresion_simple -> ENTERO .)
    THEN            reduce using rule 108 (expresion_simple -> ENTERO .)
    PARDER          reduce using rule 108 (expresion_simple -> ENTERO .)
    COMA            reduce using rule 108 (expresion_simple -> ENTERO .)
    CORCHDER        reduce using rule 108 (expresion_simple -> ENTERO .)
    DOSPUNTOS       reduce using rule 108 (expresion_simple -> ENTERO .)



state 94

    (113) expresion_simple -> enunciado_invocar .

    POTENCIA        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    POR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ENTRE           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MODULO          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAS             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENOS           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    AND             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    OR              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENOR           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MAYORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    MENORIGUAL      reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    IGUAL           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    NOIGUAL         reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    $end            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    WRITE           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    IF              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    READ            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ID              reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    SUMMON          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    FUNC            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    RETURN          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    BREAK           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    VAR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    WHILA           reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    FOR             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    CADENA          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    ENTERO          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    CORCHIZQ        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    PARIZQ          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    DECIMAL         reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    END             reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    THEN            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    PARDER          reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    COMA            reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    CORCHDER        reduce using rule 113 (expresion_simple -> enunciado_invocar .)
    DOSPUNTOS       reduce using rule 113 (expresion_simple -> enunciado_invocar .)



state 95

    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! shift/reduce conflict for CORCHIZQ resolved as shift.
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    $end            reduce using rule 107 (expresion_simple -> ID .)
    WRITE           reduce using rule 107 (expresion_simple -> ID .)
    IF              reduce using rule 107 (expresion_simple -> ID .)
    READ            reduce using rule 107 (expresion_simple -> ID .)
    ID              reduce using rule 107 (expresion_simple -> ID .)
    SUMMON          reduce using rule 107 (expresion_simple -> ID .)
    FUNC            reduce using rule 107 (expresion_simple -> ID .)
    RETURN          reduce using rule 107 (expresion_simple -> ID .)
    BREAK           reduce using rule 107 (expresion_simple -> ID .)
    VAR             reduce using rule 107 (expresion_simple -> ID .)
    WHILA           reduce using rule 107 (expresion_simple -> ID .)
    FOR             reduce using rule 107 (expresion_simple -> ID .)
    CADENA          reduce using rule 107 (expresion_simple -> ID .)
    ENTERO          reduce using rule 107 (expresion_simple -> ID .)
    PARIZQ          reduce using rule 107 (expresion_simple -> ID .)
    DECIMAL         reduce using rule 107 (expresion_simple -> ID .)
    END             reduce using rule 107 (expresion_simple -> ID .)
    THEN            reduce using rule 107 (expresion_simple -> ID .)
    PARDER          reduce using rule 107 (expresion_simple -> ID .)
    COMA            reduce using rule 107 (expresion_simple -> ID .)
    CORCHDER        reduce using rule 107 (expresion_simple -> ID .)
    DOSPUNTOS       reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! CORCHIZQ        [ reduce using rule 107 (expresion_simple -> ID .) ]


state 96

    (115) expresion_simple -> lista .

    POTENCIA        reduce using rule 115 (expresion_simple -> lista .)
    POR             reduce using rule 115 (expresion_simple -> lista .)
    ENTRE           reduce using rule 115 (expresion_simple -> lista .)
    MODULO          reduce using rule 115 (expresion_simple -> lista .)
    MAS             reduce using rule 115 (expresion_simple -> lista .)
    MENOS           reduce using rule 115 (expresion_simple -> lista .)
    AND             reduce using rule 115 (expresion_simple -> lista .)
    OR              reduce using rule 115 (expresion_simple -> lista .)
    MAYOR           reduce using rule 115 (expresion_simple -> lista .)
    MENOR           reduce using rule 115 (expresion_simple -> lista .)
    MAYORIGUAL      reduce using rule 115 (expresion_simple -> lista .)
    MENORIGUAL      reduce using rule 115 (expresion_simple -> lista .)
    IGUAL           reduce using rule 115 (expresion_simple -> lista .)
    NOIGUAL         reduce using rule 115 (expresion_simple -> lista .)
    $end            reduce using rule 115 (expresion_simple -> lista .)
    WRITE           reduce using rule 115 (expresion_simple -> lista .)
    IF              reduce using rule 115 (expresion_simple -> lista .)
    READ            reduce using rule 115 (expresion_simple -> lista .)
    ID              reduce using rule 115 (expresion_simple -> lista .)
    SUMMON          reduce using rule 115 (expresion_simple -> lista .)
    FUNC            reduce using rule 115 (expresion_simple -> lista .)
    RETURN          reduce using rule 115 (expresion_simple -> lista .)
    BREAK           reduce using rule 115 (expresion_simple -> lista .)
    VAR             reduce using rule 115 (expresion_simple -> lista .)
    WHILA           reduce using rule 115 (expresion_simple -> lista .)
    FOR             reduce using rule 115 (expresion_simple -> lista .)
    CADENA          reduce using rule 115 (expresion_simple -> lista .)
    ENTERO          reduce using rule 115 (expresion_simple -> lista .)
    CORCHIZQ        reduce using rule 115 (expresion_simple -> lista .)
    PARIZQ          reduce using rule 115 (expresion_simple -> lista .)
    DECIMAL         reduce using rule 115 (expresion_simple -> lista .)
    END             reduce using rule 115 (expresion_simple -> lista .)
    THEN            reduce using rule 115 (expresion_simple -> lista .)
    PARDER          reduce using rule 115 (expresion_simple -> lista .)
    COMA            reduce using rule 115 (expresion_simple -> lista .)
    CORCHDER        reduce using rule 115 (expresion_simple -> lista .)
    DOSPUNTOS       reduce using rule 115 (expresion_simple -> lista .)



state 97

    (109) expresion_simple -> MENOS expresion_simple .

    POTENCIA        reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    POR             reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    ENTRE           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    MODULO          reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    MAS             reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    MENOS           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    AND             reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    OR              reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    MAYOR           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    MENOR           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    MAYORIGUAL      reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    MENORIGUAL      reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    IGUAL           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    NOIGUAL         reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    COMA            reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    PARDER          reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    $end            reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    WRITE           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    IF              reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    READ            reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    ID              reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    SUMMON          reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    FUNC            reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    RETURN          reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    BREAK           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    VAR             reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    WHILA           reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    FOR             reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    CADENA          reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    ENTERO          reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    CORCHIZQ        reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    PARIZQ          reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    DECIMAL         reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    END             reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    THEN            reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    CORCHDER        reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)
    DOSPUNTOS       reduce using rule 109 (expresion_simple -> MENOS expresion_simple .)



state 98

    (76) expresion_pow -> expresion_simple POTENCIA . expresion_simple
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

    ID              shift and go to state 95
    ENTERO          shift and go to state 93
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    CADENA          shift and go to state 92
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_lst                  shift and go to state 50
    expresion_lista                shift and go to state 45
    enunciado_invocar              shift and go to state 94
    enunciado_asignacion           shift and go to state 52
    expresion_simple               shift and go to state 136
    lista                          shift and go to state 96

state 99

    (103) lista -> CORCHIZQ CORCHDER .

    PUNTOCOMA       reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    POTENCIA        reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    POR             reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    ENTRE           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    MODULO          reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    MAS             reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    MENOS           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    PARDER          reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    AND             reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    OR              reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    MAYOR           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    MENOR           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    MAYORIGUAL      reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    MENORIGUAL      reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    IGUAL           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    NOIGUAL         reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    COMA            reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    CORCHDER        reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    $end            reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    WRITE           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    IF              reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    READ            reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    ID              reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    SUMMON          reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    FUNC            reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    RETURN          reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    BREAK           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    VAR             reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    WHILA           reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    FOR             reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    CADENA          reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    ENTERO          reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    CORCHIZQ        reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    PARIZQ          reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    DECIMAL         reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    END             reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    THEN            reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)
    DOSPUNTOS       reduce using rule 103 (lista -> CORCHIZQ CORCHDER .)



state 100

    (104) lista -> CORCHIZQ expresion . mas_elementos CORCHDER
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (105) mas_elementos -> . COMA expresion mas_elementos
    (106) mas_elementos -> . vacio
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL
    (2) vacio -> .

    COMA            shift and go to state 139
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86
    CORCHDER        reduce using rule 2 (vacio -> .)


    operador_comparacion           shift and go to state 87
    vacio                          shift and go to state 138
    mas_elementos                  shift and go to state 137

state 101

    (17) variables -> VAR enunciado_asignacion mas_variables .

    END             reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    WRITE           reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    IF              reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    READ            reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    ID              reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    SUMMON          reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    FUNC            reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    RETURN          reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    BREAK           reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    VAR             reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    WHILA           reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    FOR             reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    CADENA          reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    ENTERO          reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    CORCHIZQ        reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    MENOS           reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    PARIZQ          reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    DECIMAL         reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)
    $end            reduce using rule 17 (variables -> VAR enunciado_asignacion mas_variables .)



state 102

    (21) mas_variables -> vacio .

    WRITE           reduce using rule 21 (mas_variables -> vacio .)
    IF              reduce using rule 21 (mas_variables -> vacio .)
    READ            reduce using rule 21 (mas_variables -> vacio .)
    ID              reduce using rule 21 (mas_variables -> vacio .)
    SUMMON          reduce using rule 21 (mas_variables -> vacio .)
    FUNC            reduce using rule 21 (mas_variables -> vacio .)
    RETURN          reduce using rule 21 (mas_variables -> vacio .)
    BREAK           reduce using rule 21 (mas_variables -> vacio .)
    VAR             reduce using rule 21 (mas_variables -> vacio .)
    WHILA           reduce using rule 21 (mas_variables -> vacio .)
    FOR             reduce using rule 21 (mas_variables -> vacio .)
    CADENA          reduce using rule 21 (mas_variables -> vacio .)
    ENTERO          reduce using rule 21 (mas_variables -> vacio .)
    CORCHIZQ        reduce using rule 21 (mas_variables -> vacio .)
    MENOS           reduce using rule 21 (mas_variables -> vacio .)
    PARIZQ          reduce using rule 21 (mas_variables -> vacio .)
    DECIMAL         reduce using rule 21 (mas_variables -> vacio .)
    $end            reduce using rule 21 (mas_variables -> vacio .)
    END             reduce using rule 21 (mas_variables -> vacio .)



state 103

    (19) mas_variables -> COMA . ID mas_variables
    (20) mas_variables -> COMA . enunciado_asignacion mas_variables
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER

    ID              shift and go to state 141


    enunciado_asignacion           shift and go to state 140
    expresion_lst                  shift and go to state 47

state 104

    (16) variables -> VAR ID mas_variables .

    END             reduce using rule 16 (variables -> VAR ID mas_variables .)
    WRITE           reduce using rule 16 (variables -> VAR ID mas_variables .)
    IF              reduce using rule 16 (variables -> VAR ID mas_variables .)
    READ            reduce using rule 16 (variables -> VAR ID mas_variables .)
    ID              reduce using rule 16 (variables -> VAR ID mas_variables .)
    SUMMON          reduce using rule 16 (variables -> VAR ID mas_variables .)
    FUNC            reduce using rule 16 (variables -> VAR ID mas_variables .)
    RETURN          reduce using rule 16 (variables -> VAR ID mas_variables .)
    BREAK           reduce using rule 16 (variables -> VAR ID mas_variables .)
    VAR             reduce using rule 16 (variables -> VAR ID mas_variables .)
    WHILA           reduce using rule 16 (variables -> VAR ID mas_variables .)
    FOR             reduce using rule 16 (variables -> VAR ID mas_variables .)
    CADENA          reduce using rule 16 (variables -> VAR ID mas_variables .)
    ENTERO          reduce using rule 16 (variables -> VAR ID mas_variables .)
    CORCHIZQ        reduce using rule 16 (variables -> VAR ID mas_variables .)
    MENOS           reduce using rule 16 (variables -> VAR ID mas_variables .)
    PARIZQ          reduce using rule 16 (variables -> VAR ID mas_variables .)
    DECIMAL         reduce using rule 16 (variables -> VAR ID mas_variables .)
    $end            reduce using rule 16 (variables -> VAR ID mas_variables .)



state 105

    (58) expresion_lst -> ID CORCHIZQ . pos CORCHDER
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

    ENTERO          shift and go to state 143
    MENOS           shift and go to state 146
    ID              shift and go to state 145
    PARIZQ          shift and go to state 142
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 121
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 144
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 64

state 106

    (54) expresion_lista -> ID CORCHIZQ . DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID CORCHIZQ . limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID CORCHIZQ . DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID CORCHIZQ . limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID CORCHIZQ . pos CORCHDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

  ! shift/reduce conflict for DOSPUNTOS resolved as shift.
    DOSPUNTOS       shift and go to state 123
    ENTERO          shift and go to state 148
    MENOS           shift and go to state 151
    ID              shift and go to state 150
    PARIZQ          shift and go to state 147
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46

  ! DOSPUNTOS       [ reduce using rule 2 (vacio -> .) ]

    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 121
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 149
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 128
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 64

state 107

    (29) enunciado_whila -> WHILA expresion_condicion THEN . enunciados_ciclos END
    (25) enunciados_ciclos -> . enunciados
    (26) enunciados_ciclos -> . BREAK
    (3) enunciados -> . enunciado enunciados
    (4) enunciados -> . vacio
    (5) enunciado -> . enunciado_print
    (6) enunciado -> . enunciado_loop
    (7) enunciado -> . enunciado_if
    (8) enunciado -> . enunciado_read
    (9) enunciado -> . enunciado_asignacion
    (10) enunciado -> . enunciado_invocar
    (11) enunciado -> . enunciado_declaracion
    (12) enunciado -> . enunciado_return
    (13) enunciado -> . enunciados_ciclos
    (14) enunciado -> . variables
    (15) enunciado -> . expresion_comparacion
    (2) vacio -> .
    (22) enunciado_print -> . WRITE expresion
    (23) enunciado_loop -> . enunciado_whila
    (24) enunciado_loop -> . enunciado_for
    (36) enunciado_if -> . IF expresion_condicion THEN enunciados END enunciado_else
    (39) enunciado_read -> . READ expresion
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (43) enunciado_declaracion -> . FUNC ID PARIZQ parametrosf PARDER enunciados END
    (50) enunciado_return -> . RETURN expresion
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (29) enunciado_whila -> . WHILA expresion_condicion THEN enunciados_ciclos END
    (35) enunciado_for -> . FOR ID IN expfor enunciados_ciclos END
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for BREAK resolved as shift.
  ! shift/reduce conflict for WRITE resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for READ resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for SUMMON resolved as shift.
  ! shift/reduce conflict for FUNC resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for VAR resolved as shift.
  ! shift/reduce conflict for WHILA resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for CADENA resolved as shift.
  ! shift/reduce conflict for ENTERO resolved as shift.
  ! shift/reduce conflict for CORCHIZQ resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
  ! shift/reduce conflict for PARIZQ resolved as shift.
  ! shift/reduce conflict for DECIMAL resolved as shift.
    BREAK           shift and go to state 40
    END             reduce using rule 2 (vacio -> .)
    WRITE           shift and go to state 25
    IF              shift and go to state 32
    READ            shift and go to state 6
    ID              shift and go to state 31
    SUMMON          shift and go to state 15
    FUNC            shift and go to state 27
    RETURN          shift and go to state 5
    VAR             shift and go to state 4
    WHILA           shift and go to state 10
    FOR             shift and go to state 23
    CADENA          shift and go to state 13
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24

  ! WRITE           [ reduce using rule 2 (vacio -> .) ]
  ! IF              [ reduce using rule 2 (vacio -> .) ]
  ! READ            [ reduce using rule 2 (vacio -> .) ]
  ! ID              [ reduce using rule 2 (vacio -> .) ]
  ! SUMMON          [ reduce using rule 2 (vacio -> .) ]
  ! FUNC            [ reduce using rule 2 (vacio -> .) ]
  ! RETURN          [ reduce using rule 2 (vacio -> .) ]
  ! BREAK           [ reduce using rule 2 (vacio -> .) ]
  ! VAR             [ reduce using rule 2 (vacio -> .) ]
  ! WHILA           [ reduce using rule 2 (vacio -> .) ]
  ! FOR             [ reduce using rule 2 (vacio -> .) ]
  ! CADENA          [ reduce using rule 2 (vacio -> .) ]
  ! ENTERO          [ reduce using rule 2 (vacio -> .) ]
  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]
  ! MENOS           [ reduce using rule 2 (vacio -> .) ]
  ! PARIZQ          [ reduce using rule 2 (vacio -> .) ]
  ! DECIMAL         [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 7
    enunciado_declaracion          shift and go to state 8
    enunciado_read                 shift and go to state 9
    enunciado_return               shift and go to state 12
    enunciado_print                shift and go to state 19
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    enunciado                      shift and go to state 18
    expresion_lst                  shift and go to state 21
    enunciados                     shift and go to state 152
    expresion_suma                 shift and go to state 34
    enunciado_whila                shift and go to state 26
    enunciado_invocar              shift and go to state 28
    enunciado_asignacion           shift and go to state 29
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    enunciado_for                  shift and go to state 36
    enunciados_ciclos              shift and go to state 153
    enunciado_loop                 shift and go to state 38
    vacio                          shift and go to state 39
    enunciado_if                   shift and go to state 43
    expresion_comparacion          shift and go to state 44

state 108

    (110) expresion_simple -> PARIZQ expresion PARDER .

    POTENCIA        reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    POR             reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    ENTRE           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    AND             reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    OR              reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    IGUAL           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    NOIGUAL         reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    $end            reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    WRITE           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    IF              reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    READ            reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    ID              reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    SUMMON          reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    FUNC            reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    RETURN          reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    BREAK           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    VAR             reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    WHILA           reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    FOR             reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    CADENA          reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    CORCHIZQ        reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    END             reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    THEN            reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    CORCHDER        reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)
    DOSPUNTOS       reduce using rule 110 (expresion_simple -> PARIZQ expresion PARDER .)



state 109

    (95) expresion_concatenacion -> concatenables PUNTOCOMA concatenables . mas_cadenas
    (101) mas_cadenas -> . PUNTOCOMA concatenables mas_cadenas
    (102) mas_cadenas -> . vacio
    (2) vacio -> .

    PUNTOCOMA       shift and go to state 156
    AND             reduce using rule 2 (vacio -> .)
    OR              reduce using rule 2 (vacio -> .)
    MAYOR           reduce using rule 2 (vacio -> .)
    MENOR           reduce using rule 2 (vacio -> .)
    MAYORIGUAL      reduce using rule 2 (vacio -> .)
    MENORIGUAL      reduce using rule 2 (vacio -> .)
    IGUAL           reduce using rule 2 (vacio -> .)
    NOIGUAL         reduce using rule 2 (vacio -> .)
    $end            reduce using rule 2 (vacio -> .)
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    CORCHIZQ        reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)
    PARDER          reduce using rule 2 (vacio -> .)
    COMA            reduce using rule 2 (vacio -> .)
    CORCHDER        reduce using rule 2 (vacio -> .)
    POTENCIA        reduce using rule 2 (vacio -> .)
    POR             reduce using rule 2 (vacio -> .)
    ENTRE           reduce using rule 2 (vacio -> .)
    MODULO          reduce using rule 2 (vacio -> .)
    MAS             reduce using rule 2 (vacio -> .)
    THEN            reduce using rule 2 (vacio -> .)
    DOSPUNTOS       reduce using rule 2 (vacio -> .)


    mas_cadenas                    shift and go to state 155
    vacio                          shift and go to state 154

state 110

    (96) concatenables -> CADENA .

    PUNTOCOMA       reduce using rule 96 (concatenables -> CADENA .)
    AND             reduce using rule 96 (concatenables -> CADENA .)
    OR              reduce using rule 96 (concatenables -> CADENA .)
    MAYOR           reduce using rule 96 (concatenables -> CADENA .)
    MENOR           reduce using rule 96 (concatenables -> CADENA .)
    MAYORIGUAL      reduce using rule 96 (concatenables -> CADENA .)
    MENORIGUAL      reduce using rule 96 (concatenables -> CADENA .)
    IGUAL           reduce using rule 96 (concatenables -> CADENA .)
    NOIGUAL         reduce using rule 96 (concatenables -> CADENA .)
    $end            reduce using rule 96 (concatenables -> CADENA .)
    WRITE           reduce using rule 96 (concatenables -> CADENA .)
    IF              reduce using rule 96 (concatenables -> CADENA .)
    READ            reduce using rule 96 (concatenables -> CADENA .)
    ID              reduce using rule 96 (concatenables -> CADENA .)
    SUMMON          reduce using rule 96 (concatenables -> CADENA .)
    FUNC            reduce using rule 96 (concatenables -> CADENA .)
    RETURN          reduce using rule 96 (concatenables -> CADENA .)
    BREAK           reduce using rule 96 (concatenables -> CADENA .)
    VAR             reduce using rule 96 (concatenables -> CADENA .)
    WHILA           reduce using rule 96 (concatenables -> CADENA .)
    FOR             reduce using rule 96 (concatenables -> CADENA .)
    CADENA          reduce using rule 96 (concatenables -> CADENA .)
    ENTERO          reduce using rule 96 (concatenables -> CADENA .)
    CORCHIZQ        reduce using rule 96 (concatenables -> CADENA .)
    MENOS           reduce using rule 96 (concatenables -> CADENA .)
    PARIZQ          reduce using rule 96 (concatenables -> CADENA .)
    DECIMAL         reduce using rule 96 (concatenables -> CADENA .)
    END             reduce using rule 96 (concatenables -> CADENA .)
    PARDER          reduce using rule 96 (concatenables -> CADENA .)
    COMA            reduce using rule 96 (concatenables -> CADENA .)
    CORCHDER        reduce using rule 96 (concatenables -> CADENA .)
    POTENCIA        reduce using rule 96 (concatenables -> CADENA .)
    POR             reduce using rule 96 (concatenables -> CADENA .)
    ENTRE           reduce using rule 96 (concatenables -> CADENA .)
    MODULO          reduce using rule 96 (concatenables -> CADENA .)
    MAS             reduce using rule 96 (concatenables -> CADENA .)
    THEN            reduce using rule 96 (concatenables -> CADENA .)
    DOSPUNTOS       reduce using rule 96 (concatenables -> CADENA .)



state 111

    (100) concatenables -> enunciado_invocar .

    PUNTOCOMA       reduce using rule 100 (concatenables -> enunciado_invocar .)
    AND             reduce using rule 100 (concatenables -> enunciado_invocar .)
    OR              reduce using rule 100 (concatenables -> enunciado_invocar .)
    MAYOR           reduce using rule 100 (concatenables -> enunciado_invocar .)
    MENOR           reduce using rule 100 (concatenables -> enunciado_invocar .)
    MAYORIGUAL      reduce using rule 100 (concatenables -> enunciado_invocar .)
    MENORIGUAL      reduce using rule 100 (concatenables -> enunciado_invocar .)
    IGUAL           reduce using rule 100 (concatenables -> enunciado_invocar .)
    NOIGUAL         reduce using rule 100 (concatenables -> enunciado_invocar .)
    $end            reduce using rule 100 (concatenables -> enunciado_invocar .)
    WRITE           reduce using rule 100 (concatenables -> enunciado_invocar .)
    IF              reduce using rule 100 (concatenables -> enunciado_invocar .)
    READ            reduce using rule 100 (concatenables -> enunciado_invocar .)
    ID              reduce using rule 100 (concatenables -> enunciado_invocar .)
    SUMMON          reduce using rule 100 (concatenables -> enunciado_invocar .)
    FUNC            reduce using rule 100 (concatenables -> enunciado_invocar .)
    RETURN          reduce using rule 100 (concatenables -> enunciado_invocar .)
    BREAK           reduce using rule 100 (concatenables -> enunciado_invocar .)
    VAR             reduce using rule 100 (concatenables -> enunciado_invocar .)
    WHILA           reduce using rule 100 (concatenables -> enunciado_invocar .)
    FOR             reduce using rule 100 (concatenables -> enunciado_invocar .)
    CADENA          reduce using rule 100 (concatenables -> enunciado_invocar .)
    ENTERO          reduce using rule 100 (concatenables -> enunciado_invocar .)
    CORCHIZQ        reduce using rule 100 (concatenables -> enunciado_invocar .)
    MENOS           reduce using rule 100 (concatenables -> enunciado_invocar .)
    PARIZQ          reduce using rule 100 (concatenables -> enunciado_invocar .)
    DECIMAL         reduce using rule 100 (concatenables -> enunciado_invocar .)
    END             reduce using rule 100 (concatenables -> enunciado_invocar .)
    PARDER          reduce using rule 100 (concatenables -> enunciado_invocar .)
    COMA            reduce using rule 100 (concatenables -> enunciado_invocar .)
    CORCHDER        reduce using rule 100 (concatenables -> enunciado_invocar .)
    POTENCIA        reduce using rule 100 (concatenables -> enunciado_invocar .)
    POR             reduce using rule 100 (concatenables -> enunciado_invocar .)
    ENTRE           reduce using rule 100 (concatenables -> enunciado_invocar .)
    MODULO          reduce using rule 100 (concatenables -> enunciado_invocar .)
    MAS             reduce using rule 100 (concatenables -> enunciado_invocar .)
    THEN            reduce using rule 100 (concatenables -> enunciado_invocar .)
    DOSPUNTOS       reduce using rule 100 (concatenables -> enunciado_invocar .)



state 112

    (99) concatenables -> lista .

    PUNTOCOMA       reduce using rule 99 (concatenables -> lista .)
    AND             reduce using rule 99 (concatenables -> lista .)
    OR              reduce using rule 99 (concatenables -> lista .)
    MAYOR           reduce using rule 99 (concatenables -> lista .)
    MENOR           reduce using rule 99 (concatenables -> lista .)
    MAYORIGUAL      reduce using rule 99 (concatenables -> lista .)
    MENORIGUAL      reduce using rule 99 (concatenables -> lista .)
    IGUAL           reduce using rule 99 (concatenables -> lista .)
    NOIGUAL         reduce using rule 99 (concatenables -> lista .)
    $end            reduce using rule 99 (concatenables -> lista .)
    WRITE           reduce using rule 99 (concatenables -> lista .)
    IF              reduce using rule 99 (concatenables -> lista .)
    READ            reduce using rule 99 (concatenables -> lista .)
    ID              reduce using rule 99 (concatenables -> lista .)
    SUMMON          reduce using rule 99 (concatenables -> lista .)
    FUNC            reduce using rule 99 (concatenables -> lista .)
    RETURN          reduce using rule 99 (concatenables -> lista .)
    BREAK           reduce using rule 99 (concatenables -> lista .)
    VAR             reduce using rule 99 (concatenables -> lista .)
    WHILA           reduce using rule 99 (concatenables -> lista .)
    FOR             reduce using rule 99 (concatenables -> lista .)
    CADENA          reduce using rule 99 (concatenables -> lista .)
    ENTERO          reduce using rule 99 (concatenables -> lista .)
    CORCHIZQ        reduce using rule 99 (concatenables -> lista .)
    MENOS           reduce using rule 99 (concatenables -> lista .)
    PARIZQ          reduce using rule 99 (concatenables -> lista .)
    DECIMAL         reduce using rule 99 (concatenables -> lista .)
    END             reduce using rule 99 (concatenables -> lista .)
    PARDER          reduce using rule 99 (concatenables -> lista .)
    COMA            reduce using rule 99 (concatenables -> lista .)
    CORCHDER        reduce using rule 99 (concatenables -> lista .)
    POTENCIA        reduce using rule 99 (concatenables -> lista .)
    POR             reduce using rule 99 (concatenables -> lista .)
    ENTRE           reduce using rule 99 (concatenables -> lista .)
    MODULO          reduce using rule 99 (concatenables -> lista .)
    MAS             reduce using rule 99 (concatenables -> lista .)
    THEN            reduce using rule 99 (concatenables -> lista .)
    DOSPUNTOS       reduce using rule 99 (concatenables -> lista .)



state 113

    (97) concatenables -> ID .

    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    AND             reduce using rule 97 (concatenables -> ID .)
    OR              reduce using rule 97 (concatenables -> ID .)
    MAYOR           reduce using rule 97 (concatenables -> ID .)
    MENOR           reduce using rule 97 (concatenables -> ID .)
    MAYORIGUAL      reduce using rule 97 (concatenables -> ID .)
    MENORIGUAL      reduce using rule 97 (concatenables -> ID .)
    IGUAL           reduce using rule 97 (concatenables -> ID .)
    NOIGUAL         reduce using rule 97 (concatenables -> ID .)
    $end            reduce using rule 97 (concatenables -> ID .)
    WRITE           reduce using rule 97 (concatenables -> ID .)
    IF              reduce using rule 97 (concatenables -> ID .)
    READ            reduce using rule 97 (concatenables -> ID .)
    ID              reduce using rule 97 (concatenables -> ID .)
    SUMMON          reduce using rule 97 (concatenables -> ID .)
    FUNC            reduce using rule 97 (concatenables -> ID .)
    RETURN          reduce using rule 97 (concatenables -> ID .)
    BREAK           reduce using rule 97 (concatenables -> ID .)
    VAR             reduce using rule 97 (concatenables -> ID .)
    WHILA           reduce using rule 97 (concatenables -> ID .)
    FOR             reduce using rule 97 (concatenables -> ID .)
    CADENA          reduce using rule 97 (concatenables -> ID .)
    ENTERO          reduce using rule 97 (concatenables -> ID .)
    CORCHIZQ        reduce using rule 97 (concatenables -> ID .)
    MENOS           reduce using rule 97 (concatenables -> ID .)
    PARIZQ          reduce using rule 97 (concatenables -> ID .)
    DECIMAL         reduce using rule 97 (concatenables -> ID .)
    END             reduce using rule 97 (concatenables -> ID .)
    PARDER          reduce using rule 97 (concatenables -> ID .)
    COMA            reduce using rule 97 (concatenables -> ID .)
    CORCHDER        reduce using rule 97 (concatenables -> ID .)
    POTENCIA        reduce using rule 97 (concatenables -> ID .)
    POR             reduce using rule 97 (concatenables -> ID .)
    ENTRE           reduce using rule 97 (concatenables -> ID .)
    MODULO          reduce using rule 97 (concatenables -> ID .)
    MAS             reduce using rule 97 (concatenables -> ID .)
    THEN            reduce using rule 97 (concatenables -> ID .)
    DOSPUNTOS       reduce using rule 97 (concatenables -> ID .)



state 114

    (98) concatenables -> ENTERO .

    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)
    AND             reduce using rule 98 (concatenables -> ENTERO .)
    OR              reduce using rule 98 (concatenables -> ENTERO .)
    MAYOR           reduce using rule 98 (concatenables -> ENTERO .)
    MENOR           reduce using rule 98 (concatenables -> ENTERO .)
    MAYORIGUAL      reduce using rule 98 (concatenables -> ENTERO .)
    MENORIGUAL      reduce using rule 98 (concatenables -> ENTERO .)
    IGUAL           reduce using rule 98 (concatenables -> ENTERO .)
    NOIGUAL         reduce using rule 98 (concatenables -> ENTERO .)
    $end            reduce using rule 98 (concatenables -> ENTERO .)
    WRITE           reduce using rule 98 (concatenables -> ENTERO .)
    IF              reduce using rule 98 (concatenables -> ENTERO .)
    READ            reduce using rule 98 (concatenables -> ENTERO .)
    ID              reduce using rule 98 (concatenables -> ENTERO .)
    SUMMON          reduce using rule 98 (concatenables -> ENTERO .)
    FUNC            reduce using rule 98 (concatenables -> ENTERO .)
    RETURN          reduce using rule 98 (concatenables -> ENTERO .)
    BREAK           reduce using rule 98 (concatenables -> ENTERO .)
    VAR             reduce using rule 98 (concatenables -> ENTERO .)
    WHILA           reduce using rule 98 (concatenables -> ENTERO .)
    FOR             reduce using rule 98 (concatenables -> ENTERO .)
    CADENA          reduce using rule 98 (concatenables -> ENTERO .)
    ENTERO          reduce using rule 98 (concatenables -> ENTERO .)
    CORCHIZQ        reduce using rule 98 (concatenables -> ENTERO .)
    MENOS           reduce using rule 98 (concatenables -> ENTERO .)
    PARIZQ          reduce using rule 98 (concatenables -> ENTERO .)
    DECIMAL         reduce using rule 98 (concatenables -> ENTERO .)
    END             reduce using rule 98 (concatenables -> ENTERO .)
    PARDER          reduce using rule 98 (concatenables -> ENTERO .)
    COMA            reduce using rule 98 (concatenables -> ENTERO .)
    CORCHDER        reduce using rule 98 (concatenables -> ENTERO .)
    POTENCIA        reduce using rule 98 (concatenables -> ENTERO .)
    POR             reduce using rule 98 (concatenables -> ENTERO .)
    ENTRE           reduce using rule 98 (concatenables -> ENTERO .)
    MODULO          reduce using rule 98 (concatenables -> ENTERO .)
    MAS             reduce using rule 98 (concatenables -> ENTERO .)
    THEN            reduce using rule 98 (concatenables -> ENTERO .)
    DOSPUNTOS       reduce using rule 98 (concatenables -> ENTERO .)



state 115

    (42) enunciado_invocar -> SUMMON ID PARIZQ . parametros PARDER
    (70) parametros -> . expresion mas_elementos
    (71) parametros -> . vacio
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    PARDER          reduce using rule 2 (vacio -> .)
    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 157
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 158
    parametros                     shift and go to state 159
    expresion_comparacion          shift and go to state 55

state 116

    (74) expresion_mul -> expresion_pow operador_mul expresion_mul .

    MAS             reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    MENOS           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    COMA            reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    AND             reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    OR              reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    MAYOR           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    MENOR           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    MAYORIGUAL      reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    MENORIGUAL      reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    IGUAL           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    NOIGUAL         reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    CORCHDER        reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    PARDER          reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    $end            reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    WRITE           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    IF              reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    READ            reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    ID              reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    SUMMON          reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    FUNC            reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    RETURN          reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    BREAK           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    VAR             reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    WHILA           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    FOR             reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    CADENA          reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    ENTERO          reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    CORCHIZQ        reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    PARIZQ          reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    DECIMAL         reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    END             reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    POTENCIA        reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    POR             reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    ENTRE           reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    MODULO          reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    THEN            reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)
    DOSPUNTOS       reduce using rule 74 (expresion_mul -> expresion_pow operador_mul expresion_mul .)



state 117

    (72) expresion_suma -> expresion_mul operador_suma expresion_suma .

    POTENCIA        reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    POR             reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    ENTRE           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    MODULO          reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    MAS             reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    MENOS           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    AND             reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    OR              reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    MAYOR           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    MENOR           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    MAYORIGUAL      reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    MENORIGUAL      reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    IGUAL           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    NOIGUAL         reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    $end            reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    WRITE           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    IF              reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    READ            reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    ID              reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    SUMMON          reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    FUNC            reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    RETURN          reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    BREAK           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    VAR             reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    WHILA           reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    FOR             reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    CADENA          reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    ENTERO          reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    CORCHIZQ        reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    PARIZQ          reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    DECIMAL         reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    END             reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    THEN            reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    PARDER          reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    COMA            reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    CORCHDER        reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)
    DOSPUNTOS       reduce using rule 72 (expresion_suma -> expresion_mul operador_suma expresion_suma .)



state 118

    (41) enunciado_asignacion -> expresion_lst IS expresion .
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL

  ! shift/reduce conflict for AND resolved as shift.
  ! shift/reduce conflict for OR resolved as shift.
  ! shift/reduce conflict for MAYOR resolved as shift.
  ! shift/reduce conflict for MENOR resolved as shift.
  ! shift/reduce conflict for MAYORIGUAL resolved as shift.
  ! shift/reduce conflict for MENORIGUAL resolved as shift.
  ! shift/reduce conflict for IGUAL resolved as shift.
  ! shift/reduce conflict for NOIGUAL resolved as shift.
    END             reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    WRITE           reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    IF              reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    READ            reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    ID              reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    SUMMON          reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    FUNC            reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    RETURN          reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    BREAK           reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    VAR             reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    WHILA           reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    FOR             reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    CADENA          reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    ENTERO          reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    CORCHIZQ        reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    MENOS           reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    PARIZQ          reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    DECIMAL         reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    POTENCIA        reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    POR             reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    ENTRE           reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    MODULO          reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    MAS             reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    $end            reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    THEN            reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    PARDER          reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    COMA            reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    CORCHDER        reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    DOSPUNTOS       reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .)
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86

  ! AND             [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]
  ! OR              [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]
  ! MAYOR           [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]
  ! MENOR           [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]
  ! IGUAL           [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]
  ! NOIGUAL         [ reduce using rule 41 (enunciado_asignacion -> expresion_lst IS expresion .) ]

    operador_comparacion           shift and go to state 87

state 119

    (35) enunciado_for -> FOR ID IN . expfor enunciados_ciclos END
    (30) expfor -> . lista
    (31) expfor -> . CADENA
    (32) expfor -> . ID
    (33) expfor -> . expresion_lista
    (34) expfor -> . enunciado_invocar
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER

    CADENA          shift and go to state 161
    ID              shift and go to state 165
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15


    expresion_lista                shift and go to state 160
    enunciado_invocar              shift and go to state 162
    expfor                         shift and go to state 163
    lista                          shift and go to state 164

state 120

    (43) enunciado_declaracion -> FUNC ID PARIZQ . parametrosf PARDER enunciados END
    (44) parametrosf -> . ID mas_elementosf
    (45) parametrosf -> . ID IS expresion mas_elementosf
    (46) parametrosf -> . vacio
    (2) vacio -> .

    ID              shift and go to state 167
    PARDER          reduce using rule 2 (vacio -> .)


    parametrosf                    shift and go to state 166
    vacio                          shift and go to state 168

state 121

    (58) expresion_lst -> ID CORCHIZQ pos . CORCHDER

    CORCHDER        shift and go to state 169



state 122

    (63) pos -> PARIZQ . pos PARDER
    (68) limite -> PARIZQ . limite PARDER
    (110) expresion_simple -> PARIZQ . expresion PARDER
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    ENTERO          shift and go to state 171
    MENOS           shift and go to state 129
    ID              shift and go to state 173
    PARIZQ          shift and go to state 122
    PARDER          reduce using rule 2 (vacio -> .)
    CADENA          shift and go to state 13
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 170
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 125
    expresion_suma                 shift and go to state 172
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 65
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 174
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 175

state 123

    (54) expresion_lista -> ID CORCHIZQ DOSPUNTOS . CORCHDER
    (56) expresion_lista -> ID CORCHIZQ DOSPUNTOS . limite CORCHDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

  ! shift/reduce conflict for CORCHDER resolved as shift.
    CORCHDER        shift and go to state 177
    ENTERO          shift and go to state 178
    MENOS           shift and go to state 182
    ID              shift and go to state 180
    PARIZQ          shift and go to state 176
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46

  ! CORCHDER        [ reduce using rule 2 (vacio -> .) ]

    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 179
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 181
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 64

state 124

    (59) pos -> ENTERO .
    (64) limite -> ENTERO .
    (108) expresion_simple -> ENTERO .
    (98) concatenables -> ENTERO .

  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
  ! reduce/reduce conflict for CORCHDER resolved using rule 59 (pos -> ENTERO .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 64 (limite -> ENTERO .).
  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
    CORCHDER        reduce using rule 59 (pos -> ENTERO .)
    PARDER          reduce using rule 59 (pos -> ENTERO .)
    DOSPUNTOS       reduce using rule 64 (limite -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)

  ! PARDER          [ reduce using rule 64 (limite -> ENTERO .) ]
  ! CORCHDER        [ reduce using rule 108 (expresion_simple -> ENTERO .) ]
  ! DOSPUNTOS       [ reduce using rule 108 (expresion_simple -> ENTERO .) ]
  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 125

    (62) pos -> expresion_condicion .
    (67) limite -> expresion_condicion .

  ! reduce/reduce conflict for PARDER resolved using rule 62 (pos -> expresion_condicion .).
    CORCHDER        reduce using rule 62 (pos -> expresion_condicion .)
    PARDER          reduce using rule 62 (pos -> expresion_condicion .)
    DOSPUNTOS       reduce using rule 67 (limite -> expresion_condicion .)

  ! PARDER          [ reduce using rule 67 (limite -> expresion_condicion .) ]


state 126

    (61) pos -> ID .
    (66) limite -> ID .
    (107) expresion_simple -> ID .
    (97) concatenables -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for CORCHDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 66 (limite -> ID .).
    CORCHDER        reduce using rule 61 (pos -> ID .)
    DOSPUNTOS       reduce using rule 66 (limite -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! DOSPUNTOS       [ reduce using rule 107 (expresion_simple -> ID .) ]


state 127

    (69) limite -> vacio .

    DOSPUNTOS       reduce using rule 69 (limite -> vacio .)
    CORCHDER        reduce using rule 69 (limite -> vacio .)
    PARDER          reduce using rule 69 (limite -> vacio .)



state 128

    (55) expresion_lista -> ID CORCHIZQ limite . DOSPUNTOS CORCHDER
    (57) expresion_lista -> ID CORCHIZQ limite . DOSPUNTOS limite CORCHDER

    DOSPUNTOS       shift and go to state 183



state 129

    (60) pos -> MENOS . pos
    (65) limite -> MENOS . limite
    (109) expresion_simple -> MENOS . expresion_simple
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar

    ENTERO          shift and go to state 124
    MENOS           shift and go to state 129
    ID              shift and go to state 185
    PARIZQ          shift and go to state 122
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    DOSPUNTOS       reduce using rule 2 (vacio -> .)
    PARDER          reduce using rule 2 (vacio -> .)
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 184
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 125
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 186
    expresion_simple               shift and go to state 187
    expresion_comparacion          shift and go to state 64

state 130

    (40) enunciado_asignacion -> ID IS expresion .
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL

  ! shift/reduce conflict for AND resolved as shift.
  ! shift/reduce conflict for OR resolved as shift.
  ! shift/reduce conflict for MAYOR resolved as shift.
  ! shift/reduce conflict for MENOR resolved as shift.
  ! shift/reduce conflict for MAYORIGUAL resolved as shift.
  ! shift/reduce conflict for MENORIGUAL resolved as shift.
  ! shift/reduce conflict for IGUAL resolved as shift.
  ! shift/reduce conflict for NOIGUAL resolved as shift.
    END             reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    WRITE           reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    IF              reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    READ            reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    ID              reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    SUMMON          reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    FUNC            reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    RETURN          reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    BREAK           reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    VAR             reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    WHILA           reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    FOR             reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    CADENA          reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    ENTERO          reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    CORCHIZQ        reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    MENOS           reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    PARIZQ          reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    DECIMAL         reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    POTENCIA        reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    POR             reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    ENTRE           reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    MODULO          reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    MAS             reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    $end            reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    THEN            reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    PARDER          reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    COMA            reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    CORCHDER        reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    DOSPUNTOS       reduce using rule 40 (enunciado_asignacion -> ID IS expresion .)
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86

  ! AND             [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]
  ! OR              [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]
  ! MAYOR           [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]
  ! MENOR           [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]
  ! IGUAL           [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]
  ! NOIGUAL         [ reduce using rule 40 (enunciado_asignacion -> ID IS expresion .) ]

    operador_comparacion           shift and go to state 87

state 131

    (36) enunciado_if -> IF expresion_condicion THEN . enunciados END enunciado_else
    (3) enunciados -> . enunciado enunciados
    (4) enunciados -> . vacio
    (5) enunciado -> . enunciado_print
    (6) enunciado -> . enunciado_loop
    (7) enunciado -> . enunciado_if
    (8) enunciado -> . enunciado_read
    (9) enunciado -> . enunciado_asignacion
    (10) enunciado -> . enunciado_invocar
    (11) enunciado -> . enunciado_declaracion
    (12) enunciado -> . enunciado_return
    (13) enunciado -> . enunciados_ciclos
    (14) enunciado -> . variables
    (15) enunciado -> . expresion_comparacion
    (2) vacio -> .
    (22) enunciado_print -> . WRITE expresion
    (23) enunciado_loop -> . enunciado_whila
    (24) enunciado_loop -> . enunciado_for
    (36) enunciado_if -> . IF expresion_condicion THEN enunciados END enunciado_else
    (39) enunciado_read -> . READ expresion
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (43) enunciado_declaracion -> . FUNC ID PARIZQ parametrosf PARDER enunciados END
    (50) enunciado_return -> . RETURN expresion
    (25) enunciados_ciclos -> . enunciados
    (26) enunciados_ciclos -> . BREAK
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (29) enunciado_whila -> . WHILA expresion_condicion THEN enunciados_ciclos END
    (35) enunciado_for -> . FOR ID IN expfor enunciados_ciclos END
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for WRITE resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for READ resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for SUMMON resolved as shift.
  ! shift/reduce conflict for FUNC resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for BREAK resolved as shift.
  ! shift/reduce conflict for VAR resolved as shift.
  ! shift/reduce conflict for WHILA resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for CADENA resolved as shift.
  ! shift/reduce conflict for ENTERO resolved as shift.
  ! shift/reduce conflict for CORCHIZQ resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
  ! shift/reduce conflict for PARIZQ resolved as shift.
  ! shift/reduce conflict for DECIMAL resolved as shift.
    END             reduce using rule 2 (vacio -> .)
    WRITE           shift and go to state 25
    IF              shift and go to state 32
    READ            shift and go to state 6
    ID              shift and go to state 31
    SUMMON          shift and go to state 15
    FUNC            shift and go to state 27
    RETURN          shift and go to state 5
    BREAK           shift and go to state 40
    VAR             shift and go to state 4
    WHILA           shift and go to state 10
    FOR             shift and go to state 23
    CADENA          shift and go to state 13
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24

  ! WRITE           [ reduce using rule 2 (vacio -> .) ]
  ! IF              [ reduce using rule 2 (vacio -> .) ]
  ! READ            [ reduce using rule 2 (vacio -> .) ]
  ! ID              [ reduce using rule 2 (vacio -> .) ]
  ! SUMMON          [ reduce using rule 2 (vacio -> .) ]
  ! FUNC            [ reduce using rule 2 (vacio -> .) ]
  ! RETURN          [ reduce using rule 2 (vacio -> .) ]
  ! BREAK           [ reduce using rule 2 (vacio -> .) ]
  ! VAR             [ reduce using rule 2 (vacio -> .) ]
  ! WHILA           [ reduce using rule 2 (vacio -> .) ]
  ! FOR             [ reduce using rule 2 (vacio -> .) ]
  ! CADENA          [ reduce using rule 2 (vacio -> .) ]
  ! ENTERO          [ reduce using rule 2 (vacio -> .) ]
  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]
  ! MENOS           [ reduce using rule 2 (vacio -> .) ]
  ! PARIZQ          [ reduce using rule 2 (vacio -> .) ]
  ! DECIMAL         [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 7
    enunciado_declaracion          shift and go to state 8
    enunciado_read                 shift and go to state 9
    enunciado_return               shift and go to state 12
    enunciado_print                shift and go to state 19
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    enunciado                      shift and go to state 18
    expresion_lst                  shift and go to state 21
    enunciados                     shift and go to state 188
    expresion_suma                 shift and go to state 34
    enunciado_whila                shift and go to state 26
    enunciado_invocar              shift and go to state 28
    enunciado_asignacion           shift and go to state 29
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    enunciado_for                  shift and go to state 36
    enunciados_ciclos              shift and go to state 37
    enunciado_loop                 shift and go to state 38
    vacio                          shift and go to state 39
    enunciado_if                   shift and go to state 43
    expresion_comparacion          shift and go to state 44

state 132

    (83) expresion_comparacion -> expresion operador_comparacion expresion2 .

    AND             reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    OR              reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    MAYOR           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    MENOR           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    MAYORIGUAL      reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    MENORIGUAL      reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    IGUAL           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    NOIGUAL         reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    $end            reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    WRITE           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    IF              reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    READ            reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    ID              reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    SUMMON          reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    FUNC            reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    RETURN          reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    BREAK           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    VAR             reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    WHILA           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    FOR             reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    CADENA          reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    ENTERO          reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    CORCHIZQ        reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    MENOS           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    PARIZQ          reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    DECIMAL         reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    END             reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    POTENCIA        reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    POR             reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    ENTRE           reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    MODULO          reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    MAS             reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    THEN            reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    PARDER          reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    COMA            reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    CORCHDER        reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)
    DOSPUNTOS       reduce using rule 83 (expresion_comparacion -> expresion operador_comparacion expresion2 .)



state 133

    (84) expresion2 -> expresion_suma .
    (51) expresion -> expresion_suma .

  ! reduce/reduce conflict for AND resolved using rule 51 (expresion -> expresion_suma .).
  ! reduce/reduce conflict for OR resolved using rule 51 (expresion -> expresion_suma .).
  ! reduce/reduce conflict for MAYOR resolved using rule 51 (expresion -> expresion_suma .).
  ! reduce/reduce conflict for MENOR resolved using rule 51 (expresion -> expresion_suma .).
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 51 (expresion -> expresion_suma .).
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 51 (expresion -> expresion_suma .).
  ! reduce/reduce conflict for IGUAL resolved using rule 51 (expresion -> expresion_suma .).
  ! reduce/reduce conflict for NOIGUAL resolved using rule 51 (expresion -> expresion_suma .).
    POTENCIA        reduce using rule 84 (expresion2 -> expresion_suma .)
    POR             reduce using rule 84 (expresion2 -> expresion_suma .)
    ENTRE           reduce using rule 84 (expresion2 -> expresion_suma .)
    MODULO          reduce using rule 84 (expresion2 -> expresion_suma .)
    MAS             reduce using rule 84 (expresion2 -> expresion_suma .)
    MENOS           reduce using rule 84 (expresion2 -> expresion_suma .)
    $end            reduce using rule 84 (expresion2 -> expresion_suma .)
    WRITE           reduce using rule 84 (expresion2 -> expresion_suma .)
    IF              reduce using rule 84 (expresion2 -> expresion_suma .)
    READ            reduce using rule 84 (expresion2 -> expresion_suma .)
    ID              reduce using rule 84 (expresion2 -> expresion_suma .)
    SUMMON          reduce using rule 84 (expresion2 -> expresion_suma .)
    FUNC            reduce using rule 84 (expresion2 -> expresion_suma .)
    RETURN          reduce using rule 84 (expresion2 -> expresion_suma .)
    BREAK           reduce using rule 84 (expresion2 -> expresion_suma .)
    VAR             reduce using rule 84 (expresion2 -> expresion_suma .)
    WHILA           reduce using rule 84 (expresion2 -> expresion_suma .)
    FOR             reduce using rule 84 (expresion2 -> expresion_suma .)
    CADENA          reduce using rule 84 (expresion2 -> expresion_suma .)
    ENTERO          reduce using rule 84 (expresion2 -> expresion_suma .)
    CORCHIZQ        reduce using rule 84 (expresion2 -> expresion_suma .)
    PARIZQ          reduce using rule 84 (expresion2 -> expresion_suma .)
    DECIMAL         reduce using rule 84 (expresion2 -> expresion_suma .)
    END             reduce using rule 84 (expresion2 -> expresion_suma .)
    THEN            reduce using rule 84 (expresion2 -> expresion_suma .)
    PARDER          reduce using rule 84 (expresion2 -> expresion_suma .)
    COMA            reduce using rule 84 (expresion2 -> expresion_suma .)
    CORCHDER        reduce using rule 84 (expresion2 -> expresion_suma .)
    DOSPUNTOS       reduce using rule 84 (expresion2 -> expresion_suma .)
    AND             reduce using rule 51 (expresion -> expresion_suma .)
    OR              reduce using rule 51 (expresion -> expresion_suma .)
    MAYOR           reduce using rule 51 (expresion -> expresion_suma .)
    MENOR           reduce using rule 51 (expresion -> expresion_suma .)
    MAYORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    MENORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    IGUAL           reduce using rule 51 (expresion -> expresion_suma .)
    NOIGUAL         reduce using rule 51 (expresion -> expresion_suma .)

  ! AND             [ reduce using rule 84 (expresion2 -> expresion_suma .) ]
  ! OR              [ reduce using rule 84 (expresion2 -> expresion_suma .) ]
  ! MAYOR           [ reduce using rule 84 (expresion2 -> expresion_suma .) ]
  ! MENOR           [ reduce using rule 84 (expresion2 -> expresion_suma .) ]
  ! MAYORIGUAL      [ reduce using rule 84 (expresion2 -> expresion_suma .) ]
  ! MENORIGUAL      [ reduce using rule 84 (expresion2 -> expresion_suma .) ]
  ! IGUAL           [ reduce using rule 84 (expresion2 -> expresion_suma .) ]
  ! NOIGUAL         [ reduce using rule 84 (expresion2 -> expresion_suma .) ]


state 134

    (86) expresion2 -> expresion_concatenacion .
    (53) expresion -> expresion_concatenacion .

  ! reduce/reduce conflict for AND resolved using rule 53 (expresion -> expresion_concatenacion .).
  ! reduce/reduce conflict for OR resolved using rule 53 (expresion -> expresion_concatenacion .).
  ! reduce/reduce conflict for MAYOR resolved using rule 53 (expresion -> expresion_concatenacion .).
  ! reduce/reduce conflict for MENOR resolved using rule 53 (expresion -> expresion_concatenacion .).
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 53 (expresion -> expresion_concatenacion .).
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 53 (expresion -> expresion_concatenacion .).
  ! reduce/reduce conflict for IGUAL resolved using rule 53 (expresion -> expresion_concatenacion .).
  ! reduce/reduce conflict for NOIGUAL resolved using rule 53 (expresion -> expresion_concatenacion .).
    POTENCIA        reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    POR             reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    ENTRE           reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    MODULO          reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    MAS             reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    MENOS           reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    $end            reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    WRITE           reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    IF              reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    READ            reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    ID              reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    SUMMON          reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    FUNC            reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    RETURN          reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    BREAK           reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    VAR             reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    WHILA           reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    FOR             reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    CADENA          reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    ENTERO          reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    CORCHIZQ        reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    PARIZQ          reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    DECIMAL         reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    END             reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    THEN            reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    PARDER          reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    COMA            reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    CORCHDER        reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    DOSPUNTOS       reduce using rule 86 (expresion2 -> expresion_concatenacion .)
    AND             reduce using rule 53 (expresion -> expresion_concatenacion .)
    OR              reduce using rule 53 (expresion -> expresion_concatenacion .)
    MAYOR           reduce using rule 53 (expresion -> expresion_concatenacion .)
    MENOR           reduce using rule 53 (expresion -> expresion_concatenacion .)
    MAYORIGUAL      reduce using rule 53 (expresion -> expresion_concatenacion .)
    MENORIGUAL      reduce using rule 53 (expresion -> expresion_concatenacion .)
    IGUAL           reduce using rule 53 (expresion -> expresion_concatenacion .)
    NOIGUAL         reduce using rule 53 (expresion -> expresion_concatenacion .)

  ! AND             [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]
  ! OR              [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]
  ! MAYOR           [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]
  ! MENOR           [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]
  ! MENORIGUAL      [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]
  ! IGUAL           [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]
  ! NOIGUAL         [ reduce using rule 86 (expresion2 -> expresion_concatenacion .) ]


state 135

    (85) expresion2 -> expresion_comparacion .
    (52) expresion -> expresion_comparacion .

  ! reduce/reduce conflict for AND resolved using rule 52 (expresion -> expresion_comparacion .).
  ! reduce/reduce conflict for OR resolved using rule 52 (expresion -> expresion_comparacion .).
  ! reduce/reduce conflict for MAYOR resolved using rule 52 (expresion -> expresion_comparacion .).
  ! reduce/reduce conflict for MENOR resolved using rule 52 (expresion -> expresion_comparacion .).
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 52 (expresion -> expresion_comparacion .).
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 52 (expresion -> expresion_comparacion .).
  ! reduce/reduce conflict for IGUAL resolved using rule 52 (expresion -> expresion_comparacion .).
  ! reduce/reduce conflict for NOIGUAL resolved using rule 52 (expresion -> expresion_comparacion .).
    POTENCIA        reduce using rule 85 (expresion2 -> expresion_comparacion .)
    POR             reduce using rule 85 (expresion2 -> expresion_comparacion .)
    ENTRE           reduce using rule 85 (expresion2 -> expresion_comparacion .)
    MODULO          reduce using rule 85 (expresion2 -> expresion_comparacion .)
    MAS             reduce using rule 85 (expresion2 -> expresion_comparacion .)
    MENOS           reduce using rule 85 (expresion2 -> expresion_comparacion .)
    $end            reduce using rule 85 (expresion2 -> expresion_comparacion .)
    WRITE           reduce using rule 85 (expresion2 -> expresion_comparacion .)
    IF              reduce using rule 85 (expresion2 -> expresion_comparacion .)
    READ            reduce using rule 85 (expresion2 -> expresion_comparacion .)
    ID              reduce using rule 85 (expresion2 -> expresion_comparacion .)
    SUMMON          reduce using rule 85 (expresion2 -> expresion_comparacion .)
    FUNC            reduce using rule 85 (expresion2 -> expresion_comparacion .)
    RETURN          reduce using rule 85 (expresion2 -> expresion_comparacion .)
    BREAK           reduce using rule 85 (expresion2 -> expresion_comparacion .)
    VAR             reduce using rule 85 (expresion2 -> expresion_comparacion .)
    WHILA           reduce using rule 85 (expresion2 -> expresion_comparacion .)
    FOR             reduce using rule 85 (expresion2 -> expresion_comparacion .)
    CADENA          reduce using rule 85 (expresion2 -> expresion_comparacion .)
    ENTERO          reduce using rule 85 (expresion2 -> expresion_comparacion .)
    CORCHIZQ        reduce using rule 85 (expresion2 -> expresion_comparacion .)
    PARIZQ          reduce using rule 85 (expresion2 -> expresion_comparacion .)
    DECIMAL         reduce using rule 85 (expresion2 -> expresion_comparacion .)
    END             reduce using rule 85 (expresion2 -> expresion_comparacion .)
    THEN            reduce using rule 85 (expresion2 -> expresion_comparacion .)
    PARDER          reduce using rule 85 (expresion2 -> expresion_comparacion .)
    COMA            reduce using rule 85 (expresion2 -> expresion_comparacion .)
    CORCHDER        reduce using rule 85 (expresion2 -> expresion_comparacion .)
    DOSPUNTOS       reduce using rule 85 (expresion2 -> expresion_comparacion .)
    AND             reduce using rule 52 (expresion -> expresion_comparacion .)
    OR              reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MENOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    IGUAL           reduce using rule 52 (expresion -> expresion_comparacion .)
    NOIGUAL         reduce using rule 52 (expresion -> expresion_comparacion .)

  ! AND             [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]
  ! OR              [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]
  ! MAYOR           [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]
  ! MENOR           [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]
  ! MAYORIGUAL      [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]
  ! MENORIGUAL      [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]
  ! IGUAL           [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]
  ! NOIGUAL         [ reduce using rule 85 (expresion2 -> expresion_comparacion .) ]


state 136

    (76) expresion_pow -> expresion_simple POTENCIA expresion_simple .

    POR             reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    ENTRE           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    MODULO          reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    MAS             reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    MENOS           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    AND             reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    OR              reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    MAYOR           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    MENOR           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    MAYORIGUAL      reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    MENORIGUAL      reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    IGUAL           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    NOIGUAL         reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    DOSPUNTOS       reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    $end            reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    WRITE           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    IF              reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    READ            reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    ID              reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    SUMMON          reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    FUNC            reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    RETURN          reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    BREAK           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    VAR             reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    WHILA           reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    FOR             reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    CADENA          reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    ENTERO          reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    CORCHIZQ        reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    PARIZQ          reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    DECIMAL         reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    END             reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    PARDER          reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    CORCHDER        reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    POTENCIA        reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    THEN            reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)
    COMA            reduce using rule 76 (expresion_pow -> expresion_simple POTENCIA expresion_simple .)



state 137

    (104) lista -> CORCHIZQ expresion mas_elementos . CORCHDER

    CORCHDER        shift and go to state 189



state 138

    (106) mas_elementos -> vacio .

    PARDER          reduce using rule 106 (mas_elementos -> vacio .)
    CORCHDER        reduce using rule 106 (mas_elementos -> vacio .)



state 139

    (105) mas_elementos -> COMA . expresion mas_elementos
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 190
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 140

    (20) mas_variables -> COMA enunciado_asignacion . mas_variables
    (19) mas_variables -> . COMA ID mas_variables
    (20) mas_variables -> . COMA enunciado_asignacion mas_variables
    (21) mas_variables -> . vacio
    (2) vacio -> .

    COMA            shift and go to state 103
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    CORCHIZQ        reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    $end            reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)


    mas_variables                  shift and go to state 191
    vacio                          shift and go to state 102

state 141

    (19) mas_variables -> COMA ID . mas_variables
    (40) enunciado_asignacion -> ID . IS expresion
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (19) mas_variables -> . COMA ID mas_variables
    (20) mas_variables -> . COMA enunciado_asignacion mas_variables
    (21) mas_variables -> . vacio
    (2) vacio -> .

  ! shift/reduce conflict for CORCHIZQ resolved as shift.
    IS              shift and go to state 81
    CORCHIZQ        shift and go to state 105
    COMA            shift and go to state 103
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    $end            reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)

  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]

    mas_variables                  shift and go to state 192
    vacio                          shift and go to state 102

state 142

    (63) pos -> PARIZQ . pos PARDER
    (110) expresion_simple -> PARIZQ . expresion PARDER
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    ENTERO          shift and go to state 193
    MENOS           shift and go to state 146
    ID              shift and go to state 194
    PARIZQ          shift and go to state 142
    CADENA          shift and go to state 13
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 170
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 144
    expresion_suma                 shift and go to state 172
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 65
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 175

state 143

    (59) pos -> ENTERO .
    (108) expresion_simple -> ENTERO .
    (98) concatenables -> ENTERO .

  ! reduce/reduce conflict for CORCHDER resolved using rule 59 (pos -> ENTERO .).
  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
    CORCHDER        reduce using rule 59 (pos -> ENTERO .)
    PARDER          reduce using rule 59 (pos -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)

  ! CORCHDER        [ reduce using rule 108 (expresion_simple -> ENTERO .) ]
  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 144

    (62) pos -> expresion_condicion .

    CORCHDER        reduce using rule 62 (pos -> expresion_condicion .)
    PARDER          reduce using rule 62 (pos -> expresion_condicion .)



state 145

    (61) pos -> ID .
    (107) expresion_simple -> ID .
    (97) concatenables -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for CORCHDER resolved using rule 61 (pos -> ID .).
    CORCHDER        reduce using rule 61 (pos -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]


state 146

    (60) pos -> MENOS . pos
    (109) expresion_simple -> MENOS . expresion_simple
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar

    ENTERO          shift and go to state 143
    MENOS           shift and go to state 146
    ID              shift and go to state 195
    PARIZQ          shift and go to state 142
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 184
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 144
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 187
    expresion_comparacion          shift and go to state 64

state 147

    (68) limite -> PARIZQ . limite PARDER
    (63) pos -> PARIZQ . pos PARDER
    (110) expresion_simple -> PARIZQ . expresion PARDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    ENTERO          shift and go to state 196
    MENOS           shift and go to state 151
    ID              shift and go to state 197
    PARIZQ          shift and go to state 147
    PARDER          reduce using rule 2 (vacio -> .)
    CADENA          shift and go to state 13
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 170
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 149
    expresion_suma                 shift and go to state 172
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 65
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 174
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 175

state 148

    (64) limite -> ENTERO .
    (59) pos -> ENTERO .
    (108) expresion_simple -> ENTERO .
    (98) concatenables -> ENTERO .

  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 64 (limite -> ENTERO .).
  ! reduce/reduce conflict for CORCHDER resolved using rule 59 (pos -> ENTERO .).
  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
    DOSPUNTOS       reduce using rule 64 (limite -> ENTERO .)
    CORCHDER        reduce using rule 59 (pos -> ENTERO .)
    PARDER          reduce using rule 59 (pos -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)

  ! PARDER          [ reduce using rule 64 (limite -> ENTERO .) ]
  ! DOSPUNTOS       [ reduce using rule 108 (expresion_simple -> ENTERO .) ]
  ! CORCHDER        [ reduce using rule 108 (expresion_simple -> ENTERO .) ]
  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 149

    (67) limite -> expresion_condicion .
    (62) pos -> expresion_condicion .

  ! reduce/reduce conflict for PARDER resolved using rule 62 (pos -> expresion_condicion .).
    DOSPUNTOS       reduce using rule 67 (limite -> expresion_condicion .)
    CORCHDER        reduce using rule 62 (pos -> expresion_condicion .)
    PARDER          reduce using rule 62 (pos -> expresion_condicion .)

  ! PARDER          [ reduce using rule 67 (limite -> expresion_condicion .) ]


state 150

    (66) limite -> ID .
    (61) pos -> ID .
    (107) expresion_simple -> ID .
    (97) concatenables -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 66 (limite -> ID .).
  ! reduce/reduce conflict for CORCHDER resolved using rule 61 (pos -> ID .).
    DOSPUNTOS       reduce using rule 66 (limite -> ID .)
    CORCHDER        reduce using rule 61 (pos -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! DOSPUNTOS       [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]


state 151

    (65) limite -> MENOS . limite
    (60) pos -> MENOS . pos
    (109) expresion_simple -> MENOS . expresion_simple
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (59) pos -> . ENTERO
    (60) pos -> . MENOS pos
    (61) pos -> . ID
    (62) pos -> . expresion_condicion
    (63) pos -> . PARIZQ pos PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar

    ENTERO          shift and go to state 148
    MENOS           shift and go to state 151
    ID              shift and go to state 198
    PARIZQ          shift and go to state 147
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    DOSPUNTOS       reduce using rule 2 (vacio -> .)
    PARDER          reduce using rule 2 (vacio -> .)
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_pow                  shift and go to state 16
    pos                            shift and go to state 184
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 149
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 186
    expresion_simple               shift and go to state 187
    expresion_comparacion          shift and go to state 64

state 152

    (25) enunciados_ciclos -> enunciados .

    END             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    WRITE           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    IF              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    READ            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ID              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    SUMMON          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FUNC            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    RETURN          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    BREAK           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    VAR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    WHILA           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FOR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CADENA          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ENTERO          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CORCHIZQ        reduce using rule 25 (enunciados_ciclos -> enunciados .)
    MENOS           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    PARIZQ          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    DECIMAL         reduce using rule 25 (enunciados_ciclos -> enunciados .)



state 153

    (29) enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos . END
    (13) enunciado -> enunciados_ciclos .

  ! shift/reduce conflict for END resolved as shift.
    END             shift and go to state 199
    WRITE           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    IF              reduce using rule 13 (enunciado -> enunciados_ciclos .)
    READ            reduce using rule 13 (enunciado -> enunciados_ciclos .)
    ID              reduce using rule 13 (enunciado -> enunciados_ciclos .)
    SUMMON          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    FUNC            reduce using rule 13 (enunciado -> enunciados_ciclos .)
    RETURN          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    BREAK           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    VAR             reduce using rule 13 (enunciado -> enunciados_ciclos .)
    WHILA           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    FOR             reduce using rule 13 (enunciado -> enunciados_ciclos .)
    CADENA          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    ENTERO          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    CORCHIZQ        reduce using rule 13 (enunciado -> enunciados_ciclos .)
    MENOS           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    PARIZQ          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    DECIMAL         reduce using rule 13 (enunciado -> enunciados_ciclos .)

  ! END             [ reduce using rule 13 (enunciado -> enunciados_ciclos .) ]


state 154

    (102) mas_cadenas -> vacio .

    AND             reduce using rule 102 (mas_cadenas -> vacio .)
    OR              reduce using rule 102 (mas_cadenas -> vacio .)
    MAYOR           reduce using rule 102 (mas_cadenas -> vacio .)
    MENOR           reduce using rule 102 (mas_cadenas -> vacio .)
    MAYORIGUAL      reduce using rule 102 (mas_cadenas -> vacio .)
    MENORIGUAL      reduce using rule 102 (mas_cadenas -> vacio .)
    IGUAL           reduce using rule 102 (mas_cadenas -> vacio .)
    NOIGUAL         reduce using rule 102 (mas_cadenas -> vacio .)
    $end            reduce using rule 102 (mas_cadenas -> vacio .)
    WRITE           reduce using rule 102 (mas_cadenas -> vacio .)
    IF              reduce using rule 102 (mas_cadenas -> vacio .)
    READ            reduce using rule 102 (mas_cadenas -> vacio .)
    ID              reduce using rule 102 (mas_cadenas -> vacio .)
    SUMMON          reduce using rule 102 (mas_cadenas -> vacio .)
    FUNC            reduce using rule 102 (mas_cadenas -> vacio .)
    RETURN          reduce using rule 102 (mas_cadenas -> vacio .)
    BREAK           reduce using rule 102 (mas_cadenas -> vacio .)
    VAR             reduce using rule 102 (mas_cadenas -> vacio .)
    WHILA           reduce using rule 102 (mas_cadenas -> vacio .)
    FOR             reduce using rule 102 (mas_cadenas -> vacio .)
    CADENA          reduce using rule 102 (mas_cadenas -> vacio .)
    ENTERO          reduce using rule 102 (mas_cadenas -> vacio .)
    CORCHIZQ        reduce using rule 102 (mas_cadenas -> vacio .)
    MENOS           reduce using rule 102 (mas_cadenas -> vacio .)
    PARIZQ          reduce using rule 102 (mas_cadenas -> vacio .)
    DECIMAL         reduce using rule 102 (mas_cadenas -> vacio .)
    END             reduce using rule 102 (mas_cadenas -> vacio .)
    PARDER          reduce using rule 102 (mas_cadenas -> vacio .)
    COMA            reduce using rule 102 (mas_cadenas -> vacio .)
    CORCHDER        reduce using rule 102 (mas_cadenas -> vacio .)
    POTENCIA        reduce using rule 102 (mas_cadenas -> vacio .)
    POR             reduce using rule 102 (mas_cadenas -> vacio .)
    ENTRE           reduce using rule 102 (mas_cadenas -> vacio .)
    MODULO          reduce using rule 102 (mas_cadenas -> vacio .)
    MAS             reduce using rule 102 (mas_cadenas -> vacio .)
    THEN            reduce using rule 102 (mas_cadenas -> vacio .)
    DOSPUNTOS       reduce using rule 102 (mas_cadenas -> vacio .)



state 155

    (95) expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .

    AND             reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    OR              reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    MAYOR           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    MENOR           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    MAYORIGUAL      reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    MENORIGUAL      reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    IGUAL           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    NOIGUAL         reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    $end            reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    WRITE           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    IF              reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    READ            reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    ID              reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    SUMMON          reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    FUNC            reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    RETURN          reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    BREAK           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    VAR             reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    WHILA           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    FOR             reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    CADENA          reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    ENTERO          reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    CORCHIZQ        reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    MENOS           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    PARIZQ          reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    DECIMAL         reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    END             reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    COMA            reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    PARDER          reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    POTENCIA        reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    POR             reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    ENTRE           reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    MODULO          reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    MAS             reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    THEN            reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    CORCHDER        reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)
    DOSPUNTOS       reduce using rule 95 (expresion_concatenacion -> concatenables PUNTOCOMA concatenables mas_cadenas .)



state 156

    (101) mas_cadenas -> PUNTOCOMA . concatenables mas_cadenas
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER

    CADENA          shift and go to state 110
    ID              shift and go to state 113
    ENTERO          shift and go to state 114
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15


    concatenables                  shift and go to state 200
    enunciado_invocar              shift and go to state 111
    lista                          shift and go to state 112

state 157

    (70) parametros -> expresion . mas_elementos
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (105) mas_elementos -> . COMA expresion mas_elementos
    (106) mas_elementos -> . vacio
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL
    (2) vacio -> .

    COMA            shift and go to state 139
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86
    PARDER          reduce using rule 2 (vacio -> .)


    operador_comparacion           shift and go to state 87
    vacio                          shift and go to state 138
    mas_elementos                  shift and go to state 201

state 158

    (71) parametros -> vacio .

    PARDER          reduce using rule 71 (parametros -> vacio .)



state 159

    (42) enunciado_invocar -> SUMMON ID PARIZQ parametros . PARDER

    PARDER          shift and go to state 202



state 160

    (33) expfor -> expresion_lista .

    BREAK           reduce using rule 33 (expfor -> expresion_lista .)
    WRITE           reduce using rule 33 (expfor -> expresion_lista .)
    IF              reduce using rule 33 (expfor -> expresion_lista .)
    READ            reduce using rule 33 (expfor -> expresion_lista .)
    ID              reduce using rule 33 (expfor -> expresion_lista .)
    SUMMON          reduce using rule 33 (expfor -> expresion_lista .)
    FUNC            reduce using rule 33 (expfor -> expresion_lista .)
    RETURN          reduce using rule 33 (expfor -> expresion_lista .)
    VAR             reduce using rule 33 (expfor -> expresion_lista .)
    WHILA           reduce using rule 33 (expfor -> expresion_lista .)
    FOR             reduce using rule 33 (expfor -> expresion_lista .)
    CADENA          reduce using rule 33 (expfor -> expresion_lista .)
    ENTERO          reduce using rule 33 (expfor -> expresion_lista .)
    CORCHIZQ        reduce using rule 33 (expfor -> expresion_lista .)
    MENOS           reduce using rule 33 (expfor -> expresion_lista .)
    PARIZQ          reduce using rule 33 (expfor -> expresion_lista .)
    DECIMAL         reduce using rule 33 (expfor -> expresion_lista .)
    END             reduce using rule 33 (expfor -> expresion_lista .)



state 161

    (31) expfor -> CADENA .

    BREAK           reduce using rule 31 (expfor -> CADENA .)
    WRITE           reduce using rule 31 (expfor -> CADENA .)
    IF              reduce using rule 31 (expfor -> CADENA .)
    READ            reduce using rule 31 (expfor -> CADENA .)
    ID              reduce using rule 31 (expfor -> CADENA .)
    SUMMON          reduce using rule 31 (expfor -> CADENA .)
    FUNC            reduce using rule 31 (expfor -> CADENA .)
    RETURN          reduce using rule 31 (expfor -> CADENA .)
    VAR             reduce using rule 31 (expfor -> CADENA .)
    WHILA           reduce using rule 31 (expfor -> CADENA .)
    FOR             reduce using rule 31 (expfor -> CADENA .)
    CADENA          reduce using rule 31 (expfor -> CADENA .)
    ENTERO          reduce using rule 31 (expfor -> CADENA .)
    CORCHIZQ        reduce using rule 31 (expfor -> CADENA .)
    MENOS           reduce using rule 31 (expfor -> CADENA .)
    PARIZQ          reduce using rule 31 (expfor -> CADENA .)
    DECIMAL         reduce using rule 31 (expfor -> CADENA .)
    END             reduce using rule 31 (expfor -> CADENA .)



state 162

    (34) expfor -> enunciado_invocar .

    BREAK           reduce using rule 34 (expfor -> enunciado_invocar .)
    WRITE           reduce using rule 34 (expfor -> enunciado_invocar .)
    IF              reduce using rule 34 (expfor -> enunciado_invocar .)
    READ            reduce using rule 34 (expfor -> enunciado_invocar .)
    ID              reduce using rule 34 (expfor -> enunciado_invocar .)
    SUMMON          reduce using rule 34 (expfor -> enunciado_invocar .)
    FUNC            reduce using rule 34 (expfor -> enunciado_invocar .)
    RETURN          reduce using rule 34 (expfor -> enunciado_invocar .)
    VAR             reduce using rule 34 (expfor -> enunciado_invocar .)
    WHILA           reduce using rule 34 (expfor -> enunciado_invocar .)
    FOR             reduce using rule 34 (expfor -> enunciado_invocar .)
    CADENA          reduce using rule 34 (expfor -> enunciado_invocar .)
    ENTERO          reduce using rule 34 (expfor -> enunciado_invocar .)
    CORCHIZQ        reduce using rule 34 (expfor -> enunciado_invocar .)
    MENOS           reduce using rule 34 (expfor -> enunciado_invocar .)
    PARIZQ          reduce using rule 34 (expfor -> enunciado_invocar .)
    DECIMAL         reduce using rule 34 (expfor -> enunciado_invocar .)
    END             reduce using rule 34 (expfor -> enunciado_invocar .)



state 163

    (35) enunciado_for -> FOR ID IN expfor . enunciados_ciclos END
    (25) enunciados_ciclos -> . enunciados
    (26) enunciados_ciclos -> . BREAK
    (3) enunciados -> . enunciado enunciados
    (4) enunciados -> . vacio
    (5) enunciado -> . enunciado_print
    (6) enunciado -> . enunciado_loop
    (7) enunciado -> . enunciado_if
    (8) enunciado -> . enunciado_read
    (9) enunciado -> . enunciado_asignacion
    (10) enunciado -> . enunciado_invocar
    (11) enunciado -> . enunciado_declaracion
    (12) enunciado -> . enunciado_return
    (13) enunciado -> . enunciados_ciclos
    (14) enunciado -> . variables
    (15) enunciado -> . expresion_comparacion
    (2) vacio -> .
    (22) enunciado_print -> . WRITE expresion
    (23) enunciado_loop -> . enunciado_whila
    (24) enunciado_loop -> . enunciado_for
    (36) enunciado_if -> . IF expresion_condicion THEN enunciados END enunciado_else
    (39) enunciado_read -> . READ expresion
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (43) enunciado_declaracion -> . FUNC ID PARIZQ parametrosf PARDER enunciados END
    (50) enunciado_return -> . RETURN expresion
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (29) enunciado_whila -> . WHILA expresion_condicion THEN enunciados_ciclos END
    (35) enunciado_for -> . FOR ID IN expfor enunciados_ciclos END
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for BREAK resolved as shift.
  ! shift/reduce conflict for WRITE resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for READ resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for SUMMON resolved as shift.
  ! shift/reduce conflict for FUNC resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for VAR resolved as shift.
  ! shift/reduce conflict for WHILA resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for CADENA resolved as shift.
  ! shift/reduce conflict for ENTERO resolved as shift.
  ! shift/reduce conflict for CORCHIZQ resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
  ! shift/reduce conflict for PARIZQ resolved as shift.
  ! shift/reduce conflict for DECIMAL resolved as shift.
    BREAK           shift and go to state 40
    END             reduce using rule 2 (vacio -> .)
    WRITE           shift and go to state 25
    IF              shift and go to state 32
    READ            shift and go to state 6
    ID              shift and go to state 31
    SUMMON          shift and go to state 15
    FUNC            shift and go to state 27
    RETURN          shift and go to state 5
    VAR             shift and go to state 4
    WHILA           shift and go to state 10
    FOR             shift and go to state 23
    CADENA          shift and go to state 13
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24

  ! WRITE           [ reduce using rule 2 (vacio -> .) ]
  ! IF              [ reduce using rule 2 (vacio -> .) ]
  ! READ            [ reduce using rule 2 (vacio -> .) ]
  ! ID              [ reduce using rule 2 (vacio -> .) ]
  ! SUMMON          [ reduce using rule 2 (vacio -> .) ]
  ! FUNC            [ reduce using rule 2 (vacio -> .) ]
  ! RETURN          [ reduce using rule 2 (vacio -> .) ]
  ! BREAK           [ reduce using rule 2 (vacio -> .) ]
  ! VAR             [ reduce using rule 2 (vacio -> .) ]
  ! WHILA           [ reduce using rule 2 (vacio -> .) ]
  ! FOR             [ reduce using rule 2 (vacio -> .) ]
  ! CADENA          [ reduce using rule 2 (vacio -> .) ]
  ! ENTERO          [ reduce using rule 2 (vacio -> .) ]
  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]
  ! MENOS           [ reduce using rule 2 (vacio -> .) ]
  ! PARIZQ          [ reduce using rule 2 (vacio -> .) ]
  ! DECIMAL         [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 7
    enunciado_declaracion          shift and go to state 8
    enunciado_read                 shift and go to state 9
    enunciado_return               shift and go to state 12
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    enunciado                      shift and go to state 18
    enunciado_print                shift and go to state 19
    expresion_lst                  shift and go to state 21
    enunciados                     shift and go to state 152
    expresion_suma                 shift and go to state 34
    enunciado_whila                shift and go to state 26
    enunciado_invocar              shift and go to state 28
    enunciado_asignacion           shift and go to state 29
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    enunciado_for                  shift and go to state 36
    enunciados_ciclos              shift and go to state 203
    enunciado_loop                 shift and go to state 38
    vacio                          shift and go to state 39
    enunciado_if                   shift and go to state 43
    expresion_comparacion          shift and go to state 44

state 164

    (30) expfor -> lista .

    BREAK           reduce using rule 30 (expfor -> lista .)
    WRITE           reduce using rule 30 (expfor -> lista .)
    IF              reduce using rule 30 (expfor -> lista .)
    READ            reduce using rule 30 (expfor -> lista .)
    ID              reduce using rule 30 (expfor -> lista .)
    SUMMON          reduce using rule 30 (expfor -> lista .)
    FUNC            reduce using rule 30 (expfor -> lista .)
    RETURN          reduce using rule 30 (expfor -> lista .)
    VAR             reduce using rule 30 (expfor -> lista .)
    WHILA           reduce using rule 30 (expfor -> lista .)
    FOR             reduce using rule 30 (expfor -> lista .)
    CADENA          reduce using rule 30 (expfor -> lista .)
    ENTERO          reduce using rule 30 (expfor -> lista .)
    CORCHIZQ        reduce using rule 30 (expfor -> lista .)
    MENOS           reduce using rule 30 (expfor -> lista .)
    PARIZQ          reduce using rule 30 (expfor -> lista .)
    DECIMAL         reduce using rule 30 (expfor -> lista .)
    END             reduce using rule 30 (expfor -> lista .)



state 165

    (32) expfor -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for CORCHIZQ resolved as shift.
    BREAK           reduce using rule 32 (expfor -> ID .)
    WRITE           reduce using rule 32 (expfor -> ID .)
    IF              reduce using rule 32 (expfor -> ID .)
    READ            reduce using rule 32 (expfor -> ID .)
    ID              reduce using rule 32 (expfor -> ID .)
    SUMMON          reduce using rule 32 (expfor -> ID .)
    FUNC            reduce using rule 32 (expfor -> ID .)
    RETURN          reduce using rule 32 (expfor -> ID .)
    VAR             reduce using rule 32 (expfor -> ID .)
    WHILA           reduce using rule 32 (expfor -> ID .)
    FOR             reduce using rule 32 (expfor -> ID .)
    CADENA          reduce using rule 32 (expfor -> ID .)
    ENTERO          reduce using rule 32 (expfor -> ID .)
    MENOS           reduce using rule 32 (expfor -> ID .)
    PARIZQ          reduce using rule 32 (expfor -> ID .)
    DECIMAL         reduce using rule 32 (expfor -> ID .)
    END             reduce using rule 32 (expfor -> ID .)
    CORCHIZQ        shift and go to state 204

  ! CORCHIZQ        [ reduce using rule 32 (expfor -> ID .) ]


state 166

    (43) enunciado_declaracion -> FUNC ID PARIZQ parametrosf . PARDER enunciados END

    PARDER          shift and go to state 205



state 167

    (44) parametrosf -> ID . mas_elementosf
    (45) parametrosf -> ID . IS expresion mas_elementosf
    (47) mas_elementosf -> . COMA ID mas_elementosf
    (48) mas_elementosf -> . COMA ID IS expresion mas_elementosf
    (49) mas_elementosf -> . vacio
    (2) vacio -> .

    IS              shift and go to state 207
    COMA            shift and go to state 209
    PARDER          reduce using rule 2 (vacio -> .)


    mas_elementosf                 shift and go to state 206
    vacio                          shift and go to state 208

state 168

    (46) parametrosf -> vacio .

    PARDER          reduce using rule 46 (parametrosf -> vacio .)



state 169

    (58) expresion_lst -> ID CORCHIZQ pos CORCHDER .

    IS              reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    POTENCIA        reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    POR             reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    ENTRE           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    MODULO          reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    MAS             reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    MENOS           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    AND             reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    OR              reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    MAYOR           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    MENOR           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    MAYORIGUAL      reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    MENORIGUAL      reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    IGUAL           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    NOIGUAL         reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    DOSPUNTOS       reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    CORCHDER        reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    $end            reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    WRITE           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    IF              reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    READ            reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    ID              reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    SUMMON          reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    FUNC            reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    RETURN          reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    BREAK           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    VAR             reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    WHILA           reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    FOR             reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    CADENA          reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    ENTERO          reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    CORCHIZQ        reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    PARIZQ          reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    DECIMAL         reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    END             reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    THEN            reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    PARDER          reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)
    COMA            reduce using rule 58 (expresion_lst -> ID CORCHIZQ pos CORCHDER .)



state 170

    (63) pos -> PARIZQ pos . PARDER

    PARDER          shift and go to state 210



state 171

    (59) pos -> ENTERO .
    (64) limite -> ENTERO .
    (98) concatenables -> ENTERO .
    (108) expresion_simple -> ENTERO .

  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
    PARDER          reduce using rule 59 (pos -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)

  ! PARDER          [ reduce using rule 64 (limite -> ENTERO .) ]
  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 172

    (51) expresion -> expresion_suma .
    (27) expresion_condicion -> expresion_suma .

  ! reduce/reduce conflict for PARDER resolved using rule 27 (expresion_condicion -> expresion_suma .).
    AND             reduce using rule 51 (expresion -> expresion_suma .)
    OR              reduce using rule 51 (expresion -> expresion_suma .)
    MAYOR           reduce using rule 51 (expresion -> expresion_suma .)
    MENOR           reduce using rule 51 (expresion -> expresion_suma .)
    MAYORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    MENORIGUAL      reduce using rule 51 (expresion -> expresion_suma .)
    IGUAL           reduce using rule 51 (expresion -> expresion_suma .)
    NOIGUAL         reduce using rule 51 (expresion -> expresion_suma .)
    PARDER          reduce using rule 27 (expresion_condicion -> expresion_suma .)

  ! PARDER          [ reduce using rule 51 (expresion -> expresion_suma .) ]


state 173

    (61) pos -> ID .
    (66) limite -> ID .
    (97) concatenables -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
    PARDER          reduce using rule 61 (pos -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! PARDER          [ reduce using rule 66 (limite -> ID .) ]
  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]


state 174

    (68) limite -> PARIZQ limite . PARDER

    PARDER          shift and go to state 211



state 175

    (52) expresion -> expresion_comparacion .
    (28) expresion_condicion -> expresion_comparacion .

  ! reduce/reduce conflict for PARDER resolved using rule 28 (expresion_condicion -> expresion_comparacion .).
    AND             reduce using rule 52 (expresion -> expresion_comparacion .)
    OR              reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MENOR           reduce using rule 52 (expresion -> expresion_comparacion .)
    MAYORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    MENORIGUAL      reduce using rule 52 (expresion -> expresion_comparacion .)
    IGUAL           reduce using rule 52 (expresion -> expresion_comparacion .)
    NOIGUAL         reduce using rule 52 (expresion -> expresion_comparacion .)
    PARDER          reduce using rule 28 (expresion_condicion -> expresion_comparacion .)

  ! PARDER          [ reduce using rule 52 (expresion -> expresion_comparacion .) ]


state 176

    (68) limite -> PARIZQ . limite PARDER
    (110) expresion_simple -> PARIZQ . expresion PARDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    ENTERO          shift and go to state 212
    MENOS           shift and go to state 182
    ID              shift and go to state 213
    PARIZQ          shift and go to state 176
    PARDER          reduce using rule 2 (vacio -> .)
    CADENA          shift and go to state 13
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 179
    expresion_suma                 shift and go to state 172
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 65
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 174
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 175

state 177

    (54) expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .

    POTENCIA        reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    POR             reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    ENTRE           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    MODULO          reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    MAS             reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    MENOS           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    AND             reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    OR              reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    MAYOR           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    MENOR           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    MAYORIGUAL      reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    MENORIGUAL      reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    IGUAL           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    NOIGUAL         reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    CORCHDER        reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    DOSPUNTOS       reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    $end            reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    WRITE           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    IF              reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    READ            reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    ID              reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    SUMMON          reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    FUNC            reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    RETURN          reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    BREAK           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    VAR             reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    WHILA           reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    FOR             reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    CADENA          reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    ENTERO          reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    CORCHIZQ        reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    PARIZQ          reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    DECIMAL         reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    END             reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    THEN            reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    PARDER          reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)
    COMA            reduce using rule 54 (expresion_lista -> ID CORCHIZQ DOSPUNTOS CORCHDER .)



state 178

    (64) limite -> ENTERO .
    (108) expresion_simple -> ENTERO .
    (98) concatenables -> ENTERO .

  ! reduce/reduce conflict for CORCHDER resolved using rule 64 (limite -> ENTERO .).
  ! reduce/reduce conflict for PARDER resolved using rule 64 (limite -> ENTERO .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 64 (limite -> ENTERO .).
    CORCHDER        reduce using rule 64 (limite -> ENTERO .)
    DOSPUNTOS       reduce using rule 64 (limite -> ENTERO .)
    PARDER          reduce using rule 64 (limite -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)

  ! CORCHDER        [ reduce using rule 108 (expresion_simple -> ENTERO .) ]
  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]
  ! DOSPUNTOS       [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 179

    (67) limite -> expresion_condicion .

    CORCHDER        reduce using rule 67 (limite -> expresion_condicion .)
    DOSPUNTOS       reduce using rule 67 (limite -> expresion_condicion .)
    PARDER          reduce using rule 67 (limite -> expresion_condicion .)



state 180

    (66) limite -> ID .
    (107) expresion_simple -> ID .
    (97) concatenables -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 66 (limite -> ID .).
  ! reduce/reduce conflict for CORCHDER resolved using rule 66 (limite -> ID .).
    CORCHDER        reduce using rule 66 (limite -> ID .)
    DOSPUNTOS       reduce using rule 66 (limite -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! DOSPUNTOS       [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]


state 181

    (56) expresion_lista -> ID CORCHIZQ DOSPUNTOS limite . CORCHDER

    CORCHDER        shift and go to state 214



state 182

    (65) limite -> MENOS . limite
    (109) expresion_simple -> MENOS . expresion_simple
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar

    ENTERO          shift and go to state 178
    MENOS           shift and go to state 182
    ID              shift and go to state 215
    PARIZQ          shift and go to state 176
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    CORCHDER        reduce using rule 2 (vacio -> .)
    PARDER          reduce using rule 2 (vacio -> .)
    DOSPUNTOS       reduce using rule 2 (vacio -> .)
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 179
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 186
    expresion_simple               shift and go to state 187
    expresion_comparacion          shift and go to state 64

state 183

    (55) expresion_lista -> ID CORCHIZQ limite DOSPUNTOS . CORCHDER
    (57) expresion_lista -> ID CORCHIZQ limite DOSPUNTOS . limite CORCHDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

  ! shift/reduce conflict for CORCHDER resolved as shift.
    CORCHDER        shift and go to state 216
    ENTERO          shift and go to state 178
    MENOS           shift and go to state 182
    ID              shift and go to state 180
    PARIZQ          shift and go to state 176
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46

  ! CORCHDER        [ reduce using rule 2 (vacio -> .) ]

    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 179
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 217
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 64

state 184

    (60) pos -> MENOS pos .

    CORCHDER        reduce using rule 60 (pos -> MENOS pos .)
    PARDER          reduce using rule 60 (pos -> MENOS pos .)



state 185

    (61) pos -> ID .
    (66) limite -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion
    (97) concatenables -> ID .

  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for CORCHDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 66 (limite -> ID .).
  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
    CORCHDER        reduce using rule 61 (pos -> ID .)
    PARDER          reduce using rule 61 (pos -> ID .)
    DOSPUNTOS       reduce using rule 66 (limite -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)

  ! PARDER          [ reduce using rule 66 (limite -> ID .) ]
  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! DOSPUNTOS       [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]


state 186

    (65) limite -> MENOS limite .

    DOSPUNTOS       reduce using rule 65 (limite -> MENOS limite .)
    CORCHDER        reduce using rule 65 (limite -> MENOS limite .)
    PARDER          reduce using rule 65 (limite -> MENOS limite .)



state 187

    (109) expresion_simple -> MENOS expresion_simple .
    (76) expresion_pow -> expresion_simple . POTENCIA expresion_simple
    (77) expresion_pow -> expresion_simple .

  ! shift/reduce conflict for POTENCIA resolved as shift.
  ! reduce/reduce conflict for POR resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for ENTRE resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for MODULO resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for MAS resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for MENOS resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for PARDER resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for CORCHDER resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for AND resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for OR resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for MAYOR resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for MENOR resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for IGUAL resolved using rule 77 (expresion_pow -> expresion_simple .).
  ! reduce/reduce conflict for NOIGUAL resolved using rule 77 (expresion_pow -> expresion_simple .).
    POTENCIA        shift and go to state 98
    POR             reduce using rule 77 (expresion_pow -> expresion_simple .)
    ENTRE           reduce using rule 77 (expresion_pow -> expresion_simple .)
    MODULO          reduce using rule 77 (expresion_pow -> expresion_simple .)
    MAS             reduce using rule 77 (expresion_pow -> expresion_simple .)
    MENOS           reduce using rule 77 (expresion_pow -> expresion_simple .)
    DOSPUNTOS       reduce using rule 77 (expresion_pow -> expresion_simple .)
    PARDER          reduce using rule 77 (expresion_pow -> expresion_simple .)
    CORCHDER        reduce using rule 77 (expresion_pow -> expresion_simple .)
    AND             reduce using rule 77 (expresion_pow -> expresion_simple .)
    OR              reduce using rule 77 (expresion_pow -> expresion_simple .)
    MAYOR           reduce using rule 77 (expresion_pow -> expresion_simple .)
    MENOR           reduce using rule 77 (expresion_pow -> expresion_simple .)
    MAYORIGUAL      reduce using rule 77 (expresion_pow -> expresion_simple .)
    MENORIGUAL      reduce using rule 77 (expresion_pow -> expresion_simple .)
    IGUAL           reduce using rule 77 (expresion_pow -> expresion_simple .)
    NOIGUAL         reduce using rule 77 (expresion_pow -> expresion_simple .)

  ! POTENCIA        [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! POR             [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! ENTRE           [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! MODULO          [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! MAS             [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! MENOS           [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! PARDER          [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! AND             [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! OR              [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! MAYOR           [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! MENOR           [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! MAYORIGUAL      [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! MENORIGUAL      [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! IGUAL           [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! NOIGUAL         [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! CORCHDER        [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]
  ! DOSPUNTOS       [ reduce using rule 109 (expresion_simple -> MENOS expresion_simple .) ]


state 188

    (36) enunciado_if -> IF expresion_condicion THEN enunciados . END enunciado_else
    (25) enunciados_ciclos -> enunciados .

  ! shift/reduce conflict for END resolved as shift.
    END             shift and go to state 218
    WRITE           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    IF              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    READ            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ID              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    SUMMON          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FUNC            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    RETURN          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    BREAK           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    VAR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    WHILA           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FOR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CADENA          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ENTERO          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CORCHIZQ        reduce using rule 25 (enunciados_ciclos -> enunciados .)
    MENOS           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    PARIZQ          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    DECIMAL         reduce using rule 25 (enunciados_ciclos -> enunciados .)

  ! END             [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]


state 189

    (104) lista -> CORCHIZQ expresion mas_elementos CORCHDER .

    PUNTOCOMA       reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    POTENCIA        reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    POR             reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    ENTRE           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    MODULO          reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    MAS             reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    MENOS           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    PARDER          reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    AND             reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    OR              reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    MAYOR           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    MENOR           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    MAYORIGUAL      reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    MENORIGUAL      reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    IGUAL           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    NOIGUAL         reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    COMA            reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    CORCHDER        reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    $end            reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    WRITE           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    IF              reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    READ            reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    ID              reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    SUMMON          reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    FUNC            reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    RETURN          reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    BREAK           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    VAR             reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    WHILA           reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    FOR             reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    CADENA          reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    ENTERO          reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    CORCHIZQ        reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    PARIZQ          reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    DECIMAL         reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    END             reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    THEN            reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)
    DOSPUNTOS       reduce using rule 104 (lista -> CORCHIZQ expresion mas_elementos CORCHDER .)



state 190

    (105) mas_elementos -> COMA expresion . mas_elementos
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (105) mas_elementos -> . COMA expresion mas_elementos
    (106) mas_elementos -> . vacio
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL
    (2) vacio -> .

    COMA            shift and go to state 139
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86
    CORCHDER        reduce using rule 2 (vacio -> .)
    PARDER          reduce using rule 2 (vacio -> .)


    operador_comparacion           shift and go to state 87
    vacio                          shift and go to state 138
    mas_elementos                  shift and go to state 219

state 191

    (20) mas_variables -> COMA enunciado_asignacion mas_variables .

    WRITE           reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    IF              reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    READ            reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    ID              reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    SUMMON          reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    FUNC            reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    RETURN          reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    BREAK           reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    VAR             reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    WHILA           reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    FOR             reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    CADENA          reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    ENTERO          reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    CORCHIZQ        reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    MENOS           reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    PARIZQ          reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    DECIMAL         reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    $end            reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)
    END             reduce using rule 20 (mas_variables -> COMA enunciado_asignacion mas_variables .)



state 192

    (19) mas_variables -> COMA ID mas_variables .

    WRITE           reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    IF              reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    READ            reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    ID              reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    SUMMON          reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    FUNC            reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    RETURN          reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    BREAK           reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    VAR             reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    WHILA           reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    FOR             reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    CADENA          reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    ENTERO          reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    CORCHIZQ        reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    MENOS           reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    PARIZQ          reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    DECIMAL         reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    $end            reduce using rule 19 (mas_variables -> COMA ID mas_variables .)
    END             reduce using rule 19 (mas_variables -> COMA ID mas_variables .)



state 193

    (59) pos -> ENTERO .
    (98) concatenables -> ENTERO .
    (108) expresion_simple -> ENTERO .

  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
    PARDER          reduce using rule 59 (pos -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)

  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 194

    (61) pos -> ID .
    (97) concatenables -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
    PARDER          reduce using rule 61 (pos -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]


state 195

    (61) pos -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion
    (97) concatenables -> ID .

  ! reduce/reduce conflict for CORCHDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
    CORCHDER        reduce using rule 61 (pos -> ID .)
    PARDER          reduce using rule 61 (pos -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)

  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]


state 196

    (64) limite -> ENTERO .
    (59) pos -> ENTERO .
    (98) concatenables -> ENTERO .
    (108) expresion_simple -> ENTERO .

  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
  ! reduce/reduce conflict for PARDER resolved using rule 59 (pos -> ENTERO .).
    PARDER          reduce using rule 59 (pos -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)

  ! PARDER          [ reduce using rule 64 (limite -> ENTERO .) ]
  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 197

    (66) limite -> ID .
    (61) pos -> ID .
    (97) concatenables -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
    PARDER          reduce using rule 61 (pos -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! PARDER          [ reduce using rule 66 (limite -> ID .) ]
  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]


state 198

    (66) limite -> ID .
    (61) pos -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion
    (97) concatenables -> ID .

  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 66 (limite -> ID .).
  ! reduce/reduce conflict for CORCHDER resolved using rule 61 (pos -> ID .).
  ! reduce/reduce conflict for PARDER resolved using rule 61 (pos -> ID .).
    DOSPUNTOS       reduce using rule 66 (limite -> ID .)
    CORCHDER        reduce using rule 61 (pos -> ID .)
    PARDER          reduce using rule 61 (pos -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)

  ! PARDER          [ reduce using rule 66 (limite -> ID .) ]
  ! DOSPUNTOS       [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]


state 199

    (29) enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .

    END             reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    WRITE           reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    IF              reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    READ            reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    ID              reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    SUMMON          reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    FUNC            reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    RETURN          reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    BREAK           reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    VAR             reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    WHILA           reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    FOR             reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    CADENA          reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    ENTERO          reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    CORCHIZQ        reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    MENOS           reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    PARIZQ          reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    DECIMAL         reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)
    $end            reduce using rule 29 (enunciado_whila -> WHILA expresion_condicion THEN enunciados_ciclos END .)



state 200

    (101) mas_cadenas -> PUNTOCOMA concatenables . mas_cadenas
    (101) mas_cadenas -> . PUNTOCOMA concatenables mas_cadenas
    (102) mas_cadenas -> . vacio
    (2) vacio -> .

    PUNTOCOMA       shift and go to state 156
    AND             reduce using rule 2 (vacio -> .)
    OR              reduce using rule 2 (vacio -> .)
    MAYOR           reduce using rule 2 (vacio -> .)
    MENOR           reduce using rule 2 (vacio -> .)
    MAYORIGUAL      reduce using rule 2 (vacio -> .)
    MENORIGUAL      reduce using rule 2 (vacio -> .)
    IGUAL           reduce using rule 2 (vacio -> .)
    NOIGUAL         reduce using rule 2 (vacio -> .)
    $end            reduce using rule 2 (vacio -> .)
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    CORCHIZQ        reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)
    PARDER          reduce using rule 2 (vacio -> .)
    COMA            reduce using rule 2 (vacio -> .)
    CORCHDER        reduce using rule 2 (vacio -> .)
    POTENCIA        reduce using rule 2 (vacio -> .)
    POR             reduce using rule 2 (vacio -> .)
    ENTRE           reduce using rule 2 (vacio -> .)
    MODULO          reduce using rule 2 (vacio -> .)
    MAS             reduce using rule 2 (vacio -> .)
    THEN            reduce using rule 2 (vacio -> .)
    DOSPUNTOS       reduce using rule 2 (vacio -> .)


    mas_cadenas                    shift and go to state 220
    vacio                          shift and go to state 154

state 201

    (70) parametros -> expresion mas_elementos .

    PARDER          reduce using rule 70 (parametros -> expresion mas_elementos .)



state 202

    (42) enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .

    PUNTOCOMA       reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    POTENCIA        reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    POR             reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    ENTRE           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    MODULO          reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    MAS             reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    MENOS           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    AND             reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    OR              reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    MAYOR           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    MENOR           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    MAYORIGUAL      reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    MENORIGUAL      reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    IGUAL           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    NOIGUAL         reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    $end            reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    WRITE           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    IF              reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    READ            reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    ID              reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    SUMMON          reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    FUNC            reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    RETURN          reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    BREAK           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    VAR             reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    WHILA           reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    FOR             reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    CADENA          reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    ENTERO          reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    CORCHIZQ        reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    PARIZQ          reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    DECIMAL         reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    END             reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    THEN            reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    PARDER          reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    COMA            reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    CORCHDER        reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)
    DOSPUNTOS       reduce using rule 42 (enunciado_invocar -> SUMMON ID PARIZQ parametros PARDER .)



state 203

    (35) enunciado_for -> FOR ID IN expfor enunciados_ciclos . END
    (13) enunciado -> enunciados_ciclos .

  ! shift/reduce conflict for END resolved as shift.
    END             shift and go to state 221
    WRITE           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    IF              reduce using rule 13 (enunciado -> enunciados_ciclos .)
    READ            reduce using rule 13 (enunciado -> enunciados_ciclos .)
    ID              reduce using rule 13 (enunciado -> enunciados_ciclos .)
    SUMMON          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    FUNC            reduce using rule 13 (enunciado -> enunciados_ciclos .)
    RETURN          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    BREAK           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    VAR             reduce using rule 13 (enunciado -> enunciados_ciclos .)
    WHILA           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    FOR             reduce using rule 13 (enunciado -> enunciados_ciclos .)
    CADENA          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    ENTERO          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    CORCHIZQ        reduce using rule 13 (enunciado -> enunciados_ciclos .)
    MENOS           reduce using rule 13 (enunciado -> enunciados_ciclos .)
    PARIZQ          reduce using rule 13 (enunciado -> enunciados_ciclos .)
    DECIMAL         reduce using rule 13 (enunciado -> enunciados_ciclos .)

  ! END             [ reduce using rule 13 (enunciado -> enunciados_ciclos .) ]


state 204

    (54) expresion_lista -> ID CORCHIZQ . DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID CORCHIZQ . limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID CORCHIZQ . DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID CORCHIZQ . limite DOSPUNTOS limite CORCHDER
    (64) limite -> . ENTERO
    (65) limite -> . MENOS limite
    (66) limite -> . ID
    (67) limite -> . expresion_condicion
    (68) limite -> . PARIZQ limite PARDER
    (69) limite -> . vacio
    (27) expresion_condicion -> . expresion_suma
    (28) expresion_condicion -> . expresion_comparacion
    (2) vacio -> .
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER

  ! shift/reduce conflict for DOSPUNTOS resolved as shift.
    DOSPUNTOS       shift and go to state 123
    ENTERO          shift and go to state 178
    MENOS           shift and go to state 182
    ID              shift and go to state 180
    PARIZQ          shift and go to state 176
    CADENA          shift and go to state 57
    DECIMAL         shift and go to state 24
    SUMMON          shift and go to state 15
    CORCHIZQ        shift and go to state 46

  ! DOSPUNTOS       [ reduce using rule 2 (vacio -> .) ]

    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_condicion            shift and go to state 179
    expresion_suma                 shift and go to state 60
    enunciado_invocar              shift and go to state 61
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 62
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    vacio                          shift and go to state 127
    limite                         shift and go to state 128
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 64

state 205

    (43) enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER . enunciados END
    (3) enunciados -> . enunciado enunciados
    (4) enunciados -> . vacio
    (5) enunciado -> . enunciado_print
    (6) enunciado -> . enunciado_loop
    (7) enunciado -> . enunciado_if
    (8) enunciado -> . enunciado_read
    (9) enunciado -> . enunciado_asignacion
    (10) enunciado -> . enunciado_invocar
    (11) enunciado -> . enunciado_declaracion
    (12) enunciado -> . enunciado_return
    (13) enunciado -> . enunciados_ciclos
    (14) enunciado -> . variables
    (15) enunciado -> . expresion_comparacion
    (2) vacio -> .
    (22) enunciado_print -> . WRITE expresion
    (23) enunciado_loop -> . enunciado_whila
    (24) enunciado_loop -> . enunciado_for
    (36) enunciado_if -> . IF expresion_condicion THEN enunciados END enunciado_else
    (39) enunciado_read -> . READ expresion
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (43) enunciado_declaracion -> . FUNC ID PARIZQ parametrosf PARDER enunciados END
    (50) enunciado_return -> . RETURN expresion
    (25) enunciados_ciclos -> . enunciados
    (26) enunciados_ciclos -> . BREAK
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (29) enunciado_whila -> . WHILA expresion_condicion THEN enunciados_ciclos END
    (35) enunciado_for -> . FOR ID IN expfor enunciados_ciclos END
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for WRITE resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for READ resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for SUMMON resolved as shift.
  ! shift/reduce conflict for FUNC resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for BREAK resolved as shift.
  ! shift/reduce conflict for VAR resolved as shift.
  ! shift/reduce conflict for WHILA resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for CADENA resolved as shift.
  ! shift/reduce conflict for ENTERO resolved as shift.
  ! shift/reduce conflict for CORCHIZQ resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
  ! shift/reduce conflict for PARIZQ resolved as shift.
  ! shift/reduce conflict for DECIMAL resolved as shift.
    END             reduce using rule 2 (vacio -> .)
    WRITE           shift and go to state 25
    IF              shift and go to state 32
    READ            shift and go to state 6
    ID              shift and go to state 31
    SUMMON          shift and go to state 15
    FUNC            shift and go to state 27
    RETURN          shift and go to state 5
    BREAK           shift and go to state 40
    VAR             shift and go to state 4
    WHILA           shift and go to state 10
    FOR             shift and go to state 23
    CADENA          shift and go to state 13
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24

  ! WRITE           [ reduce using rule 2 (vacio -> .) ]
  ! IF              [ reduce using rule 2 (vacio -> .) ]
  ! READ            [ reduce using rule 2 (vacio -> .) ]
  ! ID              [ reduce using rule 2 (vacio -> .) ]
  ! SUMMON          [ reduce using rule 2 (vacio -> .) ]
  ! FUNC            [ reduce using rule 2 (vacio -> .) ]
  ! RETURN          [ reduce using rule 2 (vacio -> .) ]
  ! BREAK           [ reduce using rule 2 (vacio -> .) ]
  ! VAR             [ reduce using rule 2 (vacio -> .) ]
  ! WHILA           [ reduce using rule 2 (vacio -> .) ]
  ! FOR             [ reduce using rule 2 (vacio -> .) ]
  ! CADENA          [ reduce using rule 2 (vacio -> .) ]
  ! ENTERO          [ reduce using rule 2 (vacio -> .) ]
  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]
  ! MENOS           [ reduce using rule 2 (vacio -> .) ]
  ! PARIZQ          [ reduce using rule 2 (vacio -> .) ]
  ! DECIMAL         [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 7
    enunciado_declaracion          shift and go to state 8
    enunciado_read                 shift and go to state 9
    enunciado_return               shift and go to state 12
    enunciado_print                shift and go to state 19
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    enunciado                      shift and go to state 18
    expresion_lst                  shift and go to state 21
    enunciados                     shift and go to state 222
    expresion_suma                 shift and go to state 34
    enunciado_whila                shift and go to state 26
    enunciado_invocar              shift and go to state 28
    enunciado_asignacion           shift and go to state 29
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    enunciado_for                  shift and go to state 36
    enunciados_ciclos              shift and go to state 37
    enunciado_loop                 shift and go to state 38
    vacio                          shift and go to state 39
    enunciado_if                   shift and go to state 43
    expresion_comparacion          shift and go to state 44

state 206

    (44) parametrosf -> ID mas_elementosf .

    PARDER          reduce using rule 44 (parametrosf -> ID mas_elementosf .)



state 207

    (45) parametrosf -> ID IS . expresion mas_elementosf
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 223
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 208

    (49) mas_elementosf -> vacio .

    PARDER          reduce using rule 49 (mas_elementosf -> vacio .)



state 209

    (47) mas_elementosf -> COMA . ID mas_elementosf
    (48) mas_elementosf -> COMA . ID IS expresion mas_elementosf

    ID              shift and go to state 224



state 210

    (63) pos -> PARIZQ pos PARDER .

    CORCHDER        reduce using rule 63 (pos -> PARIZQ pos PARDER .)
    PARDER          reduce using rule 63 (pos -> PARIZQ pos PARDER .)



state 211

    (68) limite -> PARIZQ limite PARDER .

    DOSPUNTOS       reduce using rule 68 (limite -> PARIZQ limite PARDER .)
    CORCHDER        reduce using rule 68 (limite -> PARIZQ limite PARDER .)
    PARDER          reduce using rule 68 (limite -> PARIZQ limite PARDER .)



state 212

    (64) limite -> ENTERO .
    (98) concatenables -> ENTERO .
    (108) expresion_simple -> ENTERO .

  ! reduce/reduce conflict for PARDER resolved using rule 64 (limite -> ENTERO .).
    PARDER          reduce using rule 64 (limite -> ENTERO .)
    PUNTOCOMA       reduce using rule 98 (concatenables -> ENTERO .)
    POTENCIA        reduce using rule 108 (expresion_simple -> ENTERO .)
    POR             reduce using rule 108 (expresion_simple -> ENTERO .)
    ENTRE           reduce using rule 108 (expresion_simple -> ENTERO .)
    MODULO          reduce using rule 108 (expresion_simple -> ENTERO .)
    MAS             reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOS           reduce using rule 108 (expresion_simple -> ENTERO .)
    AND             reduce using rule 108 (expresion_simple -> ENTERO .)
    OR              reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MENOR           reduce using rule 108 (expresion_simple -> ENTERO .)
    MAYORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    MENORIGUAL      reduce using rule 108 (expresion_simple -> ENTERO .)
    IGUAL           reduce using rule 108 (expresion_simple -> ENTERO .)
    NOIGUAL         reduce using rule 108 (expresion_simple -> ENTERO .)

  ! PARDER          [ reduce using rule 108 (expresion_simple -> ENTERO .) ]


state 213

    (66) limite -> ID .
    (97) concatenables -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion

  ! reduce/reduce conflict for PARDER resolved using rule 66 (limite -> ID .).
    PARDER          reduce using rule 66 (limite -> ID .)
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81

  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]


state 214

    (56) expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .

    POTENCIA        reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    POR             reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    ENTRE           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    MODULO          reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    MAS             reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    MENOS           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    AND             reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    OR              reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    MAYOR           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    MENOR           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    MAYORIGUAL      reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    MENORIGUAL      reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    IGUAL           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    NOIGUAL         reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    CORCHDER        reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    DOSPUNTOS       reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    $end            reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    WRITE           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    IF              reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    READ            reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    ID              reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    SUMMON          reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    FUNC            reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    RETURN          reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    BREAK           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    VAR             reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    WHILA           reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    FOR             reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    CADENA          reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    ENTERO          reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    CORCHIZQ        reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    PARIZQ          reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    DECIMAL         reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    END             reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    THEN            reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    PARDER          reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)
    COMA            reduce using rule 56 (expresion_lista -> ID CORCHIZQ DOSPUNTOS limite CORCHDER .)



state 215

    (66) limite -> ID .
    (107) expresion_simple -> ID .
    (54) expresion_lista -> ID . CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> ID . CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> ID . CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> ID . CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> ID . IS expresion
    (97) concatenables -> ID .

  ! reduce/reduce conflict for CORCHDER resolved using rule 66 (limite -> ID .).
  ! reduce/reduce conflict for PARDER resolved using rule 66 (limite -> ID .).
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 66 (limite -> ID .).
    CORCHDER        reduce using rule 66 (limite -> ID .)
    PARDER          reduce using rule 66 (limite -> ID .)
    DOSPUNTOS       reduce using rule 66 (limite -> ID .)
    POTENCIA        reduce using rule 107 (expresion_simple -> ID .)
    POR             reduce using rule 107 (expresion_simple -> ID .)
    ENTRE           reduce using rule 107 (expresion_simple -> ID .)
    MODULO          reduce using rule 107 (expresion_simple -> ID .)
    MAS             reduce using rule 107 (expresion_simple -> ID .)
    MENOS           reduce using rule 107 (expresion_simple -> ID .)
    AND             reduce using rule 107 (expresion_simple -> ID .)
    OR              reduce using rule 107 (expresion_simple -> ID .)
    MAYOR           reduce using rule 107 (expresion_simple -> ID .)
    MENOR           reduce using rule 107 (expresion_simple -> ID .)
    MAYORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    MENORIGUAL      reduce using rule 107 (expresion_simple -> ID .)
    IGUAL           reduce using rule 107 (expresion_simple -> ID .)
    NOIGUAL         reduce using rule 107 (expresion_simple -> ID .)
    CORCHIZQ        shift and go to state 106
    IS              shift and go to state 81
    PUNTOCOMA       reduce using rule 97 (concatenables -> ID .)

  ! CORCHDER        [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! PARDER          [ reduce using rule 107 (expresion_simple -> ID .) ]
  ! DOSPUNTOS       [ reduce using rule 107 (expresion_simple -> ID .) ]


state 216

    (55) expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .

    POTENCIA        reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    POR             reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    ENTRE           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    MODULO          reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    MAS             reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    MENOS           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    AND             reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    OR              reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    MAYOR           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    MENOR           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    MAYORIGUAL      reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    MENORIGUAL      reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    IGUAL           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    NOIGUAL         reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    CORCHDER        reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    DOSPUNTOS       reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    $end            reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    WRITE           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    IF              reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    READ            reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    ID              reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    SUMMON          reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    FUNC            reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    RETURN          reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    BREAK           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    VAR             reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    WHILA           reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    FOR             reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    CADENA          reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    ENTERO          reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    CORCHIZQ        reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    PARIZQ          reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    DECIMAL         reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    END             reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    THEN            reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    PARDER          reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)
    COMA            reduce using rule 55 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS CORCHDER .)



state 217

    (57) expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite . CORCHDER

    CORCHDER        shift and go to state 225



state 218

    (36) enunciado_if -> IF expresion_condicion THEN enunciados END . enunciado_else
    (37) enunciado_else -> . ELSE enunciados END enunciado_else
    (38) enunciado_else -> . vacio
    (2) vacio -> .

    ELSE            shift and go to state 227
    $end            reduce using rule 2 (vacio -> .)
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    CORCHIZQ        reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)


    enunciado_else                 shift and go to state 226
    vacio                          shift and go to state 228

state 219

    (105) mas_elementos -> COMA expresion mas_elementos .

    PARDER          reduce using rule 105 (mas_elementos -> COMA expresion mas_elementos .)
    CORCHDER        reduce using rule 105 (mas_elementos -> COMA expresion mas_elementos .)



state 220

    (101) mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .

    AND             reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    OR              reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    MAYOR           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    MENOR           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    MAYORIGUAL      reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    MENORIGUAL      reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    IGUAL           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    NOIGUAL         reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    $end            reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    WRITE           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    IF              reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    READ            reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    ID              reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    SUMMON          reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    FUNC            reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    RETURN          reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    BREAK           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    VAR             reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    WHILA           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    FOR             reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    CADENA          reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    ENTERO          reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    CORCHIZQ        reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    MENOS           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    PARIZQ          reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    DECIMAL         reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    END             reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    PARDER          reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    COMA            reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    CORCHDER        reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    POTENCIA        reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    POR             reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    ENTRE           reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    MODULO          reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    MAS             reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    THEN            reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)
    DOSPUNTOS       reduce using rule 101 (mas_cadenas -> PUNTOCOMA concatenables mas_cadenas .)



state 221

    (35) enunciado_for -> FOR ID IN expfor enunciados_ciclos END .

    WRITE           reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    IF              reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    READ            reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    ID              reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    SUMMON          reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    FUNC            reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    RETURN          reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    BREAK           reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    VAR             reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    WHILA           reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    FOR             reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    CADENA          reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    ENTERO          reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    CORCHIZQ        reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    MENOS           reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    PARIZQ          reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    DECIMAL         reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    $end            reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)
    END             reduce using rule 35 (enunciado_for -> FOR ID IN expfor enunciados_ciclos END .)



state 222

    (43) enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados . END
    (25) enunciados_ciclos -> enunciados .

  ! shift/reduce conflict for END resolved as shift.
    END             shift and go to state 229
    WRITE           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    IF              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    READ            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ID              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    SUMMON          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FUNC            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    RETURN          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    BREAK           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    VAR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    WHILA           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FOR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CADENA          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ENTERO          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CORCHIZQ        reduce using rule 25 (enunciados_ciclos -> enunciados .)
    MENOS           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    PARIZQ          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    DECIMAL         reduce using rule 25 (enunciados_ciclos -> enunciados .)

  ! END             [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]


state 223

    (45) parametrosf -> ID IS expresion . mas_elementosf
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (47) mas_elementosf -> . COMA ID mas_elementosf
    (48) mas_elementosf -> . COMA ID IS expresion mas_elementosf
    (49) mas_elementosf -> . vacio
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL
    (2) vacio -> .

    COMA            shift and go to state 209
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86
    PARDER          reduce using rule 2 (vacio -> .)


    vacio                          shift and go to state 208
    mas_elementosf                 shift and go to state 230
    operador_comparacion           shift and go to state 87

state 224

    (47) mas_elementosf -> COMA ID . mas_elementosf
    (48) mas_elementosf -> COMA ID . IS expresion mas_elementosf
    (47) mas_elementosf -> . COMA ID mas_elementosf
    (48) mas_elementosf -> . COMA ID IS expresion mas_elementosf
    (49) mas_elementosf -> . vacio
    (2) vacio -> .

    IS              shift and go to state 232
    COMA            shift and go to state 209
    PARDER          reduce using rule 2 (vacio -> .)


    mas_elementosf                 shift and go to state 231
    vacio                          shift and go to state 208

state 225

    (57) expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .

    POTENCIA        reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    POR             reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    ENTRE           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    MODULO          reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    MAS             reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    MENOS           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    AND             reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    OR              reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    MAYOR           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    MENOR           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    MAYORIGUAL      reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    MENORIGUAL      reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    IGUAL           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    NOIGUAL         reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    CORCHDER        reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    DOSPUNTOS       reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    $end            reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    WRITE           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    IF              reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    READ            reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    ID              reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    SUMMON          reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    FUNC            reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    RETURN          reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    BREAK           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    VAR             reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    WHILA           reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    FOR             reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    CADENA          reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    ENTERO          reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    CORCHIZQ        reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    PARIZQ          reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    DECIMAL         reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    END             reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    THEN            reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    PARDER          reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)
    COMA            reduce using rule 57 (expresion_lista -> ID CORCHIZQ limite DOSPUNTOS limite CORCHDER .)



state 226

    (36) enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .

    END             reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    WRITE           reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    IF              reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    READ            reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    ID              reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    SUMMON          reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    FUNC            reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    RETURN          reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    BREAK           reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    VAR             reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    WHILA           reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    FOR             reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    CADENA          reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    ENTERO          reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    CORCHIZQ        reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    MENOS           reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    PARIZQ          reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    DECIMAL         reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)
    $end            reduce using rule 36 (enunciado_if -> IF expresion_condicion THEN enunciados END enunciado_else .)



state 227

    (37) enunciado_else -> ELSE . enunciados END enunciado_else
    (3) enunciados -> . enunciado enunciados
    (4) enunciados -> . vacio
    (5) enunciado -> . enunciado_print
    (6) enunciado -> . enunciado_loop
    (7) enunciado -> . enunciado_if
    (8) enunciado -> . enunciado_read
    (9) enunciado -> . enunciado_asignacion
    (10) enunciado -> . enunciado_invocar
    (11) enunciado -> . enunciado_declaracion
    (12) enunciado -> . enunciado_return
    (13) enunciado -> . enunciados_ciclos
    (14) enunciado -> . variables
    (15) enunciado -> . expresion_comparacion
    (2) vacio -> .
    (22) enunciado_print -> . WRITE expresion
    (23) enunciado_loop -> . enunciado_whila
    (24) enunciado_loop -> . enunciado_for
    (36) enunciado_if -> . IF expresion_condicion THEN enunciados END enunciado_else
    (39) enunciado_read -> . READ expresion
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (43) enunciado_declaracion -> . FUNC ID PARIZQ parametrosf PARDER enunciados END
    (50) enunciado_return -> . RETURN expresion
    (25) enunciados_ciclos -> . enunciados
    (26) enunciados_ciclos -> . BREAK
    (16) variables -> . VAR ID mas_variables
    (17) variables -> . VAR enunciado_asignacion mas_variables
    (18) variables -> . vacio
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (29) enunciado_whila -> . WHILA expresion_condicion THEN enunciados_ciclos END
    (35) enunciado_for -> . FOR ID IN expfor enunciados_ciclos END
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER

  ! shift/reduce conflict for WRITE resolved as shift.
  ! shift/reduce conflict for IF resolved as shift.
  ! shift/reduce conflict for READ resolved as shift.
  ! shift/reduce conflict for ID resolved as shift.
  ! shift/reduce conflict for SUMMON resolved as shift.
  ! shift/reduce conflict for FUNC resolved as shift.
  ! shift/reduce conflict for RETURN resolved as shift.
  ! shift/reduce conflict for BREAK resolved as shift.
  ! shift/reduce conflict for VAR resolved as shift.
  ! shift/reduce conflict for WHILA resolved as shift.
  ! shift/reduce conflict for FOR resolved as shift.
  ! shift/reduce conflict for CADENA resolved as shift.
  ! shift/reduce conflict for ENTERO resolved as shift.
  ! shift/reduce conflict for CORCHIZQ resolved as shift.
  ! shift/reduce conflict for MENOS resolved as shift.
  ! shift/reduce conflict for PARIZQ resolved as shift.
  ! shift/reduce conflict for DECIMAL resolved as shift.
    END             reduce using rule 2 (vacio -> .)
    WRITE           shift and go to state 25
    IF              shift and go to state 32
    READ            shift and go to state 6
    ID              shift and go to state 31
    SUMMON          shift and go to state 15
    FUNC            shift and go to state 27
    RETURN          shift and go to state 5
    BREAK           shift and go to state 40
    VAR             shift and go to state 4
    WHILA           shift and go to state 10
    FOR             shift and go to state 23
    CADENA          shift and go to state 13
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24

  ! WRITE           [ reduce using rule 2 (vacio -> .) ]
  ! IF              [ reduce using rule 2 (vacio -> .) ]
  ! READ            [ reduce using rule 2 (vacio -> .) ]
  ! ID              [ reduce using rule 2 (vacio -> .) ]
  ! SUMMON          [ reduce using rule 2 (vacio -> .) ]
  ! FUNC            [ reduce using rule 2 (vacio -> .) ]
  ! RETURN          [ reduce using rule 2 (vacio -> .) ]
  ! BREAK           [ reduce using rule 2 (vacio -> .) ]
  ! VAR             [ reduce using rule 2 (vacio -> .) ]
  ! WHILA           [ reduce using rule 2 (vacio -> .) ]
  ! FOR             [ reduce using rule 2 (vacio -> .) ]
  ! CADENA          [ reduce using rule 2 (vacio -> .) ]
  ! ENTERO          [ reduce using rule 2 (vacio -> .) ]
  ! CORCHIZQ        [ reduce using rule 2 (vacio -> .) ]
  ! MENOS           [ reduce using rule 2 (vacio -> .) ]
  ! PARIZQ          [ reduce using rule 2 (vacio -> .) ]
  ! DECIMAL         [ reduce using rule 2 (vacio -> .) ]

    variables                      shift and go to state 7
    enunciado_declaracion          shift and go to state 8
    enunciado_read                 shift and go to state 9
    enunciado_return               shift and go to state 12
    enunciado_print                shift and go to state 19
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_pow                  shift and go to state 16
    expresion_mul                  shift and go to state 17
    enunciado                      shift and go to state 18
    expresion_lst                  shift and go to state 21
    enunciados                     shift and go to state 233
    expresion_suma                 shift and go to state 34
    enunciado_whila                shift and go to state 26
    enunciado_invocar              shift and go to state 28
    enunciado_asignacion           shift and go to state 29
    lista                          shift and go to state 30
    expresion_simple               shift and go to state 42
    expresion                      shift and go to state 33
    expresion_concatenacion        shift and go to state 35
    enunciado_for                  shift and go to state 36
    enunciados_ciclos              shift and go to state 37
    enunciado_loop                 shift and go to state 38
    vacio                          shift and go to state 39
    enunciado_if                   shift and go to state 43
    expresion_comparacion          shift and go to state 44

state 228

    (38) enunciado_else -> vacio .

    $end            reduce using rule 38 (enunciado_else -> vacio .)
    WRITE           reduce using rule 38 (enunciado_else -> vacio .)
    IF              reduce using rule 38 (enunciado_else -> vacio .)
    READ            reduce using rule 38 (enunciado_else -> vacio .)
    ID              reduce using rule 38 (enunciado_else -> vacio .)
    SUMMON          reduce using rule 38 (enunciado_else -> vacio .)
    FUNC            reduce using rule 38 (enunciado_else -> vacio .)
    RETURN          reduce using rule 38 (enunciado_else -> vacio .)
    BREAK           reduce using rule 38 (enunciado_else -> vacio .)
    VAR             reduce using rule 38 (enunciado_else -> vacio .)
    WHILA           reduce using rule 38 (enunciado_else -> vacio .)
    FOR             reduce using rule 38 (enunciado_else -> vacio .)
    CADENA          reduce using rule 38 (enunciado_else -> vacio .)
    ENTERO          reduce using rule 38 (enunciado_else -> vacio .)
    CORCHIZQ        reduce using rule 38 (enunciado_else -> vacio .)
    MENOS           reduce using rule 38 (enunciado_else -> vacio .)
    PARIZQ          reduce using rule 38 (enunciado_else -> vacio .)
    DECIMAL         reduce using rule 38 (enunciado_else -> vacio .)
    END             reduce using rule 38 (enunciado_else -> vacio .)



state 229

    (43) enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .

    END             reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    WRITE           reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    IF              reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    READ            reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    ID              reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    SUMMON          reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    FUNC            reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    RETURN          reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    BREAK           reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    VAR             reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    WHILA           reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    FOR             reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    CADENA          reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    ENTERO          reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    CORCHIZQ        reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    MENOS           reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    PARIZQ          reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    DECIMAL         reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)
    $end            reduce using rule 43 (enunciado_declaracion -> FUNC ID PARIZQ parametrosf PARDER enunciados END .)



state 230

    (45) parametrosf -> ID IS expresion mas_elementosf .

    PARDER          reduce using rule 45 (parametrosf -> ID IS expresion mas_elementosf .)



state 231

    (47) mas_elementosf -> COMA ID mas_elementosf .

    PARDER          reduce using rule 47 (mas_elementosf -> COMA ID mas_elementosf .)



state 232

    (48) mas_elementosf -> COMA ID IS . expresion mas_elementosf
    (51) expresion -> . expresion_suma
    (52) expresion -> . expresion_comparacion
    (53) expresion -> . expresion_concatenacion
    (72) expresion_suma -> . expresion_mul operador_suma expresion_suma
    (73) expresion_suma -> . expresion_mul
    (83) expresion_comparacion -> . expresion operador_comparacion expresion2
    (95) expresion_concatenacion -> . concatenables PUNTOCOMA concatenables mas_cadenas
    (74) expresion_mul -> . expresion_pow operador_mul expresion_mul
    (75) expresion_mul -> . expresion_pow
    (96) concatenables -> . CADENA
    (97) concatenables -> . ID
    (98) concatenables -> . ENTERO
    (99) concatenables -> . lista
    (100) concatenables -> . enunciado_invocar
    (76) expresion_pow -> . expresion_simple POTENCIA expresion_simple
    (77) expresion_pow -> . expresion_simple
    (103) lista -> . CORCHIZQ CORCHDER
    (104) lista -> . CORCHIZQ expresion mas_elementos CORCHDER
    (42) enunciado_invocar -> . SUMMON ID PARIZQ parametros PARDER
    (107) expresion_simple -> . ID
    (108) expresion_simple -> . ENTERO
    (109) expresion_simple -> . MENOS expresion_simple
    (110) expresion_simple -> . PARIZQ expresion PARDER
    (111) expresion_simple -> . expresion_lista
    (112) expresion_simple -> . expresion_lst
    (113) expresion_simple -> . enunciado_invocar
    (114) expresion_simple -> . enunciado_asignacion
    (115) expresion_simple -> . lista
    (116) expresion_simple -> . CADENA
    (117) expresion_simple -> . DECIMAL
    (54) expresion_lista -> . ID CORCHIZQ DOSPUNTOS CORCHDER
    (55) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS CORCHDER
    (56) expresion_lista -> . ID CORCHIZQ DOSPUNTOS limite CORCHDER
    (57) expresion_lista -> . ID CORCHIZQ limite DOSPUNTOS limite CORCHDER
    (58) expresion_lst -> . ID CORCHIZQ pos CORCHDER
    (40) enunciado_asignacion -> . ID IS expresion
    (41) enunciado_asignacion -> . expresion_lst IS expresion

    CADENA          shift and go to state 13
    ID              shift and go to state 53
    ENTERO          shift and go to state 20
    CORCHIZQ        shift and go to state 46
    SUMMON          shift and go to state 15
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 11
    DECIMAL         shift and go to state 24


    expresion_pow                  shift and go to state 16
    concatenables                  shift and go to state 14
    expresion_lista                shift and go to state 45
    expresion_lst                  shift and go to state 50
    expresion_mul                  shift and go to state 17
    expresion_suma                 shift and go to state 34
    enunciado_invocar              shift and go to state 51
    enunciado_asignacion           shift and go to state 52
    lista                          shift and go to state 30
    expresion                      shift and go to state 234
    expresion_concatenacion        shift and go to state 35
    expresion_simple               shift and go to state 42
    expresion_comparacion          shift and go to state 55

state 233

    (37) enunciado_else -> ELSE enunciados . END enunciado_else
    (25) enunciados_ciclos -> enunciados .

  ! shift/reduce conflict for END resolved as shift.
    END             shift and go to state 235
    WRITE           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    IF              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    READ            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ID              reduce using rule 25 (enunciados_ciclos -> enunciados .)
    SUMMON          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FUNC            reduce using rule 25 (enunciados_ciclos -> enunciados .)
    RETURN          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    BREAK           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    VAR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    WHILA           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    FOR             reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CADENA          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    ENTERO          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    CORCHIZQ        reduce using rule 25 (enunciados_ciclos -> enunciados .)
    MENOS           reduce using rule 25 (enunciados_ciclos -> enunciados .)
    PARIZQ          reduce using rule 25 (enunciados_ciclos -> enunciados .)
    DECIMAL         reduce using rule 25 (enunciados_ciclos -> enunciados .)

  ! END             [ reduce using rule 25 (enunciados_ciclos -> enunciados .) ]


state 234

    (48) mas_elementosf -> COMA ID IS expresion . mas_elementosf
    (83) expresion_comparacion -> expresion . operador_comparacion expresion2
    (47) mas_elementosf -> . COMA ID mas_elementosf
    (48) mas_elementosf -> . COMA ID IS expresion mas_elementosf
    (49) mas_elementosf -> . vacio
    (87) operador_comparacion -> . AND
    (88) operador_comparacion -> . OR
    (89) operador_comparacion -> . MAYOR
    (90) operador_comparacion -> . MENOR
    (91) operador_comparacion -> . MAYORIGUAL
    (92) operador_comparacion -> . MENORIGUAL
    (93) operador_comparacion -> . IGUAL
    (94) operador_comparacion -> . NOIGUAL
    (2) vacio -> .

    COMA            shift and go to state 209
    AND             shift and go to state 83
    OR              shift and go to state 84
    MAYOR           shift and go to state 91
    MENOR           shift and go to state 85
    MAYORIGUAL      shift and go to state 88
    MENORIGUAL      shift and go to state 89
    IGUAL           shift and go to state 90
    NOIGUAL         shift and go to state 86
    PARDER          reduce using rule 2 (vacio -> .)


    vacio                          shift and go to state 208
    mas_elementosf                 shift and go to state 236
    operador_comparacion           shift and go to state 87

state 235

    (37) enunciado_else -> ELSE enunciados END . enunciado_else
    (37) enunciado_else -> . ELSE enunciados END enunciado_else
    (38) enunciado_else -> . vacio
    (2) vacio -> .

    ELSE            shift and go to state 227
    $end            reduce using rule 2 (vacio -> .)
    WRITE           reduce using rule 2 (vacio -> .)
    IF              reduce using rule 2 (vacio -> .)
    READ            reduce using rule 2 (vacio -> .)
    ID              reduce using rule 2 (vacio -> .)
    SUMMON          reduce using rule 2 (vacio -> .)
    FUNC            reduce using rule 2 (vacio -> .)
    RETURN          reduce using rule 2 (vacio -> .)
    BREAK           reduce using rule 2 (vacio -> .)
    VAR             reduce using rule 2 (vacio -> .)
    WHILA           reduce using rule 2 (vacio -> .)
    FOR             reduce using rule 2 (vacio -> .)
    CADENA          reduce using rule 2 (vacio -> .)
    ENTERO          reduce using rule 2 (vacio -> .)
    CORCHIZQ        reduce using rule 2 (vacio -> .)
    MENOS           reduce using rule 2 (vacio -> .)
    PARIZQ          reduce using rule 2 (vacio -> .)
    DECIMAL         reduce using rule 2 (vacio -> .)
    END             reduce using rule 2 (vacio -> .)


    enunciado_else                 shift and go to state 237
    vacio                          shift and go to state 228

state 236

    (48) mas_elementosf -> COMA ID IS expresion mas_elementosf .

    PARDER          reduce using rule 48 (mas_elementosf -> COMA ID IS expresion mas_elementosf .)



state 237

    (37) enunciado_else -> ELSE enunciados END enunciado_else .

    $end            reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    WRITE           reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    IF              reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    READ            reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    ID              reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    SUMMON          reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    FUNC            reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    RETURN          reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    BREAK           reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    VAR             reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    WHILA           reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    FOR             reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    CADENA          reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    ENTERO          reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    CORCHIZQ        reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    MENOS           reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    PARIZQ          reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    DECIMAL         reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)
    END             reduce using rule 37 (enunciado_else -> ELSE enunciados END enunciado_else .)


